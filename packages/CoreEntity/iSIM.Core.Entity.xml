<?xml version="1.0"?>
<doc>
    <assembly>
        <name>iSIM.Core.Entity</name>
    </assembly>
    <members>
        <member name="T:iSIM.Core.Entity.Dto.AssetAuthorizationDto">
            <summary>
            AssetAuthorizationDto
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.AssetAuthorizationDto.IdAsset">
            <summary>
            Gets or sets the identifier asset.
            </summary>
            <value>
            The identifier asset.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.AssetAuthorizationDto.IsAllowed">
            <summary>
            Gets or sets a value indicating whether this instance is allowed.
            </summary>
            <value>
              <c>true</c> if this instance is allowed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.AssetAuthorizationDto.Role">
            <summary>
            Gets or sets the role.
            </summary>
            <value>
            The role.
            </value>
        </member>
        <member name="T:iSIM.Core.Entity.Dto.AssetDto">
            <summary>
            AssetDto
            </summary>
            <seealso cref="!:iSIM.Core.Common.Interface.DtoBase&lt;iSIM.Core.Entity.Entity.TblAsset, iSIM.Core.Entity.Dto.AssetDto&gt;" />
        </member>
        <member name="P:iSIM.Core.Entity.Dto.AssetDto.IsActive">
            <summary>
            Gets or sets a value indicating whether this instance is active.
            </summary>
            <value>
              <c>true</c> if this instance is active; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.AssetDto.IsEndpoint">
            <summary>
            Gets or sets a value indicating whether this instance is endpoint.
            </summary>
            <value>
              <c>true</c> if this instance is endpoint; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.AssetDto.AssetOrder">
            <summary>
            Gets or sets the asset order.
            </summary>
            <value>
            The asset order.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.AssetDto.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.AssetDto.CustomField">
            <summary>
            Gets or sets the custom field.
            </summary>
            <value>
            The custom field.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.AssetDto.AssetTypeDto">
            <summary>
            Gets or sets the asset type dto.
            </summary>
            <value>
            The asset type dto.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.AssetDto.AssetLocationTypeDto">
            <summary>
            Gets or sets the asset location type dto.
            </summary>
            <value>
            The asset location type dto.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.AssetDto.EndpointDtos">
            <summary>
            Gets or sets the endpoint dtos.
            </summary>
            <value>
            The endpoint dtos.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.AssetDto.GeometryDto">
            <summary>
            Gets or sets the geometry dto.
            </summary>
            <value>
            The geometry dto.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.AssetDto.AssetRelatedVmsDto">
            <summary>
            Gets or sets the asset related VMS dto.
            </summary>
            <value>
            The asset related VMS dto.
            </value>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.AssetDto.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:iSIM.Core.Entity.Dto.AssetDto"/> class.
            </summary>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.AssetDto.ToEntity">
            <summary>
            To the entity.
            </summary>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.AssetDto.FromEntity(iSIM.Core.Entity.Entity.TblAsset)">
            <summary>
            Froms the entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.AssetDto.Select">
            <summary>
            Selects this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:iSIM.Core.Entity.Dto.AssetGroupDto">
            <summary>
            AssetGroupDto
            </summary>
            <seealso cref="!:iSIM.Core.Common.Interface.DtoBase&lt;iSIM.Core.Entity.Entity.TblAsset, iSIM.Core.Entity.Dto.AssetGroupDto&gt;" />
        </member>
        <member name="P:iSIM.Core.Entity.Dto.AssetGroupDto.AssetDto">
            <summary>
            Gets or sets the asset dto.
            </summary>
            <value>
            The asset dto.
            </value>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.AssetGroupDto.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:iSIM.Core.Entity.Dto.AssetGroupDto"/> class.
            </summary>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.AssetGroupDto.ToEntity">
            <summary>
            To the entity.
            </summary>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.AssetGroupDto.Select">
            <summary>
            Selects this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:iSIM.Core.Entity.Dto.AssetLocationTypeDto">
            <summary>
            AssetLocationTypeDto
            </summary>
            <seealso cref="!:iSIM.Core.Common.Interface.DtoBase&lt;iSIM.Core.Entity.Entity.TblEnumAssetLocationType, iSIM.Core.Entity.Dto.AssetLocationTypeDto&gt;" />
        </member>
        <member name="P:iSIM.Core.Entity.Dto.AssetLocationTypeDto.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.AssetLocationTypeDto.AssetLocationType">
            <summary>
            Gets or sets the type of the asset location.
            </summary>
            <value>
            The type of the asset location.
            </value>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.AssetLocationTypeDto.ToEntity">
            <summary>
            To the entity.
            </summary>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.AssetLocationTypeDto.Select">
            <summary>
            Selects this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:iSIM.Core.Entity.Dto.AssetTypeDto">
            <summary>
            AssetTypeDto
            </summary>
            <seealso cref="!:iSIM.Core.Common.Interface.DtoBase&lt;iSIM.Core.Entity.Entity.TblEnumAssetType, iSIM.Core.Entity.Dto.AssetTypeDto&gt;" />
        </member>
        <member name="P:iSIM.Core.Entity.Dto.AssetTypeDto.IdParrent">
            <summary>
            Gets or sets the parent id.
            </summary>
            <value>
            The prent id.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.AssetTypeDto.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.AssetTypeDto.AssetType">
            <summary>
            Gets or sets the type of the asset.
            </summary>
            <value>
            The type of the asset.
            </value>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.AssetTypeDto.ToEntity">
            <summary>
            To the entity.
            </summary>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.AssetTypeDto.Select">
            <summary>
            Selects this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:iSIM.Core.Entity.Dto.AuthorizationDto">
            <summary>
            AuthorizationDto
            </summary>
            <seealso cref="!:iSIM.Core.Common.Interface.ManipulationDtoBase&lt;iSIM.Core.Entity.Entity.TblAuthorization, iSIM.Core.Entity.Dto.AuthorizationDto&gt;" />
        </member>
        <member name="P:iSIM.Core.Entity.Dto.AuthorizationDto.IdRoleOrRoleGroup">
            <summary>
            Gets or sets the identifier role or role group.
            </summary>
            <value>
            The identifier role or role group.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.AuthorizationDto.IdRelationTypeForRole">
            <summary>
            Gets or sets the identifier relation type for role.
            </summary>
            <value>
            The identifier relation type for role.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.AuthorizationDto.IdUserOrUserGroup">
            <summary>
            Gets or sets the identifier user or user group.
            </summary>
            <value>
            The identifier user or user group.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.AuthorizationDto.IdRelationTypeForUser">
            <summary>
            Gets or sets the identifier relation type for user.
            </summary>
            <value>
            The identifier relation type for user.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.AuthorizationDto.IsAllowed">
            <summary>
            Gets or sets a value indicating whether this instance is allowed.
            </summary>
            <value>
              <c>true</c> if this instance is allowed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.AuthorizationDto.CustomField">
            <summary>
            Gets or sets the custom field.
            </summary>
            <value>
            The custom field.
            </value>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.AuthorizationDto.ToEntity">
            <summary>
            To the entity.
            </summary>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.AuthorizationDto.Select">
            <summary>
            Selects this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.AuthorizationDto.IsExist">
            <summary>
            Determines whether this instance is exist.
            </summary>
            <returns></returns>
        </member>
        <member name="T:iSIM.Core.Entity.Dto.BasicAssetDto">
            <summary>
            BasicAssetDto
            </summary>
            <seealso cref="!:iSIM.Core.Common.Interface.DtoBase&lt;iSIM.Core.Entity.Entity.TblAsset, iSIM.Core.Entity.Dto.BasicAssetDto&gt;" />
        </member>
        <member name="P:iSIM.Core.Entity.Dto.BasicAssetDto.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.BasicAssetDto.AssetType">
            <summary>
            Gets or sets the type of the asset.
            </summary>
            <value>
            The type of the asset.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.BasicAssetDto.GeometryDto">
            <summary>
            Gets or sets the geometry dto.
            </summary>
            <value>
            The geometry dto.
            </value>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.BasicAssetDto.ToEntity">
            <summary>
            To the entity.
            </summary>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.BasicAssetDto.Select">
            <summary>
            Selects this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:iSIM.Core.Entity.Dto.BasicClientDto">
            <summary>
            BasicClientDto
            </summary>
            <seealso cref="!:iSIM.Core.Common.Interface.DtoBase&lt;iSIM.Core.Entity.Entity.TblClient, iSIM.Core.Entity.Dto.BasicClientDto&gt;" />
        </member>
        <member name="P:iSIM.Core.Entity.Dto.BasicClientDto.IsActive">
            <summary>
            Gets or sets a value indicating whether this instance is active.
            </summary>
            <value>
              <c>true</c> if this instance is active; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.BasicClientDto.Uuid">
            <summary>
            Gets or sets the UUID.
            </summary>
            <value>
            The UUID.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.BasicClientDto.PcName">
            <summary>
            Gets or sets the name of the pc.
            </summary>
            <value>
            The name of the pc.
            </value>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.BasicClientDto.ToEntity">
            <summary>
            To the entity.
            </summary>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.BasicClientDto.Select">
            <summary>
            Selects this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:iSIM.Core.Entity.Dto.BasicEventDto">
            <summary>
            BasicEventDto
            </summary>
            <seealso cref="!:iSIM.Core.Common.Interface.ManipulationDtoBase&lt;iSIM.Core.Entity.Entity.TblLogEvent, iSIM.Core.Entity.Dto.BasicEventDto&gt;" />
        </member>
        <member name="P:iSIM.Core.Entity.Dto.BasicEventDto.CreatedAt">
            <summary>
            Gets or sets the created at.
            </summary>
            <value>
            The created at.
            </value>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.BasicEventDto.ToEntity">
            <summary>
            To the entity.
            </summary>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.BasicEventDto.Select">
            <summary>
            Selects this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.BasicEventDto.IsExist">
            <summary>
            Determines whether this instance is exist.
            </summary>
            <returns></returns>
        </member>
        <member name="T:iSIM.Core.Entity.Dto.BasicIncidentDto">
            <summary>
            BasicIncidentDto
            </summary>
            <seealso cref="!:iSIM.Core.Common.Interface.DtoBase&lt;iSIM.Core.Entity.Entity.TblIncident, iSIM.Core.Entity.Dto.BasicIncidentDto&gt;" />
        </member>
        <member name="P:iSIM.Core.Entity.Dto.BasicIncidentDto.IsPositive">
            <summary>
            Gets or sets the is positive.
            </summary>
            <value>
            The is positive.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.BasicIncidentDto.CustomField">
            <summary>
            Gets or sets the custom field.
            </summary>
            <value>
            The custom field.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.BasicIncidentDto.CreatedAt">
            <summary>
            Gets or sets the created at.
            </summary>
            <value>
            The created at.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.BasicIncidentDto.PriorityDto">
            <summary>
            Gets or sets the priority dto.
            </summary>
            <value>
            The priority dto.
            </value>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.BasicIncidentDto.ToEntity">
            <summary>
            To the entity.
            </summary>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.BasicIncidentDto.Select">
            <summary>
            Selects this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:iSIM.Core.Entity.Dto.BasicPerspectiveDto">
            <summary>
            BasicPerspectiveDto
            </summary>
            <seealso cref="!:iSIM.Core.Common.Interface.DtoBase&lt;iSIM.Core.Entity.Entity.TblPerspective, iSIM.Core.Entity.Dto.BasicPerspectiveDto&gt;" />
        </member>
        <member name="P:iSIM.Core.Entity.Dto.BasicPerspectiveDto.IsActive">
            <summary>
            Gets or sets a value indicating whether this instance is active.
            </summary>
            <value>
              <c>true</c> if this instance is active; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.BasicPerspectiveDto.Accessible">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:iSIM.Core.Entity.Dto.BasicPerspectiveDto"/> is accessible.
            </summary>
            <value>
              <c>true</c> if accessible; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.BasicPerspectiveDto.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.BasicPerspectiveDto.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>
            The description.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.BasicPerspectiveDto.UserId">
            <summary>
            Gets or sets the user identifier.
            </summary>
            <value>
            The user identifier.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.BasicPerspectiveDto.OwnerFirstname">
            <summary>
            Gets or sets the owner first name.
            </summary>
            <value>
            The owner first name.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.BasicPerspectiveDto.OwnerLastname">
            <summary>
            Gets or sets the owner last name.
            </summary>
            <value>
            The owner last name.
            </value>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.BasicPerspectiveDto.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:iSIM.Core.Entity.Dto.BasicPerspectiveDto"/> class.
            </summary>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.BasicPerspectiveDto.ToEntity">
            <summary>
            To the entity.
            </summary>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.BasicPerspectiveDto.Select">
            <summary>
            Selects this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:iSIM.Core.Entity.Dto.BasicTrafficViolationDto">
            <summary>
            BasicTrafficViolationDto
            </summary>
            <seealso cref="!:iSIM.Core.Common.Interface.DtoBase&lt;iSIM.Core.Entity.Entity.TblTrafficViolation, iSIM.Core.Entity.Dto.BasicTrafficViolationDto&gt;" />
        </member>
        <member name="P:iSIM.Core.Entity.Dto.BasicTrafficViolationDto.CreatedAt">
            <summary>
            Gets or sets the created at.
            </summary>
            <value>
            The created at.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.BasicTrafficViolationDto.ViolationDate">
            <summary>
            Gets or sets the violation date.
            </summary>
            <value>
            The violation date.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.BasicTrafficViolationDto.ViolationIdentifier">
            <summary>
            Gets or sets the violation identifier.
            </summary>
            <value>
            The violation identifier.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.BasicTrafficViolationDto.LastUpdateDate">
            <summary>
            Gets or sets the last update date.
            </summary>
            <value>
            The last update date.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.BasicTrafficViolationDto.PlateNumber">
            <summary>
            Gets or sets the plate number.
            </summary>
            <value>
            The plate number.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.BasicTrafficViolationDto.PlateLetter">
            <summary>
            Gets or sets the plate letter.
            </summary>
            <value>
            The plate letter.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.BasicTrafficViolationDto.VehicleOwnerName">
            <summary>
            Gets or sets the name of the vehicle owner.
            </summary>
            <value>
            The name of the vehicle owner.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.BasicTrafficViolationDto.VehicleOwnerMobileNumber">
            <summary>
            Gets or sets the vehicle owner mobile number.
            </summary>
            <value>
            The vehicle owner mobile number.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.BasicTrafficViolationDto.VehicleYear">
            <summary>
            Gets or sets the vehicle year.
            </summary>
            <value>
            The vehicle year.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.BasicTrafficViolationDto.VehicleEngineNumber">
            <summary>
            Gets or sets the vehicle engine number.
            </summary>
            <value>
            The vehicle engine number.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.BasicTrafficViolationDto.Note">
            <summary>
            Gets or sets the note.
            </summary>
            <value>
            The note.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.BasicTrafficViolationDto.Error">
            <summary>
            Gets or sets the error.
            </summary>
            <value>
            The error.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.BasicTrafficViolationDto.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>
            The description.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.BasicTrafficViolationDto.CustomField">
            <summary>
            Gets or sets the custom field.
            </summary>
            <value>
            The custom field.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.BasicTrafficViolationDto.PlateTypeId">
            <summary>
            Gets or sets the plate type identifier.
            </summary>
            <value>
            The plate type identifier.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.BasicTrafficViolationDto.NationalityId">
            <summary>
            Gets or sets the nationality identifier.
            </summary>
            <value>
            The nationality identifier.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.BasicTrafficViolationDto.VehicleBrandId">
            <summary>
            Gets or sets the vehicle brand identifier.
            </summary>
            <value>
            The vehicle brand identifier.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.BasicTrafficViolationDto.VehicleModelId">
            <summary>
            Gets or sets the vehicle model identifier.
            </summary>
            <value>
            The vehicle model identifier.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.BasicTrafficViolationDto.VehicleTypeId">
            <summary>
            Gets or sets the vehicle type identifier.
            </summary>
            <value>
            The vehicle type identifier.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.BasicTrafficViolationDto.VehicleShapeId">
            <summary>
            Gets or sets the vehicle shape identifier.
            </summary>
            <value>
            The vehicle shape identifier.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.BasicTrafficViolationDto.VehicleColorId">
            <summary>
            Gets or sets the vehicle color identifier.
            </summary>
            <value>
            The vehicle color identifier.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.BasicTrafficViolationDto.VehicleColorShadeId">
            <summary>
            Gets or sets the vehicle color shade identifier.
            </summary>
            <value>
            The vehicle color shade identifier.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.BasicTrafficViolationDto.VehicleCountryId">
            <summary>
            Gets or sets the vehicle country identifier.
            </summary>
            <value>
            The vehicle country identifier.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.BasicTrafficViolationDto.IncidentDto">
            <summary>
            Gets or sets the incident dto.
            </summary>
            <value>
            The incident dto.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.BasicTrafficViolationDto.UserDto">
            <summary>
            Gets or sets the user dto.
            </summary>
            <value>
            The user dto.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.BasicTrafficViolationDto.ViolationStatus">
            <summary>
            Gets or sets the violation status.
            </summary>
            <value>
            The violation status.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.BasicTrafficViolationDto.LastUpdateUserDto">
            <summary>
            Gets or sets the last update user dto.
            </summary>
            <value>
            The last update user dto.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.BasicTrafficViolationDto.AssignedUserDtos">
            <summary>
            Gets or sets the assigned user dtos.
            </summary>
            <value>
            The assigned user dtos.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.BasicTrafficViolationDto.AssignedUserGroupDtos">
            <summary>
            Gets or sets the assigned user group dtos.
            </summary>
            <value>
            The assigned user group dtos.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.BasicTrafficViolationDto.TrafficViolationChargeDtos">
            <summary>
            Gets or sets the traffic violation charge dtos.
            </summary>
            <value>
            The traffic violation charge dtos.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.BasicTrafficViolationDto.TrafficViolationReasonDtos">
            <summary>
            Gets or sets the traffic violation reason dtos.
            </summary>
            <value>
            The traffic violation reason dtos.
            </value>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.BasicTrafficViolationDto.ToEntity">
            <summary>
            To the entity.
            </summary>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.BasicTrafficViolationDto.Select">
            <summary>
            Selects this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:iSIM.Core.Entity.Dto.BasicUserDto">
            <summary>
            BasicUserDto
            </summary>
            <seealso cref="!:iSIM.Core.Common.Interface.ManipulationDtoBase&lt;iSIM.Core.Entity.Entity.TblUser, iSIM.Core.Entity.Dto.BasicUserDto&gt;" />
        </member>
        <member name="P:iSIM.Core.Entity.Dto.BasicUserDto.IsActive">
            <summary>
            Gets or sets a value indicating whether this instance is active.
            </summary>
            <value>
              <c>true</c> if this instance is active; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.BasicUserDto.Username">
            <summary>
            Gets or sets the username.
            </summary>
            <value>
            The username.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.BasicUserDto.Firstname">
            <summary>
            Gets or sets the first name.
            </summary>
            <value>
            The first name.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.BasicUserDto.Lastname">
            <summary>
            Gets or sets the last name.
            </summary>
            <value>
            The last name.
            </value>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.BasicUserDto.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:iSIM.Core.Entity.Dto.BasicUserDto"/> class.
            </summary>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.BasicUserDto.ToEntity">
            <summary>
            To the entity.
            </summary>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.BasicUserDto.Select">
            <summary>
            Selects this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.BasicUserDto.IsExist">
            <summary>
            Determines whether this instance is exist.
            </summary>
            <returns></returns>
        </member>
        <member name="T:iSIM.Core.Entity.Dto.BasicUserGroupDto">
            <summary>
            BasicUserGroupDto
            </summary>
            <seealso cref="!:iSIM.Core.Common.Interface.ManipulationDtoBase&lt;iSIM.Core.Entity.Entity.TblUserGroup, iSIM.Core.Entity.Dto.BasicUserGroupDto&gt;" />
        </member>
        <member name="P:iSIM.Core.Entity.Dto.BasicUserGroupDto.IsActive">
            <summary>
            Gets or sets a value indicating whether this instance is active.
            </summary>
            <value>
              <c>true</c> if this instance is active; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.BasicUserGroupDto.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.BasicUserGroupDto.CustomField">
            <summary>
            Gets or sets the custom field.
            </summary>
            <value>
            The custom field.
            </value>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.BasicUserGroupDto.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:iSIM.Core.Entity.Dto.BasicUserGroupDto"/> class.
            </summary>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.BasicUserGroupDto.ToEntity">
            <summary>
            To the entity.
            </summary>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.BasicUserGroupDto.Select">
            <summary>
            Selects this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.BasicUserGroupDto.IsExist">
            <summary>
            Determines whether this instance is exist.
            </summary>
            <returns></returns>
        </member>
        <member name="T:iSIM.Core.Entity.Dto.BookmarkDto">
            <summary>
            BookmarkDto
            </summary>
            <seealso cref="!:iSIM.Core.Common.Interface.DtoBase&lt;iSIM.Core.Entity.Entity.TblBookmark, iSIM.Core.Entity.Dto.BookmarkDto&gt;" />
        </member>
        <member name="P:iSIM.Core.Entity.Dto.BookmarkDto.Message">
            <summary>
            Gets or sets the message.
            </summary>
            <value>
            The message.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.BookmarkDto.CustomField">
            <summary>
            Gets or sets the custom field.
            </summary>
            <value>
            The custom field.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.BookmarkDto.CreatedAt">
            <summary>
            Gets or sets the created at.
            </summary>
            <value>
            The created at.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.BookmarkDto.BookedmarkAt">
            <summary>
            Gets or sets the bookedmark at.
            </summary>
            <value>
            The bookedmark at.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.BookmarkDto.Asset">
            <summary>
            Gets or sets the asset.
            </summary>
            <value>
            The asset.
            </value>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.BookmarkDto.ToEntity">
            <summary>
            To the entity.
            </summary>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.BookmarkDto.Select">
            <summary>
            Selects this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:iSIM.Core.Entity.Dto.BrandDto">
            <summary>
            BrandDto
            </summary>
            <seealso cref="!:iSIM.Core.Common.Interface.DtoBase&lt;iSIM.Core.Entity.Entity.TblEnumBrand, iSIM.Core.Entity.Dto.BrandDto&gt;" />
        </member>
        <member name="P:iSIM.Core.Entity.Dto.BrandDto.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.BrandDto.Brand">
            <summary>
            Gets or sets the brand.
            </summary>
            <value>
            The brand.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.BrandDto.TvId">
            <summary>
            Gets or sets the tv identifier.
            </summary>
            <value>
            The tv identifier.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.BrandDto.BrandTypeDto">
            <summary>
            Gets or sets the brand type dto.
            </summary>
            <value>
            The brand type dto.
            </value>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.BrandDto.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:iSIM.Core.Entity.Dto.BrandDto"/> class.
            </summary>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.BrandDto.ToEntity">
            <summary>
            To the entity.
            </summary>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.BrandDto.Select">
            <summary>
            Selects this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:iSIM.Core.Entity.Dto.BrandTypeDto">
            <summary>
            BrandTypeDto
            </summary>
            <seealso cref="!:iSIM.Core.Common.Interface.DtoBase&lt;iSIM.Core.Entity.Entity.TblEnumBrandType, iSIM.Core.Entity.Dto.BrandTypeDto&gt;" />
        </member>
        <member name="P:iSIM.Core.Entity.Dto.BrandTypeDto.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.BrandTypeDto.BrandType">
            <summary>
            Gets or sets the type of the brand.
            </summary>
            <value>
            The type of the brand.
            </value>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.BrandTypeDto.ToEntity">
            <summary>
            To the entity.
            </summary>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.BrandTypeDto.Select">
            <summary>
            Selects this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:iSIM.Core.Entity.Dto.BuildingDto">
            <summary>
            BuildingDto
            </summary>
            <seealso cref="!:iSIM.Core.Common.Interface.DtoBase&lt;iSIM.Core.Entity.Entity.TblAsset, iSIM.Core.Entity.Dto.BuildingDto&gt;" />
        </member>
        <member name="P:iSIM.Core.Entity.Dto.BuildingDto.Type">
            <summary>
            Gets or sets the type.
            </summary>
            <value>
            The type.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.BuildingDto.SubType">
            <summary>
            Gets or sets the type of the sub.
            </summary>
            <value>
            The type of the sub.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.BuildingDto.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.BuildingDto.LatLng">
            <summary>
            Gets or sets the lat LNG.
            </summary>
            <value>
            The lat LNG.
            </value>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.BuildingDto.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:iSIM.Core.Entity.Dto.BuildingDto"/> class.
            </summary>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.BuildingDto.ToEntity">
            <summary>
            To the entity.
            </summary>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.BuildingDto.Select">
            <summary>
            Selects this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:iSIM.Core.Entity.Dto.BulkCameraAddDto">
            <summary>
            
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.BulkCameraAddDto.CameraDtos">
            <summary>
            Camera List
            </summary>
            <value>
            The camera dtos.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.BulkCameraAddDto.AssignParentAssetIdList">
            <summary>
            Parent asset id list
            </summary>
            <value>
            The assign parent asset identifier list.
            </value>
        </member>
        <member name="T:iSIM.Core.Entity.Dto.CameraDto">
            <summary>
            CameraDto
            </summary>
            <seealso cref="T:iSIM.Core.Entity.Dto.CameraDto" />
        </member>
        <member name="P:iSIM.Core.Entity.Dto.CameraDto.Uuid">
            <summary>
            Gets or sets the UUID.
            </summary>
            <value>
            The UUID.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.CameraDto.Model">
            <summary>
            Gets or sets the model.
            </summary>
            <value>
            The model.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.CameraDto.PostAlarmDuration">
            <summary>
            Gets or sets the duration of the post alarm.
            </summary>
            <value>
            The duration of the post alarm.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.CameraDto.PreAlarmDuration">
            <summary>
            Gets or sets the duration of the pre alarm.
            </summary>
            <value>
            The duration of the pre alarm.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.CameraDto.CustomField">
            <summary>
            Gets or sets the custom field.
            </summary>
            <value>
            The custom field.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.CameraDto.AssetDto">
            <summary>
            Gets or sets the asset dto.
            </summary>
            <value>
            The asset dto.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.CameraDto.CameraTypeDto">
            <summary>
            Gets or sets the camera type dto.
            </summary>
            <value>
            The camera type dto.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.CameraDto.ViewPortDto">
            <summary>
            Gets or sets the view port dto.
            </summary>
            <value>
            The view port dto.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.CameraDto.BrandDto">
            <summary>
            Gets or sets the brand dto.
            </summary>
            <value>
            The brand dto.
            </value>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.CameraDto.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:iSIM.Core.Entity.Dto.CameraDto"/> class.
            </summary>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.CameraDto.ToEntity">
            <summary>
            To the entity.
            </summary>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.CameraDto.Select">
            <summary>
            Selects this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:iSIM.Core.Entity.Dto.AssetRelatedVmsDto">
            <summary>
            AssetRelatedVmsDto
            </summary>
            <seealso cref="!:iSIM.Core.Common.Interface.DtoBase&lt;iSIM.Core.Entity.Entity.TblRelVmsAsset, iSIM.Core.Entity.Dto.AssetRelatedVmsDto&gt;" />
        </member>
        <member name="P:iSIM.Core.Entity.Dto.AssetRelatedVmsDto.IdVms">
            <summary>
            Gets or sets the identifier VMS.
            </summary>
            <value>
            The identifier VMS.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.AssetRelatedVmsDto.IdAsset">
            <summary>
            Gets or sets the identifier asset.
            </summary>
            <value>
            The identifier asset.
            </value>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.AssetRelatedVmsDto.ToEntity">
            <summary>
            To the entity.
            </summary>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.AssetRelatedVmsDto.Select">
            <summary>
            Selects this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:iSIM.Core.Entity.Dto.CameraTypeDto">
            <summary>
            CameraTypeDto
            </summary>
            <seealso cref="!:iSIM.Core.Common.Interface.DtoBase&lt;iSIM.Core.Entity.Entity.TblEnumCameraType, iSIM.Core.Entity.Dto.CameraTypeDto&gt;" />
        </member>
        <member name="P:iSIM.Core.Entity.Dto.CameraTypeDto.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.CameraTypeDto.CameraType">
            <summary>
            Gets or sets the type of the camera.
            </summary>
            <value>
            The type of the camera.
            </value>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.CameraTypeDto.ToEntity">
            <summary>
            To the entity.
            </summary>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.CameraTypeDto.Select">
            <summary>
            Selects this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:iSIM.Core.Entity.Dto.ClientDto">
            <summary>
            ClientDto
            </summary>
            <seealso cref="!:iSIM.Core.Common.Interface.DtoBase&lt;iSIM.Core.Entity.Entity.TblClient, iSIM.Core.Entity.Dto.ClientDto&gt;" />
        </member>
        <member name="P:iSIM.Core.Entity.Dto.ClientDto.IsActive">
            <summary>
            Gets or sets a value indicating whether this instance is active.
            </summary>
            <value>
              <c>true</c> if this instance is active; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.ClientDto.Uuid">
            <summary>
            Gets or sets the UUID.
            </summary>
            <value>
            The UUID.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.ClientDto.PcName">
            <summary>
            Gets or sets the name of the pc.
            </summary>
            <value>
            The name of the pc.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.ClientDto.CustomField">
            <summary>
            Gets or sets the custom field.
            </summary>
            <value>
            The custom field.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.ClientDto.Asset">
            <summary>
            Gets or sets the asset.
            </summary>
            <value>
            The asset.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.ClientDto.ClientTypeDto">
            <summary>
            Gets or sets the client type dto.
            </summary>
            <value>
            The client type dto.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.ClientDto.BasicUserDto">
            <summary>
            Gets or sets the basic user dto.
            </summary>
            <value>
            The basic user dto.
            </value>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.ClientDto.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:iSIM.Core.Entity.Dto.ClientDto"/> class.
            </summary>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.ClientDto.ToEntity">
            <summary>
            To the entity.
            </summary>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.ClientDto.Select">
            <summary>
            Selects this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:iSIM.Core.Entity.Dto.ClientTypeDto">
            <summary>
            ClientTypeDto
            </summary>
            <seealso cref="!:iSIM.Core.Common.Interface.DtoBase&lt;iSIM.Core.Entity.Entity.TblEnumClientType, iSIM.Core.Entity.Dto.ClientTypeDto&gt;" />
        </member>
        <member name="P:iSIM.Core.Entity.Dto.ClientTypeDto.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.ClientTypeDto.ClientType">
            <summary>
            Gets or sets the type of the client.
            </summary>
            <value>
            The type of the client.
            </value>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.ClientTypeDto.ToEntity">
            <summary>
            To the entity.
            </summary>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.ClientTypeDto.Select">
            <summary>
            Selects this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:iSIM.Core.Entity.Dto.ColorDto">
            <summary>
            ColorDto
            </summary>
            <seealso cref="!:iSIM.Core.Common.Interface.DtoBase&lt;iSIM.Core.Entity.Entity.TblEnumColor, iSIM.Core.Entity.Dto.ColorDto&gt;" />
        </member>
        <member name="P:iSIM.Core.Entity.Dto.ColorDto.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.ColorDto.TvId">
            <summary>
            Gets or sets the tv identifier.
            </summary>
            <value>
            The tv identifier.
            </value>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.ColorDto.ToEntity">
            <summary>
            To the entity.
            </summary>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.ColorDto.Select">
            <summary>
            Selects this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:iSIM.Core.Entity.Dto.ColorShadeDto">
            <summary>
            ColorShadeDto
            </summary>
            <seealso cref="!:iSIM.Core.Common.Interface.DtoBase&lt;iSIM.Core.Entity.Entity.TblEnumColorShade, iSIM.Core.Entity.Dto.ColorShadeDto&gt;" />
        </member>
        <member name="P:iSIM.Core.Entity.Dto.ColorShadeDto.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.ColorShadeDto.TvId">
            <summary>
            Gets or sets the tv identifier.
            </summary>
            <value>
            The tv identifier.
            </value>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.ColorShadeDto.ToEntity">
            <summary>
            To the entity.
            </summary>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.ColorShadeDto.Select">
            <summary>
            Selects this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:iSIM.Core.Entity.Dto.ConfigurationDto">
            <summary>
            ConfigurationDto
            </summary>
            <seealso cref="!:iSIM.Core.Common.Interface.DtoBase&lt;iSIM.Core.Entity.Entity.TblConfiguration, iSIM.Core.Entity.Dto.ConfigurationDto&gt;" />
        </member>
        <member name="P:iSIM.Core.Entity.Dto.ConfigurationDto.Key">
            <summary>
            Gets or sets the key.
            </summary>
            <value>
            The key.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.ConfigurationDto.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.ConfigurationDto.Description">
            <summary>
            Description
            </summary>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.ConfigurationDto.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:iSIM.Core.Entity.Dto.ConfigurationDto"/> class.
            </summary>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.ConfigurationDto.ToEntity">
            <summary>
            To the entity.
            </summary>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.ConfigurationDto.Select">
            <summary>
            Selects this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:iSIM.Core.Entity.Dto.ContinentDto">
            <summary>
            ContinentDto
            </summary>
            <seealso cref="!:iSIM.Core.Common.Interface.DtoBase&lt;iSIM.Core.Entity.Entity.TblEnumContinent, iSIM.Core.Entity.Dto.ContinentDto&gt;" />
        </member>
        <member name="P:iSIM.Core.Entity.Dto.ContinentDto.Code">
            <summary>
            Gets or sets the code.
            </summary>
            <value>
            The code.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.ContinentDto.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.ContinentDto.ToEntity">
            <summary>
            To the entity.
            </summary>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.ContinentDto.Select">
            <summary>
            Selects this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:iSIM.Core.Entity.Dto.CountryDto">
            <summary>
            CountryDto
            </summary>
            <seealso cref="!:iSIM.Core.Common.Interface.DtoBase&lt;iSIM.Core.Entity.Entity.TblEnumCountry, iSIM.Core.Entity.Dto.CountryDto&gt;" />
        </member>
        <member name="P:iSIM.Core.Entity.Dto.CountryDto.IsoCode2">
            <summary>
            Gets or sets the iso code2.
            </summary>
            <value>
            The iso code2.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.CountryDto.IsoCode3">
            <summary>
            Gets or sets the iso code3.
            </summary>
            <value>
            The iso code3.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.CountryDto.Fips">
            <summary>
            Gets or sets the fips.
            </summary>
            <value>
            The fips.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.CountryDto.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.CountryDto.FullName">
            <summary>
            Gets or sets the full name.
            </summary>
            <value>
            The full name.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.CountryDto.CurrencyCode">
            <summary>
            Gets or sets the currency code.
            </summary>
            <value>
            The currency code.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.CountryDto.CurrencyName">
            <summary>
            Gets or sets the name of the currency.
            </summary>
            <value>
            The name of the currency.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.CountryDto.PhonePrefix">
            <summary>
            Gets or sets the phone prefix.
            </summary>
            <value>
            The phone prefix.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.CountryDto.PostalCode">
            <summary>
            Gets or sets the postal code.
            </summary>
            <value>
            The postal code.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.CountryDto.Languages">
            <summary>
            Gets or sets the languages.
            </summary>
            <value>
            The languages.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.CountryDto.GeoNameId">
            <summary>
            Gets or sets the geo name identifier.
            </summary>
            <value>
            The geo name identifier.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.CountryDto.ContinentDto">
            <summary>
            Gets or sets the continent dto.
            </summary>
            <value>
            The continent dto.
            </value>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.CountryDto.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:iSIM.Core.Entity.Dto.CountryDto"/> class.
            </summary>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.CountryDto.ToEntity">
            <summary>
            To the entity.
            </summary>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.CountryDto.Select">
            <summary>
            Selects this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:iSIM.Core.Entity.Dto.DomainServiceDto">
            <summary>
            DomainServiceDto
            </summary>
            <seealso cref="!:iSIM.Core.Common.Interface.ManipulationDtoBase&lt;iSIM.Core.Entity.Entity.TblDomainService, iSIM.Core.Entity.Dto.DomainServiceDto&gt;" />
        </member>
        <member name="P:iSIM.Core.Entity.Dto.DomainServiceDto.DomainName">
            <summary>
            Gets or sets the name of the domain.
            </summary>
            <value>
            The name of the domain.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.DomainServiceDto.Username">
            <summary>
            Gets or sets the username.
            </summary>
            <value>
            The username.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.DomainServiceDto.Password">
            <summary>
            Gets or sets the password.
            </summary>
            <value>
            The password.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.DomainServiceDto.CustomField">
            <summary>
            Gets or sets the custom field.
            </summary>
            <value>
            The custom field.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.DomainServiceDto.EndpointDto">
            <summary>
            Gets or sets the endpoint dto.
            </summary>
            <value>
            The endpoint dto.
            </value>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.DomainServiceDto.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:iSIM.Core.Entity.Dto.DomainServiceDto"/> class.
            </summary>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.DomainServiceDto.ToEntity">
            <summary>
            To the entity.
            </summary>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.DomainServiceDto.Select">
            <summary>
            Selects this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.DomainServiceDto.IsExist">
            <summary>
            Determines whether this instance is exist.
            </summary>
            <returns></returns>
        </member>
        <member name="T:iSIM.Core.Entity.Dto.EndpointDto">
            <summary>
            EndpointDto
            </summary>
            <seealso cref="!:iSIM.Core.Common.Interface.ManipulationDtoBase&lt;iSIM.Core.Entity.Entity.TblEndpoint, iSIM.Core.Entity.Dto.EndpointDto&gt;" />
        </member>
        <member name="P:iSIM.Core.Entity.Dto.EndpointDto.IpAddress">
            <summary>
            Gets or sets the ip address.
            </summary>
            <value>
            The ip address.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.EndpointDto.Port">
            <summary>
            Gets or sets the port.
            </summary>
            <value>
            The port.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.EndpointDto.CustomField">
            <summary>
            Gets or sets the custom field.
            </summary>
            <value>
            The custom field.
            </value>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.EndpointDto.ToEntity">
            <summary>
            To the entity.
            </summary>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.EndpointDto.Select">
            <summary>
            Selects this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.EndpointDto.IsExist">
            <summary>
            Determines whether this instance is exist.
            </summary>
            <returns></returns>
        </member>
        <member name="T:iSIM.Core.Entity.Dto.EventDto">
            <summary>
            EventDto
            </summary>
            <seealso cref="!:iSIM.Core.Common.Interface.DtoBase&lt;iSIM.Core.Entity.Entity.TblLogEvent, iSIM.Core.Entity.Dto.EventDto&gt;" />
        </member>
        <member name="P:iSIM.Core.Entity.Dto.EventDto.ObjectId">
            <summary>
            Gets or sets the object identifier.
            </summary>
            <value>
            The object identifier.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.EventDto.Message">
            <summary>
            Gets or sets the message.
            </summary>
            <value>
            The message.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.EventDto.Descriptor">
            <summary>
            Gets or sets the descriptor.
            </summary>
            <value>
            The descriptor.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.EventDto.CreatedAt">
            <summary>
            Gets or sets the created at.
            </summary>
            <value>
            The created at.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.EventDto.GeometryDto">
            <summary>
            Gets or sets the geometry dto.
            </summary>
            <value>
            The geometry dto.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.EventDto.Checksum">
            <summary>
            Gets or sets the checksum.
            </summary>
            <value>
            The checksum.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.EventDto.CustomField">
            <summary>
            Gets or sets the custom field.
            </summary>
            <value>
            The custom field.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.EventDto.Priority">
            <summary>
            Gets or sets the priority.
            </summary>
            <value>
            The priority.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.EventDto.AssetDto">
            <summary>
            Gets or sets the asset dto.
            </summary>
            <value>
            The asset dto.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.EventDto.EventTypeDto">
            <summary>
            Gets or sets the event type dto.
            </summary>
            <value>
            The event type dto.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.EventDto.LogFileDtos">
            <summary>
            Gets or sets the log file dtos.
            </summary>
            <value>
            The log file dtos.
            </value>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.EventDto.ToEntity">
            <summary>
            To the entity.
            </summary>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.EventDto.Select">
            <summary>
            Selects this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:iSIM.Core.Entity.Dto.EventFilterDto">
            <summary>
            EventFilterDto
            </summary>
            <seealso cref="T:iSIM.Core.Entity.Interface.IFilter" />
        </member>
        <member name="P:iSIM.Core.Entity.Dto.EventFilterDto.Limit">
            <summary>
            Gets or sets the limit.
            </summary>
            <value>
            The limit.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.EventFilterDto.Page">
            <summary>
            Gets or sets the page.
            </summary>
            <value>
            The page.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.EventFilterDto.HasAttachment">
            <summary>
            Gets or sets the has attachment.
            </summary>
            <value>
            The has attachment.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.EventFilterDto.EventTypes">
            <summary>
            Gets or sets the event types.
            </summary>
            <value>
            The event types.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.EventFilterDto.BeginDate">
            <summary>
            Gets or sets the begin date.
            </summary>
            <value>
            The begin date.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.EventFilterDto.EndDate">
            <summary>
            Gets or sets the end date.
            </summary>
            <value>
            The end date.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.EventFilterDto.AssetIds">
            <summary>
            Gets or sets the asset ids.
            </summary>
            <value>
            The asset ids.
            </value>
        </member>
        <member name="T:iSIM.Core.Entity.Dto.EventGeomtryDto">
            <summary>
            EventGeomtryDto
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.EventGeomtryDto.Latitude">
            <summary>
            Gets or sets the latitude.
            </summary>
            <value>
            The latitude.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.EventGeomtryDto.Longitude">
            <summary>
            Gets or sets the longitude.
            </summary>
            <value>
            The longitude.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.EventGeomtryDto.Altitude">
            <summary>
            Gets or sets the altitude.
            </summary>
            <value>
            The altitude.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.EventGeomtryDto.SrId">
            <summary>
            Gets or sets the sr id.
            </summary>
            <value>
            The sr id.
            </value>
        </member>
        <member name="T:iSIM.Core.Entity.Dto.EventTypeDto">
            <summary>
            EventTypeDto
            </summary>
            <seealso cref="!:iSIM.Core.Common.Interface.DtoBase&lt;iSIM.Core.Entity.Entity.TblEnumEventType, iSIM.Core.Entity.Dto.EventTypeDto&gt;" />
        </member>
        <member name="P:iSIM.Core.Entity.Dto.EventTypeDto.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.EventTypeDto.EventType">
            <summary>
            Gets or sets the type of the event.
            </summary>
            <value>
            The type of the event.
            </value>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.EventTypeDto.ToEntity">
            <summary>
            To the entity.
            </summary>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.EventTypeDto.Select">
            <summary>
            Selects this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:iSIM.Core.Entity.Dto.GeometryDto">
            <summary>
            GeometryDto
            </summary>
            <seealso cref="!:iSIM.Core.Common.Interface.DtoBase&lt;iSIM.Core.Entity.Entity.TblAssetLocationPoint, iSIM.Core.Entity.Dto.GeometryDto&gt;" />
        </member>
        <member name="P:iSIM.Core.Entity.Dto.GeometryDto.Latitude">
            <summary>
            Gets or sets the latitude.
            </summary>
            <value>
            The latitude.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.GeometryDto.Longitude">
            <summary>
            Gets or sets the longitude.
            </summary>
            <value>
            The longitude.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.GeometryDto.Altitude">
            <summary>
            Gets or sets the altitude.
            </summary>
            <value>
            The altitude.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.GeometryDto.Wkt">
            <summary>
            Gets or sets the WKT.
            </summary>
            <value>
            The WKT.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.GeometryDto.SrId">
            <summary>
            Gets or sets the SRID.
            </summary>
            <value>
            The SRID.
            </value>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.GeometryDto.ToEntity">
            <summary>
            To the entity.
            </summary>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.GeometryDto.Select">
            <summary>
            Selects this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:iSIM.Core.Entity.Dto.GisLayerDto">
            <summary>
            GisLayerDto
            </summary>
            <seealso cref="!:iSIM.Core.Common.Interface.ManipulationDtoBase&lt;iSIM.Core.Entity.Entity.TblGisLayer, iSIM.Core.Entity.Dto.GisLayerDto&gt;" />
        </member>
        <member name="P:iSIM.Core.Entity.Dto.GisLayerDto.IsActive">
            <summary>
            Gets or sets a value indicating whether this instance is active.
            </summary>
            <value>
              <c>true</c> if this instance is active; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.GisLayerDto.IsTransparent">
            <summary>
            gis layerinin saydamlik ozelliginin olup olmadigi bilgisi tutar.
            </summary>
            <value>
              <c>true</c> if this instance is transparent; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.GisLayerDto.IsBase">
            <summary>
            altlik harita mi olup olmadigi bilgisi saklar.  altlik harita = google map, bing vb.
            </summary>
            <value>
              <c>true</c> if this instance is base; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.GisLayerDto.IsSingleTile">
            <summary>
             tile edilmis goruntu isteyip istemeyecegi bilgisini saklar.  tile edilmis ise gis server dan 256 256 imageler olarak alir.
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.GisLayerDto.IdLayerServiceType">
            <summary>
            gis serverdan vms,wfs,wmts servisi mi isteyecegi bilgisini tutar.
            </summary>
            <value>
            The type of the identifier layer service.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.GisLayerDto.IdMimeType">
            <summary>
            alinacak imagenin tipini belirler. ornegin jpeg, png gibi ozellikler.
            </summary>
            <value>
            The type of the identifier MIME.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.GisLayerDto.IdGisLayerGroup">
            <summary>
            layerin ekran hangi grupta olacagi bilgisini saklar
            </summary>
            <value>
            The identifier gis layer group.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.GisLayerDto.Name">
            <summary>
            gis server daki katmanin adini tutar.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.GisLayerDto.Transparency">
            <summary>
            katmanin default seffafligini saklar. 1 ile 0 arasinda degerler alir.  eger defaultta katmanin acik olmasi isteniyorsa 1 olarak setlenir.
            </summary>
            <value>
            The transparency.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.GisLayerDto.LayerOrder">
            <summary>
            katmanin grup icerisindeki sirasini belirler. 0 en ustte yukseldikce alt siralara kayar.
            </summary>
            <value>
            The layer order.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.GisLayerDto.Label">
            <summary>
            layerin ekrandaki adini saklar
            </summary>
            <value>
            The label.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.GisLayerDto.InfoJson">
            <summary>
            katman harita uzerinde veriye tiklandigi zaman info panelinde hangi verileri hangi tablolardan ve hangi kolonlardan veriyi alip, hangi formatta ekrana gosterecegi bilgisini saklar.
            </summary>
            <value>
            The information json.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.GisLayerDto.StyleName">
            <summary>
            gis serverda default degilde baska bir stil ile render edilmesi istenirse bu alan istenilen stil adi verilir.
            </summary>
            <value>
            The name of the style.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.GisLayerDto.Srid">
            <summary>
            katmanin stilini ol3 uzerinde nasil olacagi bilgisini saklar
            </summary>
            <value>
            The srid.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.GisLayerDto.CustomField">
            <summary>
            Gets or sets the custom field.
            </summary>
            <value>
            The custom field.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.GisLayerDto.GisLayerGroupDto">
            <summary>
            Gets or sets the gis layer group dto.
            </summary>
            <value>
            The gis layer group dto.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.GisLayerDto.GisServerDto">
            <summary>
            Gets or sets the gis server dto.
            </summary>
            <value>
            The gis server dto.
            </value>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.GisLayerDto.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:iSIM.Core.Entity.Dto.GisLayerDto"/> class.
            </summary>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.GisLayerDto.ToEntity">
            <summary>
            To the entity.
            </summary>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.GisLayerDto.Select">
            <summary>
            Selects this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.GisLayerDto.IsExist">
            <summary>
            Determines whether this instance is exist.
            </summary>
            <returns></returns>
        </member>
        <member name="T:iSIM.Core.Entity.Dto.GisLayerGroupDto">
            <summary>
            GisLayerGroupDto
            </summary>
            <seealso cref="!:iSIM.Core.Common.Interface.ManipulationDtoBase&lt;iSIM.Core.Entity.Entity.TblGisLayerGroup, iSIM.Core.Entity.Dto.GisLayerGroupDto&gt;" />
        </member>
        <member name="P:iSIM.Core.Entity.Dto.GisLayerGroupDto.Parent">
            <summary>
            Gets or sets the parent.
            </summary>
            <value>
            The parent.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.GisLayerGroupDto.IdParent">
            <summary>
            Gets or sets the identifier parent.
            </summary>
            <value>
            The identifier parent.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.GisLayerGroupDto.Label">
            <summary>
            Gets or sets the label.
            </summary>
            <value>
            The label.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.GisLayerGroupDto.LayerGroupOrder">
            <summary>
            Gets or sets the layer group order.
            </summary>
            <value>
            The layer group order.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.GisLayerGroupDto.CustomField">
            <summary>
            Gets or sets the custom field.
            </summary>
            <value>
            The custom field.
            </value>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.GisLayerGroupDto.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:iSIM.Core.Entity.Dto.GisLayerGroupDto"/> class.
            </summary>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.GisLayerGroupDto.ToEntity">
            <summary>
            To the entity.
            </summary>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.GisLayerGroupDto.Select">
            <summary>
            Selects this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.GisLayerGroupDto.IsExist">
            <summary>
            Determines whether this instance is exist.
            </summary>
            <returns></returns>
        </member>
        <member name="T:iSIM.Core.Entity.Dto.GisServerDto">
            <summary>
            GisServerDto
            </summary>
            <seealso cref="!:iSIM.Core.Common.Interface.DtoBase&lt;iSIM.Core.Entity.Entity.TblGisService, iSIM.Core.Entity.Dto.GisServerDto&gt;" />
        </member>
        <member name="P:iSIM.Core.Entity.Dto.GisServerDto.ServerUsername">
            <summary>
            Gets or sets the server username.
            </summary>
            <value>
            The server username.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.GisServerDto.ServerPassword">
            <summary>
            Gets or sets the server password.
            </summary>
            <value>
            The server password.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.GisServerDto.ExtentionId">
            <summary>
            Gets or sets the extention identifier.
            </summary>
            <value>
            The extention identifier.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.GisServerDto.CustomField">
            <summary>
            Gets or sets the custom field.
            </summary>
            <value>
            The custom field.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.GisServerDto.AssetDto">
            <summary>
            Gets or sets the asset dto.
            </summary>
            <value>
            The asset dto.
            </value>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.GisServerDto.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:iSIM.Core.Entity.Dto.GisServerDto"/> class.
            </summary>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.GisServerDto.ToEntity">
            <summary>
            To the entity.
            </summary>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.GisServerDto.Select">
            <summary>
            Selects this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:iSIM.Core.Entity.Dto.ImageInfoDto">
            <summary>
            ImageInfoDto
            </summary>
            <seealso cref="!:iSIM.Core.Common.Interface.DtoBase&lt;iSIM.Core.Entity.Entity.TblImageInfo, iSIM.Core.Entity.Dto.ImageInfoDto&gt;" />
        </member>
        <member name="P:iSIM.Core.Entity.Dto.ImageInfoDto.RelatedDate">
            <summary>
            Gets or sets the related date.
            </summary>
            <value>
            The related date.
            </value>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.ImageInfoDto.ToEntity">
            <summary>
            To the entity.
            </summary>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.ImageInfoDto.Select">
            <summary>
            Selects this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:iSIM.Core.Entity.Dto.IncidentDto">
            <summary>
            IncidentDto
            </summary>
            <seealso cref="!:iSIM.Core.Common.Interface.DtoBase&lt;iSIM.Core.Entity.Entity.TblIncident, iSIM.Core.Entity.Dto.IncidentDto&gt;" />
        </member>
        <member name="P:iSIM.Core.Entity.Dto.IncidentDto.ClientId">
            <summary>
            Gets or sets the client identifier.
            </summary>
            <value>
            The client identifier.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.IncidentDto.IsPositive">
            <summary>
            Gets or sets the is positive.
            </summary>
            <value>
            The is positive.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.IncidentDto.CustomField">
            <summary>
            Gets or sets the custom field.
            </summary>
            <value>
            The custom field.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.IncidentDto.CreatedAt">
            <summary>
            Gets or sets the created at.
            </summary>
            <value>
            The created at.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.IncidentDto.PriorityDto">
            <summary>
            Gets or sets the priority dto.
            </summary>
            <value>
            The priority dto.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.IncidentDto.IncidentStatusDto">
            <summary>
            Gets or sets the incident status dto.
            </summary>
            <value>
            The incident status dto.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.IncidentDto.IncidentTypeDto">
            <summary>
            Gets or sets the incident type dto.
            </summary>
            <value>
            The incident type dto.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.IncidentDto.GeometryDto">
            <summary>
            Gets or sets the geometry dto.
            </summary>
            <value>
            The geometry dto.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.IncidentDto.UserDto">
            <summary>
            Gets or sets the user dto.
            </summary>
            <value>
            The user dto.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.IncidentDto.AssetDto">
            <summary>
            Gets or sets the asset dto.
            </summary>
            <value>
            The asset dto.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.IncidentDto.IncidentMessageDtos">
            <summary>
            Gets or sets the incident message dtos.
            </summary>
            <value>
            The incident message dtos.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.IncidentDto.IncidentFileDtos">
            <summary>
            Gets or sets the incident file dtos.
            </summary>
            <value>
            The incident file dtos.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.IncidentDto.EventDtos">
            <summary>
            Gets or sets the event dtos.
            </summary>
            <value>
            The event dtos.
            </value>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.IncidentDto.ToEntity">
            <summary>
            To the entity.
            </summary>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.IncidentDto.Select">
            <summary>
            Selects this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:iSIM.Core.Entity.Dto.IncidentFileDto">
            <summary>
            IncidentFileDto
            </summary>
            <seealso cref="!:iSIM.Core.Common.Interface.DtoBase&lt;iSIM.Core.Entity.Entity.TblIncidentFile, iSIM.Core.Entity.Dto.IncidentFileDto&gt;" />
        </member>
        <member name="P:iSIM.Core.Entity.Dto.IncidentFileDto.Path">
            <summary>
            Gets or sets the path.
            </summary>
            <value>
            The path.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.IncidentFileDto.CreatedAt">
            <summary>
            Gets or sets the created at.
            </summary>
            <value>
            The created at.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.IncidentFileDto.MimeTypeDto">
            <summary>
            Gets or sets the MIME type dto.
            </summary>
            <value>
            The MIME type dto.
            </value>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.IncidentFileDto.ToEntity">
            <summary>
            To the entity.
            </summary>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.IncidentFileDto.Select">
            <summary>
            Selects this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:iSIM.Core.Entity.Dto.IncidentFilterDto">
            <summary>
            IncidentFilterDto
            </summary>
            <seealso cref="T:iSIM.Core.Entity.Interface.IFilter" />
        </member>
        <member name="P:iSIM.Core.Entity.Dto.IncidentFilterDto.Limit">
            <summary>
            Gets or sets the limit.
            </summary>
            <value>
            The limit.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.IncidentFilterDto.Page">
            <summary>
            Gets or sets the page.
            </summary>
            <value>
            The page.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.IncidentFilterDto.IncidentTypes">
            <summary>
            Gets or sets the incident types.
            </summary>
            <value>
            The incident types.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.IncidentFilterDto.IncidentStatus">
            <summary>
            Gets or sets the incident status.
            </summary>
            <value>
            The incident status.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.IncidentFilterDto.BeginDate">
            <summary>
            Gets or sets the begin date.
            </summary>
            <value>
            The begin date.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.IncidentFilterDto.EndDate">
            <summary>
            Gets or sets the end date.
            </summary>
            <value>
            The end date.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.IncidentFilterDto.HasAttachment">
            <summary>
            Gets or sets the has attachment.
            </summary>
            <value>
            The has attachment.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.IncidentFilterDto.CreatedUserId">
            <summary>
            Gets or sets the created user identifier.
            </summary>
            <value>
            The created user identifier.
            </value>
        </member>
        <member name="T:iSIM.Core.Entity.Dto.IncidentMessageDto">
            <summary>
            IncidentMessageDto
            </summary>
            <seealso cref="!:iSIM.Core.Common.Interface.DtoBase&lt;iSIM.Core.Entity.Entity.TblIncidentMessage, iSIM.Core.Entity.Dto.IncidentMessageDto&gt;" />
        </member>
        <member name="P:iSIM.Core.Entity.Dto.IncidentMessageDto.Message">
            <summary>
            Gets or sets the message.
            </summary>
            <value>
            The message.
            </value>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.IncidentMessageDto.ToEntity">
            <summary>
            To the entity.
            </summary>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.IncidentMessageDto.FromEntity(iSIM.Core.Entity.Entity.TblIncidentMessage)">
            <summary>
            Froms the entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.IncidentMessageDto.Select">
            <summary>
            Selects this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:iSIM.Core.Entity.Dto.IncidentStatusDto">
            <summary>
            IncidentStatusDto
            </summary>
            <seealso cref="!:iSIM.Core.Common.Interface.DtoBase&lt;iSIM.Core.Entity.Entity.TblEnumIncidentStatus, iSIM.Core.Entity.Dto.IncidentStatusDto&gt;" />
        </member>
        <member name="P:iSIM.Core.Entity.Dto.IncidentStatusDto.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.IncidentStatusDto.IncidentStatus">
            <summary>
            Gets or sets the incident status.
            </summary>
            <value>
            The incident status.
            </value>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.IncidentStatusDto.ToEntity">
            <summary>
            To the entity.
            </summary>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.IncidentStatusDto.Select">
            <summary>
            Selects this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:iSIM.Core.Entity.Dto.IncidentTypeDto">
            <summary>
            IncidentTypeDto
            </summary>
            <seealso cref="!:iSIM.Core.Common.Interface.DtoBase&lt;iSIM.Core.Entity.Entity.TblEnumIncidentType, iSIM.Core.Entity.Dto.IncidentTypeDto&gt;" />
        </member>
        <member name="P:iSIM.Core.Entity.Dto.IncidentTypeDto.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.IncidentTypeDto.IncidentType">
            <summary>
            Gets or sets the type of the incident.
            </summary>
            <value>
            The type of the incident.
            </value>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.IncidentTypeDto.ToEntity">
            <summary>
            To the entity.
            </summary>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.IncidentTypeDto.Select">
            <summary>
            Selects this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:iSIM.Core.Entity.Dto.IsimVersionDto">
            <summary>
            IsimVersionDto
            </summary>
            <seealso cref="!:iSIM.Core.Common.Interface.DtoBase&lt;iSIM.Core.Entity.Entity.TblIsimVersion, iSIM.Core.Entity.Dto.IsimVersionDto&gt;" />
        </member>
        <member name="P:iSIM.Core.Entity.Dto.IsimVersionDto.UpdatedAt">
            <summary>
            Gets or sets the updated at.
            </summary>
            <value>
            The updated at.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.IsimVersionDto.Version">
            <summary>
            Gets or sets the version.
            </summary>
            <value>
            The version.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.IsimVersionDto.VersionDetail">
            <summary>
            Gets or sets the version detail.
            </summary>
            <value>
            The version detail.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.IsimVersionDto.CustomField">
            <summary>
            Gets or sets the custom field.
            </summary>
            <value>
            The custom field.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.IsimVersionDto.AssetTypeDto">
            <summary>
            Gets or sets the asset type dto.
            </summary>
            <value>
            The asset type dto.
            </value>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.IsimVersionDto.ToEntity">
            <summary>
            To the entity.
            </summary>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.IsimVersionDto.Select">
            <summary>
            Selects this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:iSIM.Core.Entity.Dto.LandmarkCategoryDto">
            <summary>
            LandmarkCategoryDto
            </summary>
            <seealso cref="!:iSIM.Core.Common.Interface.DtoBase&lt;iSIM.Core.Entity.Entity.TblEnumLandmarkCategory, iSIM.Core.Entity.Dto.LandmarkCategoryDto&gt;" />
        </member>
        <member name="P:iSIM.Core.Entity.Dto.LandmarkCategoryDto.CategoryEnglish">
            <summary>
            Gets or sets the category english.
            </summary>
            <value>
            The category english.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.LandmarkCategoryDto.CategoryArabic">
            <summary>
            Gets or sets the category arabic.
            </summary>
            <value>
            The category arabic.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.LandmarkCategoryDto.LandmarkSubCategoryDtos">
            <summary>
            Gets or sets the landmark sub category dtos.
            </summary>
            <value>
            The landmark sub category dtos.
            </value>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.LandmarkCategoryDto.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:iSIM.Core.Entity.Dto.LandmarkCategoryDto"/> class.
            </summary>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.LandmarkCategoryDto.ToEntity">
            <summary>
            To the entity.
            </summary>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.LandmarkCategoryDto.Select">
            <summary>
            Selects this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:iSIM.Core.Entity.Dto.LandmarkDto">
            <summary>
            LandmarkDto
            </summary>
            <seealso cref="!:iSIM.Core.Common.Interface.DtoBase&lt;iSIM.Core.Entity.Entity.TblLandmark, iSIM.Core.Entity.Dto.LandmarkDto&gt;" />
        </member>
        <member name="P:iSIM.Core.Entity.Dto.LandmarkDto.NameEnglish">
            <summary>
            Gets or sets the name english.
            </summary>
            <value>
            The name english.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.LandmarkDto.NameArabic">
            <summary>
            Gets or sets the name arabic.
            </summary>
            <value>
            The name arabic.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.LandmarkDto.Phone">
            <summary>
            Gets or sets the phone.
            </summary>
            <value>
            The phone.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.LandmarkDto.StreetEnglish">
            <summary>
            Gets or sets the street english.
            </summary>
            <value>
            The street english.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.LandmarkDto.StreetArabic">
            <summary>
            Gets or sets the street arabic.
            </summary>
            <value>
            The street arabic.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.LandmarkDto.StreetNo">
            <summary>
            Gets or sets the street no.
            </summary>
            <value>
            The street no.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.LandmarkDto.PlotNo">
            <summary>
            Gets or sets the plot no.
            </summary>
            <value>
            The plot no.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.LandmarkDto.ZoneNo">
            <summary>
            Gets or sets the zone no.
            </summary>
            <value>
            The zone no.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.LandmarkDto.Fax">
            <summary>
            Gets or sets the fax.
            </summary>
            <value>
            The fax.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.LandmarkDto.PostBox">
            <summary>
            Gets or sets the post box.
            </summary>
            <value>
            The post box.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.LandmarkDto.Email">
            <summary>
            Gets or sets the email.
            </summary>
            <value>
            The email.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.LandmarkDto.DistrictEnglish">
            <summary>
            Gets or sets the district english.
            </summary>
            <value>
            The district english.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.LandmarkDto.DistrictArabic">
            <summary>
            Gets or sets the district arabic.
            </summary>
            <value>
            The district arabic.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.LandmarkDto.WebSite">
            <summary>
            Gets or sets the web site.
            </summary>
            <value>
            The web site.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.LandmarkDto.CenterX">
            <summary>
            Gets or sets the center x.
            </summary>
            <value>
            The center x.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.LandmarkDto.CenterY">
            <summary>
            Gets or sets the center y.
            </summary>
            <value>
            The center y.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.LandmarkDto.Geom">
            <summary>
            Gets or sets the geom.
            </summary>
            <value>
            The geom.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.LandmarkDto.LandmarkCategoryDto">
            <summary>
            Gets or sets the landmark category dto.
            </summary>
            <value>
            The landmark category dto.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.LandmarkDto.LandmarSubCategoryDto">
            <summary>
            Gets or sets the landmar sub category dto.
            </summary>
            <value>
            The landmar sub category dto.
            </value>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.LandmarkDto.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:iSIM.Core.Entity.Dto.LandmarkDto"/> class.
            </summary>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.LandmarkDto.ToEntity">
            <summary>
            To the entity.
            </summary>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.LandmarkDto.Select">
            <summary>
            Selects this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:iSIM.Core.Entity.Dto.LandmarkFilterDto">
            <summary>
            LandmarkFilterDto
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.LandmarkFilterDto.Limit">
            <summary>
            Gets or sets the limit.
            </summary>
            <value>
            The limit.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.LandmarkFilterDto.Page">
            <summary>
            Gets or sets the page.
            </summary>
            <value>
            The page.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.LandmarkFilterDto.StreetNo">
            <summary>
            Gets or sets the street no.
            </summary>
            <value>
            The street no.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.LandmarkFilterDto.NameEnglish">
            <summary>
            Gets or sets the name english.
            </summary>
            <value>
            The name english.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.LandmarkFilterDto.NameArabic">
            <summary>
            Gets or sets the name arabic.
            </summary>
            <value>
            The name arabic.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.LandmarkFilterDto.CategoryEnglish">
            <summary>
            Gets or sets the category english.
            </summary>
            <value>
            The category english.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.LandmarkFilterDto.CategoryArabic">
            <summary>
            Gets or sets the category arabic.
            </summary>
            <value>
            The category arabic.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.LandmarkFilterDto.SubCategoryEnglish">
            <summary>
            Gets or sets the sub category english.
            </summary>
            <value>
            The sub category english.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.LandmarkFilterDto.SubCategoryArabic">
            <summary>
            Gets or sets the sub category arabic.
            </summary>
            <value>
            The sub category arabic.
            </value>
        </member>
        <member name="T:iSIM.Core.Entity.Dto.LandmarkSubCategoryDto">
            <summary>
            LandmarkSubCategoryDto
            </summary>
            <seealso cref="!:iSIM.Core.Common.Interface.DtoBase&lt;iSIM.Core.Entity.Entity.TblEnumLandmarkSubCategory, iSIM.Core.Entity.Dto.LandmarkSubCategoryDto&gt;" />
        </member>
        <member name="P:iSIM.Core.Entity.Dto.LandmarkSubCategoryDto.SubCategoryEnglish">
            <summary>
            Gets or sets the sub category english.
            </summary>
            <value>
            The sub category english.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.LandmarkSubCategoryDto.SubCategoryArabic">
            <summary>
            Gets or sets the sub category arabic.
            </summary>
            <value>
            The sub category arabic.
            </value>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.LandmarkSubCategoryDto.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:iSIM.Core.Entity.Dto.LandmarkSubCategoryDto"/> class.
            </summary>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.LandmarkSubCategoryDto.ToEntity">
            <summary>
            To the entity.
            </summary>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.LandmarkSubCategoryDto.Select">
            <summary>
            Selects this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:iSIM.Core.Entity.Dto.LogFileDto">
            <summary>
            LogFileDto
            </summary>
            <seealso cref="!:iSIM.Core.Common.Interface.DtoBase&lt;iSIM.Core.Entity.Entity.TblLogFile, iSIM.Core.Entity.Dto.LogFileDto&gt;" />
        </member>
        <member name="P:iSIM.Core.Entity.Dto.LogFileDto.LogId">
            <summary>
            Gets or sets the log identifier.
            </summary>
            <value>
            The log identifier.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.LogFileDto.Path">
            <summary>
            Gets or sets the path.
            </summary>
            <value>
            The path.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.LogFileDto.Size">
            <summary>
            Gets or sets the size.
            </summary>
            <value>
            The size.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.LogFileDto.SourceId">
            <summary>
            Gets or sets the source identifier.
            </summary>
            <value>
            The source identifier.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.LogFileDto.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>
            The description.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.LogFileDto.CustomField">
            <summary>
            Gets or sets the custom field.
            </summary>
            <value>
            The custom field.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.LogFileDto.LogType">
            <summary>
            Gets or sets the type of the log.
            </summary>
            <value>
            The type of the log.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.LogFileDto.MimeTypeDto">
            <summary>
            Gets or sets the MIME type dto.
            </summary>
            <value>
            The MIME type dto.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.LogFileDto.VideoInfoDtos">
            <summary>
            Gets or sets the video information dtos.
            </summary>
            <value>
            The video information dtos.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.LogFileDto.ImageInfoDtos">
            <summary>
            Gets or sets the image information dtos.
            </summary>
            <value>
            The image information dtos.
            </value>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.LogFileDto.ToEntity">
            <summary>
            To the entity.
            </summary>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.LogFileDto.Select">
            <summary>
            Selects this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:iSIM.Core.Entity.Dto.MimeTypeDto">
            <summary>
            MimeTypeDto
            </summary>
            <seealso cref="!:iSIM.Core.Common.Interface.DtoBase&lt;iSIM.Core.Entity.Entity.TblEnumMimeType, iSIM.Core.Entity.Dto.MimeTypeDto&gt;" />
        </member>
        <member name="P:iSIM.Core.Entity.Dto.MimeTypeDto.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.MimeTypeDto.MimeType">
            <summary>
            Gets or sets the type of the MIME.
            </summary>
            <value>
            The type of the MIME.
            </value>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.MimeTypeDto.ToEntity">
            <summary>
            To the entity.
            </summary>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.MimeTypeDto.Select">
            <summary>
            Selects this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:iSIM.Core.Entity.Dto.NationalityDto">
            <summary>
            
            </summary>
            <seealso cref="!:iSIM.Core.Common.Interface.DtoBase&lt;iSIM.Core.Entity.Entity.TblEnumNationality, iSIM.Core.Entity.Dto.NationalityDto&gt;" />
        </member>
        <member name="P:iSIM.Core.Entity.Dto.NationalityDto.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.NationalityDto.TvId">
            <summary>
            Gets or sets the tv identifier.
            </summary>
            <value>
            The tv identifier.
            </value>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.NationalityDto.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:iSIM.Core.Entity.Dto.NationalityDto"/> class.
            </summary>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.NationalityDto.ToEntity">
            <summary>
            To the entity.
            </summary>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.NationalityDto.Select">
            <summary>
            Selects this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:iSIM.Core.Entity.Dto.OperationTypeCategoryDto">
            <summary>
            OperationTypeCategoryDto
            </summary>
            <seealso cref="!:iSIM.Core.Common.Interface.DtoBase&lt;iSIM.Core.Entity.Entity.TblEnumOperationTypeCategory, iSIM.Core.Entity.Dto.OperationTypeCategoryDto&gt;" />
        </member>
        <member name="P:iSIM.Core.Entity.Dto.OperationTypeCategoryDto.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.OperationTypeCategoryDto.OperationTypeCategory">
            <summary>
            Gets or sets the operation type category.
            </summary>
            <value>
            The operation type category.
            </value>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.OperationTypeCategoryDto.ToEntity">
            <summary>
            To the entity.
            </summary>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.OperationTypeCategoryDto.Select">
            <summary>
            Selects this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:iSIM.Core.Entity.Dto.OperationTypeDto">
            <summary>
            OperationTypeDto
            </summary>
            <seealso cref="!:iSIM.Core.Common.Interface.DtoBase&lt;iSIM.Core.Entity.Entity.TblEnumOperationType, iSIM.Core.Entity.Dto.OperationTypeDto&gt;" />
        </member>
        <member name="P:iSIM.Core.Entity.Dto.OperationTypeDto.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.OperationTypeDto.OperationType">
            <summary>
            Gets or sets the type of the operation.
            </summary>
            <value>
            The type of the operation.
            </value>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.OperationTypeDto.ToEntity">
            <summary>
            To the entity.
            </summary>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.OperationTypeDto.Select">
            <summary>
            Selects this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:iSIM.Core.Entity.Dto.PaginatedDto`1">
            <summary>
            PaginatedDto
            </summary>
            <typeparam name="TDto">The type of the dto.</typeparam>
            <seealso cref="T:iSIM.Core.Common.Interface.IPaginatedDto`1" />
        </member>
        <member name="P:iSIM.Core.Entity.Dto.PaginatedDto`1.PageIndex">
            <summary>
            Gets or sets the index of the page.
            </summary>
            <value>
            The index of the page.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.PaginatedDto`1.PageSize">
            <summary>
            Gets or sets the size of the page.
            </summary>
            <value>
            The size of the page.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.PaginatedDto`1.TotalCount">
            <summary>
            Gets or sets the total count.
            </summary>
            <value>
            The total count.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.PaginatedDto`1.TotalPageCount">
            <summary>
            Gets or sets the total page count.
            </summary>
            <value>
            The total page count.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.PaginatedDto`1.HasNextPage">
            <summary>
            Gets or sets a value indicating whether this instance has next page.
            </summary>
            <value>
            <c>true</c> if this instance has next page; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.PaginatedDto`1.HasPreviousPage">
            <summary>
            Gets or sets a value indicating whether this instance has previous page.
            </summary>
            <value>
            <c>true</c> if this instance has previous page; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.PaginatedDto`1.Items">
            <summary>
            Gets the items.
            </summary>
            <value>
            The items.
            </value>
        </member>
        <member name="T:iSIM.Core.Entity.Dto.LayoutDto">
            <summary>
            LayoutDto
            </summary>
            <seealso cref="!:iSIM.Core.Common.Interface.DtoBase&lt;iSIM.Core.Entity.Entity.TblLayout, iSIM.Core.Entity.Dto.LayoutDto&gt;" />
        </member>
        <member name="P:iSIM.Core.Entity.Dto.LayoutDto.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.LayoutDto.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>
            The description.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.LayoutDto.Data">
            <summary>
            Gets or sets the data.
            </summary>
            <value>
            The data.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.LayoutDto.DataXml">
            <summary>
            Gets or sets the data XML.
            </summary>
            <value>
            The data XML.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.LayoutDto.UserDto">
            <summary>
            Gets or sets the user dto.
            </summary>
            <value>
            The user dto.
            </value>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.LayoutDto.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:iSIM.Core.Entity.Dto.LayoutDto"/> class.
            </summary>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.LayoutDto.ToEntity">
            <summary>
            To the entity.
            </summary>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.LayoutDto.Select">
            <summary>
            Selects this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:iSIM.Core.Entity.Dto.PerspectiveDto">
            <summary>
            PerspectiveDto
            </summary>
            <seealso cref="!:iSIM.Core.Common.Interface.DtoBase&lt;iSIM.Core.Entity.Entity.TblPerspective, iSIM.Core.Entity.Dto.PerspectiveDto&gt;" />
        </member>
        <member name="P:iSIM.Core.Entity.Dto.PerspectiveDto.IsActive">
            <summary>
            Gets or sets a value indicating whether this instance is active.
            </summary>
            <value>
              <c>true</c> if this instance is active; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.PerspectiveDto.Accessible">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:iSIM.Core.Entity.Dto.PerspectiveDto"/> is accessible.
            </summary>
            <value>
              <c>true</c> if accessible; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.PerspectiveDto.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.PerspectiveDto.Data">
            <summary>
            Gets or sets the data.
            </summary>
            <value>
            The data.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.PerspectiveDto.Panels">
            <summary>
            Gets or sets the panels.
            </summary>
            <value>
            The panels.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.PerspectiveDto.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>
            The description.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.PerspectiveDto.UserDto">
            <summary>
            Gets or sets the user dto.
            </summary>
            <value>
            The user dto.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.PerspectiveDto.WindowActions">
            <summary>
            Gets or sets the window actions.
            </summary>
            <value>
            The window actions.
            </value>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.PerspectiveDto.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:iSIM.Core.Entity.Dto.PerspectiveDto"/> class.
            </summary>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.PerspectiveDto.ToEntity">
            <summary>
            To the entity.
            </summary>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.PerspectiveDto.Select">
            <summary>
            Selects this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:iSIM.Core.Entity.Dto.PerspectiveWindowActionsDto">
            <summary>
            PerspectiveWindowActionsDto
            </summary>
            <seealso cref="!:iSIM.Core.Common.Interface.DtoBase&lt;iSIM.Core.Entity.Entity.TblPerspectiveWindowsAction, iSIM.Core.Entity.Dto.PerspectiveWindowActionsDto&gt;" />
        </member>
        <member name="P:iSIM.Core.Entity.Dto.PerspectiveWindowActionsDto.IsActive">
            <summary>
            Gets or sets a value indicating whether this instance is active.
            </summary>
            <value>
              <c>true</c> if this instance is active; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.PerspectiveWindowActionsDto.PerspectiveId">
            <summary>
            Gets or sets the perspective identifier.
            </summary>
            <value>
            The perspective identifier.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.PerspectiveWindowActionsDto.Order">
            <summary>
            Gets or sets the order.
            </summary>
            <value>
            The order.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.PerspectiveWindowActionsDto.ExtensionId">
            <summary>
            Gets or sets the extension identifier.
            </summary>
            <value>
            The extension identifier.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.PerspectiveWindowActionsDto.Visible">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:iSIM.Core.Entity.Dto.PerspectiveWindowActionsDto"/> is visible.
            </summary>
            <value>
              <c>true</c> if visible; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.PerspectiveWindowActionsDto.CustomField">
            <summary>
            Gets or sets the custom field.
            </summary>
            <value>
            The custom field.
            </value>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.PerspectiveWindowActionsDto.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:iSIM.Core.Entity.Dto.PerspectiveWindowActionsDto"/> class.
            </summary>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.PerspectiveWindowActionsDto.ToEntity">
            <summary>
            To the entity.
            </summary>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.PerspectiveWindowActionsDto.Select">
            <summary>
            Selects this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:iSIM.Core.Entity.Dto.PlateTypeDto">
            <summary>
            PlateTypeDto
            </summary>
            <seealso cref="!:iSIM.Core.Common.Interface.DtoBase&lt;iSIM.Core.Entity.Entity.TblEnumPlateType, iSIM.Core.Entity.Dto.PlateTypeDto&gt;" />
        </member>
        <member name="P:iSIM.Core.Entity.Dto.PlateTypeDto.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.PlateTypeDto.TvId">
            <summary>
            Gets or sets the tv identifier.
            </summary>
            <value>
            The tv identifier.
            </value>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.PlateTypeDto.ToEntity">
            <summary>
            To the entity.
            </summary>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.PlateTypeDto.Select">
            <summary>
            Selects this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:iSIM.Core.Entity.Dto.PoleDto">
            <summary>
            PoleDto
            </summary>
            <seealso cref="!:iSIM.Core.Common.Interface.DtoBase&lt;iSIM.Core.Entity.Entity.TblAsset, iSIM.Core.Entity.Dto.PoleDto&gt;" />
        </member>
        <member name="P:iSIM.Core.Entity.Dto.PoleDto.AssetDto">
            <summary>
            Gets or sets the asset dto.
            </summary>
            <value>
            The asset dto.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.PoleDto.CameraDtoIds">
            <summary>
            Gets or sets the camera ids.
            </summary>
            <value>
            The camera ids.
            </value>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.PoleDto.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:iSIM.Core.Entity.Dto.PoleDto"/> class.
            </summary>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.PoleDto.ToEntity">
            <summary>
            To the entity.
            </summary>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.PoleDto.Select">
            <summary>
            Selects this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:iSIM.Core.Entity.Dto.PriorityDto">
            <summary>
            PriorityDto
            </summary>
            <seealso cref="!:iSIM.Core.Common.Interface.DtoBase&lt;iSIM.Core.Entity.Entity.TblEnumPriority, iSIM.Core.Entity.Dto.PriorityDto&gt;" />
        </member>
        <member name="P:iSIM.Core.Entity.Dto.PriorityDto.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.PriorityDto.Priority">
            <summary>
            Gets or sets the priority.
            </summary>
            <value>
            The priority.
            </value>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.PriorityDto.ToEntity">
            <summary>
            To the entity.
            </summary>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.PriorityDto.Select">
            <summary>
            Selects this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:iSIM.Core.Entity.Dto.RoleDto">
            <summary>
            RoleDto
            </summary>
            <seealso cref="!:iSIM.Core.Common.Interface.DtoBase&lt;iSIM.Core.Entity.Entity.TblEnumRole, iSIM.Core.Entity.Dto.RoleDto&gt;" />
        </member>
        <member name="P:iSIM.Core.Entity.Dto.RoleDto.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.RoleDto.Role">
            <summary>
            Gets or sets the role.
            </summary>
            <value>
            The role.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.RoleDto.IsAllowed">
            <summary>
            Gets or sets a value indicating whether this instance is allowed.
            </summary>
            <value>
              <c>true</c> if this instance is allowed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.RoleDto.ToEntity">
            <summary>
            To the entity.
            </summary>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.RoleDto.Select">
            <summary>
            Selects this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:iSIM.Core.Entity.Dto.RoleGroupDto">
            <summary>
            RoleGroupDto
            </summary>
            <seealso cref="!:iSIM.Core.Common.Interface.ManipulationDtoBase&lt;iSIM.Core.Entity.Entity.TblRoleGroup, iSIM.Core.Entity.Dto.RoleGroupDto&gt;" />
        </member>
        <member name="P:iSIM.Core.Entity.Dto.RoleGroupDto.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.RoleGroupDto.CustomField">
            <summary>
            Gets or sets the custom field.
            </summary>
            <value>
            The custom field.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.RoleGroupDto.RoleDtos">
            <summary>
            Gets or sets the role dtos.
            </summary>
            <value>
            The role dtos.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.RoleGroupDto.IsAllowed">
            <summary>
            Gets or sets a value indicating whether this instance is allowed.
            </summary>
            <value>
              <c>true</c> if this instance is allowed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.RoleGroupDto.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:iSIM.Core.Entity.Dto.RoleGroupDto"/> class.
            </summary>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.RoleGroupDto.ToEntity">
            <summary>
            To the entity.
            </summary>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.RoleGroupDto.Select">
            <summary>
            Selects this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.RoleGroupDto.IsExist">
            <summary>
            Determines whether this instance is exist.
            </summary>
            <returns></returns>
        </member>
        <member name="T:iSIM.Core.Entity.Dto.StreetDto">
            <summary>
            StreetDto
            </summary>
            <seealso cref="!:iSIM.Core.Common.Interface.DtoBase&lt;iSIM.Core.Entity.Entity.TblStreet, iSIM.Core.Entity.Dto.StreetDto&gt;" />
        </member>
        <member name="P:iSIM.Core.Entity.Dto.StreetDto.ZoneNo">
            <summary>
            Gets or sets the zone no.
            </summary>
            <value>
            The zone no.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.StreetDto.StreetNo">
            <summary>
            Gets or sets the street no.
            </summary>
            <value>
            The street no.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.StreetDto.NameEnglish">
            <summary>
            Gets or sets the name english.
            </summary>
            <value>
            The name english.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.StreetDto.NameArabic">
            <summary>
            Gets or sets the name arabic.
            </summary>
            <value>
            The name arabic.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.StreetDto.CenterX">
            <summary>
            Gets or sets the center x.
            </summary>
            <value>
            The center x.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.StreetDto.CenterY">
            <summary>
            Gets or sets the center y.
            </summary>
            <value>
            The center y.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.StreetDto.ShapeLenght">
            <summary>
            Gets or sets the shape lenght.
            </summary>
            <value>
            The shape lenght.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.StreetDto.ShapeArea">
            <summary>
            Gets or sets the shape area.
            </summary>
            <value>
            The shape area.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.StreetDto.Geom">
            <summary>
            Gets or sets the geom.
            </summary>
            <value>
            The geom.
            </value>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.StreetDto.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:iSIM.Core.Entity.Dto.StreetDto"/> class.
            </summary>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.StreetDto.ToEntity">
            <summary>
            To the entity.
            </summary>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.StreetDto.Select">
            <summary>
            Selects this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:iSIM.Core.Entity.Dto.StreetFilterDto">
            <summary>
            StreetFilterDto
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.StreetFilterDto.Limit">
            <summary>
            Gets or sets the limit.
            </summary>
            <value>
            The limit.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.StreetFilterDto.Page">
            <summary>
            Gets or sets the page.
            </summary>
            <value>
            The page.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.StreetFilterDto.StreetNo">
            <summary>
            Gets or sets the street no.
            </summary>
            <value>
            The street no.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.StreetFilterDto.NameEnglish">
            <summary>
            Gets or sets the name english.
            </summary>
            <value>
            The name english.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.StreetFilterDto.NameArabic">
            <summary>
            Gets or sets the name arabic.
            </summary>
            <value>
            The name arabic.
            </value>
        </member>
        <member name="T:iSIM.Core.Entity.Dto.TrafficViolationChargeDto">
            <summary>
            TrafficViolationChargeDto
            </summary>
            <seealso cref="!:iSIM.Core.Common.Interface.DtoBase&lt;iSIM.Core.Entity.Entity.TblTrafficViolationCharge, iSIM.Core.Entity.Dto.TrafficViolationChargeDto&gt;" />
        </member>
        <member name="P:iSIM.Core.Entity.Dto.TrafficViolationChargeDto.IdViolation">
            <summary>
            Gets or sets the identifier violation.
            </summary>
            <value>
            The identifier violation.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.TrafficViolationChargeDto.CustomField">
            <summary>
            Gets or sets the custom field.
            </summary>
            <value>
            The custom field.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.TrafficViolationChargeDto.ChargeTypeDto">
            <summary>
            Gets or sets the charge type dto.
            </summary>
            <value>
            The charge type dto.
            </value>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.TrafficViolationChargeDto.ToEntity">
            <summary>
            To the entity.
            </summary>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.TrafficViolationChargeDto.Select">
            <summary>
            Selects this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:iSIM.Core.Entity.Dto.TrafficViolationDto">
            <summary>
            TrafficViolationDto
            </summary>
            <seealso cref="!:iSIM.Core.Common.Interface.DtoBase&lt;iSIM.Core.Entity.Entity.TblTrafficViolation, iSIM.Core.Entity.Dto.TrafficViolationDto&gt;" />
        </member>
        <member name="P:iSIM.Core.Entity.Dto.TrafficViolationDto.CreatedAt">
            <summary>
            Gets or sets the created at.
            </summary>
            <value>
            The created at.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.TrafficViolationDto.ViolationDate">
            <summary>
            Gets or sets the violation date.
            </summary>
            <value>
            The violation date.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.TrafficViolationDto.ViolationIdentifier">
            <summary>
            Gets or sets the violation identifier.
            </summary>
            <value>
            The violation identifier.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.TrafficViolationDto.LastUpdateDate">
            <summary>
            Gets or sets the last update date.
            </summary>
            <value>
            The last update date.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.TrafficViolationDto.PlateNumber">
            <summary>
            Gets or sets the plate number.
            </summary>
            <value>
            The plate number.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.TrafficViolationDto.PlateLetter">
            <summary>
            Gets or sets the plate letter.
            </summary>
            <value>
            The plate letter.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.TrafficViolationDto.VehicleOwnerName">
            <summary>
            Gets or sets the name of the vehicle owner.
            </summary>
            <value>
            The name of the vehicle owner.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.TrafficViolationDto.VehicleOwnerMobileNumber">
            <summary>
            Gets or sets the vehicle owner mobile number.
            </summary>
            <value>
            The vehicle owner mobile number.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.TrafficViolationDto.VehicleYear">
            <summary>
            Gets or sets the vehicle year.
            </summary>
            <value>
            The vehicle year.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.TrafficViolationDto.VehicleEngineNumber">
            <summary>
            Gets or sets the vehicle engine number.
            </summary>
            <value>
            The vehicle engine number.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.TrafficViolationDto.Note">
            <summary>
            Gets or sets the note.
            </summary>
            <value>
            The note.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.TrafficViolationDto.Error">
            <summary>
            Gets or sets the error.
            </summary>
            <value>
            The error.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.TrafficViolationDto.CustomField">
            <summary>
            Gets or sets the custom field.
            </summary>
            <value>
            The custom field.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.TrafficViolationDto.IncidentDto">
            <summary>
            Gets or sets the incident dto.
            </summary>
            <value>
            The incident dto.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.TrafficViolationDto.UserDto">
            <summary>
            Gets or sets the user dto.
            </summary>
            <value>
            The user dto.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.TrafficViolationDto.ViolationStatusDto">
            <summary>
            Gets or sets the violation status dto.
            </summary>
            <value>
            The violation status dto.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.TrafficViolationDto.LastUpdateUserDto">
            <summary>
            Gets or sets the last update user dto.
            </summary>
            <value>
            The last update user dto.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.TrafficViolationDto.PlateTypeDto">
            <summary>
            Gets or sets the plate type dto.
            </summary>
            <value>
            The plate type dto.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.TrafficViolationDto.PlateColorDto">
            <summary>
            Gets or sets the plate color dto.
            </summary>
            <value>
            The plate color dto.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.TrafficViolationDto.NationalityDto">
            <summary>
            Gets or sets the nationality dto.
            </summary>
            <value>
            The nationality dto.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.TrafficViolationDto.VehicleBrandDto">
            <summary>
            Gets or sets the vehicle brand dto.
            </summary>
            <value>
            The vehicle brand dto.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.TrafficViolationDto.VehicleModelDto">
            <summary>
            Gets or sets the vehicle model dto.
            </summary>
            <value>
            The vehicle model dto.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.TrafficViolationDto.VehicleTypeDto">
            <summary>
            Gets or sets the vehicle type dto.
            </summary>
            <value>
            The vehicle type dto.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.TrafficViolationDto.VehicleShapeDto">
            <summary>
            Gets or sets the vehicle shape dto.
            </summary>
            <value>
            The vehicle shape dto.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.TrafficViolationDto.VehicleColorDto">
            <summary>
            Gets or sets the vehicle color dto.
            </summary>
            <value>
            The vehicle color dto.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.TrafficViolationDto.VehicleColorShadeDto">
            <summary>
            Gets or sets the vehicle color shade dto.
            </summary>
            <value>
            The vehicle color shade dto.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.TrafficViolationDto.VehicleCountryDto">
            <summary>
            Gets or sets the vehicle country dto.
            </summary>
            <value>
            The vehicle country dto.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.TrafficViolationDto.AssignedUserDtos">
            <summary>
            Gets or sets the assigned user dtos.
            </summary>
            <value>
            The assigned user dtos.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.TrafficViolationDto.AssignedUserGroupDtos">
            <summary>
            Gets or sets the assigned user group dtos.
            </summary>
            <value>
            The assigned user group dtos.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.TrafficViolationDto.ChargeDtos">
            <summary>
            Gets or sets the charge dtos.
            </summary>
            <value>
            The charge dtos.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.TrafficViolationDto.ReasonDtos">
            <summary>
            Gets or sets the reason dtos.
            </summary>
            <value>
            The reason dtos.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.TrafficViolationDto.SelectedFileDtos">
            <summary>
            Gets or sets the selected file dtos.
            </summary>
            <value>
            The selected file dtos.
            </value>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.TrafficViolationDto.ToEntity">
            <summary>
            To the entity.
            </summary>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.TrafficViolationDto.Select">
            <summary>
            Selects this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:iSIM.Core.Entity.Dto.TrafficViolationFilterDto">
            <summary>
            TrafficViolationFilterDto
            </summary>
            <seealso cref="T:iSIM.Core.Entity.Interface.IFilter" />
        </member>
        <member name="P:iSIM.Core.Entity.Dto.TrafficViolationFilterDto.Limit">
            <summary>
            Gets or sets the limit.
            </summary>
            <value>
            The limit.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.TrafficViolationFilterDto.Page">
            <summary>
            Gets or sets the page.
            </summary>
            <value>
            The page.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.TrafficViolationFilterDto.BeginDate">
            <summary>
            Gets or sets the begin date.
            </summary>
            <value>
            The begin date.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.TrafficViolationFilterDto.EndDate">
            <summary>
            Gets or sets the end date.
            </summary>
            <value>
            The end date.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.TrafficViolationFilterDto.ViolationStatus">
            <summary>
            Gets or sets the violation status.
            </summary>
            <value>
            The violation status.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.TrafficViolationFilterDto.AssignedUserGroupDto">
            <summary>
            Gets or sets the assigned user group dto.
            </summary>
            <value>
            The assigned user group dto.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.TrafficViolationFilterDto.AssignedUserDto">
            <summary>
            Gets or sets the assigned user dto.
            </summary>
            <value>
            The assigned user dto.
            </value>
        </member>
        <member name="T:iSIM.Core.Entity.Dto.TrafficViolationReasonDto">
            <summary>
            TrafficViolationReasonDto
            </summary>
            <seealso cref="!:iSIM.Core.Common.Interface.DtoBase&lt;iSIM.Core.Entity.Entity.TblTrafficViolationReason, iSIM.Core.Entity.Dto.TrafficViolationReasonDto&gt;" />
        </member>
        <member name="P:iSIM.Core.Entity.Dto.TrafficViolationReasonDto.DiscardReasonOther">
            <summary>
            Gets or sets the discard reason other.
            </summary>
            <value>
            The discard reason other.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.TrafficViolationReasonDto.CustomField">
            <summary>
            Gets or sets the custom field.
            </summary>
            <value>
            The custom field.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.TrafficViolationReasonDto.IdViolation">
            <summary>
            Gets or sets the violation id.
            </summary>
            <value>
            The violation id.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.TrafficViolationReasonDto.CreatedAt">
            <summary>
            Gets or sets the created at.
            </summary>
            <value>
            The created at.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.TrafficViolationReasonDto.UserDto">
            <summary>
            Gets or sets the user dto.
            </summary>
            <value>
            The user dto.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.TrafficViolationReasonDto.OldStatusDto">
            <summary>
            Gets or sets the old status dto.
            </summary>
            <value>
            The old status dto.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.TrafficViolationReasonDto.NewStatusDto">
            <summary>
            Gets or sets the new status dto.
            </summary>
            <value>
            The new status dto.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.TrafficViolationReasonDto.ReasonTypeDto">
            <summary>
            Gets or sets the reason type dto.
            </summary>
            <value>
            The reason type dto.
            </value>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.TrafficViolationReasonDto.ToEntity">
            <summary>
            To the entity.
            </summary>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.TrafficViolationReasonDto.Select">
            <summary>
            Selects this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:iSIM.Core.Entity.Dto.TrafficViolationReasonTypeDto">
            <summary>
            TrafficViolationReasonTypeDto
            </summary>
            <seealso cref="!:iSIM.Core.Common.Interface.DtoBase&lt;iSIM.Core.Entity.Entity.TblEnumTrafficViolationReasonType, iSIM.Core.Entity.Dto.TrafficViolationReasonTypeDto&gt;" />
        </member>
        <member name="P:iSIM.Core.Entity.Dto.TrafficViolationReasonTypeDto.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.TrafficViolationReasonTypeDto.TvId">
            <summary>
            Gets or sets the tv identifier.
            </summary>
            <value>
            The tv identifier.
            </value>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.TrafficViolationReasonTypeDto.ToEntity">
            <summary>
            To the entity.
            </summary>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.TrafficViolationReasonTypeDto.Select">
            <summary>
            Selects this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:iSIM.Core.Entity.Dto.TrafficViolationChargeTypeDto">
            <summary>
            TrafficViolationChargeTypeDto
            </summary>
            <seealso cref="!:iSIM.Core.Common.Interface.DtoBase&lt;iSIM.Core.Entity.Entity.TblEnumTrafficViolationChargeType, iSIM.Core.Entity.Dto.TrafficViolationChargeTypeDto&gt;" />
        </member>
        <member name="P:iSIM.Core.Entity.Dto.TrafficViolationChargeTypeDto.LawNumber">
            <summary>
            Gets or sets the law number.
            </summary>
            <value>
            The law number.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.TrafficViolationChargeTypeDto.LawSequence">
            <summary>
            Gets or sets the law sequence.
            </summary>
            <value>
            The law sequence.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.TrafficViolationChargeTypeDto.Amount">
            <summary>
            Gets or sets the amount.
            </summary>
            <value>
            The amount.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.TrafficViolationChargeTypeDto.Point">
            <summary>
            Gets or sets the point.
            </summary>
            <value>
            The point.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.TrafficViolationChargeTypeDto.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>
            The description.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.TrafficViolationChargeTypeDto.ImageOrder">
            <summary>
            Gets or sets the image order.
            </summary>
            <value>
            The image order.
            </value>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.TrafficViolationChargeTypeDto.ToEntity">
            <summary>
            To the entity.
            </summary>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.TrafficViolationChargeTypeDto.Select">
            <summary>
            Selects this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:iSIM.Core.Entity.Dto.TrafficViolationStatusDto">
            <summary>
            TrafficViolationStatusDto
            </summary>
            <seealso cref="!:iSIM.Core.Common.Interface.DtoBase&lt;iSIM.Core.Entity.Entity.TblEnumTrafficViolationStatus, iSIM.Core.Entity.Dto.TrafficViolationStatusDto&gt;" />
        </member>
        <member name="P:iSIM.Core.Entity.Dto.TrafficViolationStatusDto.Status">
            <summary>
            Gets or sets the status.
            </summary>
            <value>
            The status.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.TrafficViolationStatusDto.TrafficViolationStatus">
            <summary>
            Gets or sets the traffic violation status.
            </summary>
            <value>
            The traffic violation status.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.TrafficViolationStatusDto.TvId">
            <summary>
            Gets or sets the tv identifier.
            </summary>
            <value>
            The tv identifier.
            </value>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.TrafficViolationStatusDto.ToEntity">
            <summary>
            To the entity.
            </summary>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.TrafficViolationStatusDto.Select">
            <summary>
            Selects this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:iSIM.Core.Entity.Dto.UnifiedAssetDto">
            <summary>
            UnifiedAssetDto
            </summary>
            <seealso cref="!:iSIM.Core.Common.Interface.DtoBase&lt;iSIM.Core.Entity.Entity.TblAsset, iSIM.Core.Entity.Dto.UnifiedAssetDto&gt;" />
        </member>
        <member name="P:iSIM.Core.Entity.Dto.UnifiedAssetDto.IsActive">
            <summary>
            Gets or sets a value indicating whether this instance is active.
            </summary>
            <value>
              <c>true</c> if this instance is active; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.UnifiedAssetDto.IsEndpoint">
            <summary>
            Gets or sets a value indicating whether this instance is endpoint.
            </summary>
            <value>
              <c>true</c> if this instance is endpoint; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.UnifiedAssetDto.AssetOrder">
            <summary>
            Gets or sets the asset order.
            </summary>
            <value>
            The asset order.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.UnifiedAssetDto.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.UnifiedAssetDto.AssetType">
            <summary>
            Gets or sets the type of the asset.
            </summary>
            <value>
            The type of the asset.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.UnifiedAssetDto.Roles">
            <summary>
            Gets or sets the roles.
            </summary>
            <value>
            The roles.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.UnifiedAssetDto.ParentId">
            <summary>
            Gets or sets the parent identifier.
            </summary>
            <value>
            The parent identifier.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.UnifiedAssetDto.ChildAssetDtos">
            <summary>
            Gets or sets the child asset dtos.
            </summary>
            <value>
            The child asset dtos.
            </value>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.UnifiedAssetDto.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:iSIM.Core.Entity.Dto.UnifiedAssetDto"/> class.
            </summary>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.UnifiedAssetDto.ToEntity">
            <summary>
            To the entity.
            </summary>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.UnifiedAssetDto.FromEntity(iSIM.Core.Entity.Entity.TblAsset)">
            <summary>
            Froms the entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.UnifiedAssetDto.Select">
            <summary>
            Selects this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:iSIM.Core.Entity.Dto.UserDto">
            <summary>
            UserDto
            </summary>
            <seealso cref="!:iSIM.Core.Common.Interface.ManipulationDtoBase&lt;iSIM.Core.Entity.Entity.TblUser, iSIM.Core.Entity.Dto.UserDto&gt;" />
        </member>
        <member name="P:iSIM.Core.Entity.Dto.UserDto.IsActive">
            <summary>
            Gets or sets a value indicating whether this instance is active.
            </summary>
            <value>
              <c>true</c> if this instance is active; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.UserDto.Priority">
            <summary>
            Gets or sets the priority.
            </summary>
            <value>
            The priority.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.UserDto.Username">
            <summary>
            Gets or sets the username.
            </summary>
            <value>
            The username.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.UserDto.Password">
            <summary>
            Gets or sets the password.
            </summary>
            <value>
            The password.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.UserDto.Firstname">
            <summary>
            Gets or sets the firstname.
            </summary>
            <value>
            The firstname.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.UserDto.Lastname">
            <summary>
            Gets or sets the lastname.
            </summary>
            <value>
            The lastname.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.UserDto.EmailAddress">
            <summary>
            Gets or sets the email address.
            </summary>
            <value>
            The email address.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.UserDto.PhoneNumber">
            <summary>
            Gets or sets the phone number.
            </summary>
            <value>
            The phone number.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.UserDto.IdentificationNumber">
            <summary>
            Gets or sets the identification number.
            </summary>
            <value>
            The identification number.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.UserDto.CustomField">
            <summary>
            Gets or sets the custom field.
            </summary>
            <value>
            The custom field.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.UserDto.EncryptedPassword">
            <summary>
            Gets or sets the encrypted password.
            </summary>
            <value>
            The encrypted password.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.UserDto.DomainServiceDto">
            <summary>
            Gets or sets the domain service dto.
            </summary>
            <value>
            The domain service dto.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.UserDto.BasicUserGroupDtos">
            <summary>
            Gets or sets the basic user group dtos.
            </summary>
            <value>
            The basic user group dtos.
            </value>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.UserDto.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:iSIM.Core.Entity.Dto.UserDto"/> class.
            </summary>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.UserDto.ToEntity">
            <summary>
            To the entity.
            </summary>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.UserDto.Select">
            <summary>
            Selects this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.UserDto.IsExist">
            <summary>
            Determines whether this instance is exist.
            </summary>
            <returns></returns>
        </member>
        <member name="T:iSIM.Core.Entity.Dto.UserFilterDto">
            <summary>
            UserFilterDto
            </summary>
            <seealso cref="!:iSIM.Core.Common.Interface.DtoBase&lt;iSIM.Core.Entity.Entity.TblUserFilter, iSIM.Core.Entity.Dto.UserFilterDto&gt;" />
        </member>
        <member name="P:iSIM.Core.Entity.Dto.UserFilterDto.UserDto">
            <summary>
            Gets or sets the user dto.
            </summary>
            <value>
            The user dto.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.UserFilterDto.Filter">
            <summary>
            Gets or sets the filter.
            </summary>
            <value>
            The filter.
            </value>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.UserFilterDto.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:iSIM.Core.Entity.Dto.UserFilterDto"/> class.
            </summary>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.UserFilterDto.ToEntity">
            <summary>
            To the entity.
            </summary>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.UserFilterDto.Select">
            <summary>
            Selects this instance.
            </summary>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "T:iSIM.Core.Entity.Dto.UserGroupDto" -->
        <member name="P:iSIM.Core.Entity.Dto.UserGroupDto.IsActive">
            <summary>
            Gets or sets a value indicating whether this instance is active.
            </summary>
            <value>
              <c>true</c> if this instance is active; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.UserGroupDto.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.UserGroupDto.CustomField">
            <summary>
            Gets or sets the custom field.
            </summary>
            <value>
            The custom field.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.UserGroupDto.IdManagerGroup">
            <summary>
            Gets or sets the identifier manager group.
            </summary>
            <value>
            The identifier manager group.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.UserGroupDto.UserGroupList">
            <summary>
            Gets or sets the user group list.
            </summary>
            <value>
            The user group list.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.UserGroupDto.UserList">
            <summary>
            Gets or sets the user list.
            </summary>
            <value>
            The user list.
            </value>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.UserGroupDto.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:iSIM.Core.Entity.Dto.UserGroupDto"/> class.
            </summary>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.UserGroupDto.ToEntity">
            <summary>
            To the entity.
            </summary>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.UserGroupDto.Select">
            <summary>
            Selects this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.UserGroupDto.IsExist">
            <summary>
            Determines whether this instance is exist.
            </summary>
            <returns></returns>
        </member>
        <member name="T:iSIM.Core.Entity.Dto.UserLogDto">
            <summary>
            UserLogDto
            </summary>
            <seealso cref="!:iSIM.Core.Common.Interface.DtoBase&lt;iSIM.Core.Entity.Entity.TblLogUser, iSIM.Core.Entity.Dto.UserLogDto&gt;" />
        </member>
        <member name="P:iSIM.Core.Entity.Dto.UserLogDto.AffectedId">
            <summary>
            Gets or sets the affected identifier.
            </summary>
            <value>
            The affected identifier.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.UserLogDto.Message">
            <summary>
            Gets or sets the message.
            </summary>
            <value>
            The message.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.UserLogDto.CreatedAt">
            <summary>
            Gets or sets the created at.
            </summary>
            <value>
            The created at.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.UserLogDto.CustomField">
            <summary>
            Gets or sets the custom field.
            </summary>
            <value>
            The custom field.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.UserLogDto.BasicUserDto">
            <summary>
            Gets or sets the basic user dto.
            </summary>
            <value>
            The basic user dto.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.UserLogDto.ClientDto">
            <summary>
            Gets or sets the client dto.
            </summary>
            <value>
            The client dto.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.UserLogDto.OperationTypeDto">
            <summary>
            Gets or sets the operation type dto.
            </summary>
            <value>
            The operation type dto.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.UserLogDto.OperationTypeCategoryDto">
            <summary>
            Gets or sets the operation type category dto.
            </summary>
            <value>
            The operation type category dto.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.UserLogDto.LogFileDtos">
            <summary>
            Gets or sets the log file dtos.
            </summary>
            <value>
            The log file dtos.
            </value>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.UserLogDto.ToEntity">
            <summary>
            To the entity.
            </summary>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.UserLogDto.Select">
            <summary>
            Selects this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:iSIM.Core.Entity.Dto.UserLogFilterDto">
            <summary>
            UserLogFilterDto
            </summary>
            <seealso cref="T:iSIM.Core.Entity.Interface.IFilter" />
        </member>
        <member name="P:iSIM.Core.Entity.Dto.UserLogFilterDto.Limit">
            <summary>
            Gets or sets the limit.
            </summary>
            <value>
            The limit.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.UserLogFilterDto.Page">
            <summary>
            Gets or sets the page.
            </summary>
            <value>
            The page.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.UserLogFilterDto.HasAttachment">
            <summary>
            Gets or sets the has attachment.
            </summary>
            <value>
            The has attachment.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.UserLogFilterDto.OperationTypes">
            <summary>
            Gets or sets the operation types.
            </summary>
            <value>
            The operation types.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.UserLogFilterDto.UserIds">
            <summary>
            Gets or sets the user ids.
            </summary>
            <value>
            The user ids.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.UserLogFilterDto.BeginDate">
            <summary>
            Gets or sets the begin date.
            </summary>
            <value>
            The begin date.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.UserLogFilterDto.EndDate">
            <summary>
            Gets or sets the end date.
            </summary>
            <value>
            The end date.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.UserLogFilterDto.AffectedId">
            <summary>
            Gets or sets the affected identifier.
            </summary>
            <value>
            The affected identifier.
            </value>
        </member>
        <member name="T:iSIM.Core.Entity.Dto.UserShortcutDto">
            <summary>
            UserShortcutDto
            </summary>
            <seealso cref="!:iSIM.Core.Common.Interface.DtoBase&lt;iSIM.Core.Entity.Entity.TblUserShortcut, iSIM.Core.Entity.Dto.UserShortcutDto&gt;" />
        </member>
        <member name="P:iSIM.Core.Entity.Dto.UserShortcutDto.UserDto">
            <summary>
            Gets or sets the user dto.
            </summary>
            <value>
            The user dto.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.UserShortcutDto.UserShortcutTypeDto">
            <summary>
            Gets or sets the user shortcut type dto.
            </summary>
            <value>
            The user shortcut type dto.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.UserShortcutDto.Shortcut">
            <summary>
            Gets or sets the shortcut.
            </summary>
            <value>
            The shortcut.
            </value>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.UserShortcutDto.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:iSIM.Core.Entity.Dto.UserShortcutDto" /> class.
            </summary>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.UserShortcutDto.ToEntity">
            <summary>
            To the entity.
            </summary>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.UserShortcutDto.Select">
            <summary>
            Selects this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:iSIM.Core.Entity.Dto.UserShortcutTypeDto">
            <summary>
            UserShortcutTypeDto
            </summary>
            <seealso cref="!:iSIM.Core.Common.Interface.DtoBase&lt;iSIM.Core.Entity.Entity.TblEnumUserShortcutType, iSIM.Core.Entity.Dto.UserShortcutTypeDto&gt;" />
        </member>
        <member name="P:iSIM.Core.Entity.Dto.UserShortcutTypeDto.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.UserShortcutTypeDto.UserShortcutType">
            <summary>
            Gets or sets the type of the user shortcut.
            </summary>
            <value>
            The type of the user shortcut.
            </value>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.UserShortcutTypeDto.ToEntity">
            <summary>
            To the entity.
            </summary>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.UserShortcutTypeDto.Select">
            <summary>
            Selects this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:iSIM.Core.Entity.Dto.VariableMessageSignDto">
            <summary>
            VariableMessageSignDto
            </summary>
            <seealso cref="T:iSIM.Core.Entity.Dto.VariableMessageSignDto" />
        </member>
        <member name="P:iSIM.Core.Entity.Dto.VariableMessageSignDto.Width">
            <summary>
            Gets or sets the width.
            </summary>
            <value>
            The width.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.VariableMessageSignDto.Height">
            <summary>
            Gets or sets the height.
            </summary>
            <value>
            The height.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.VariableMessageSignDto.Intensity">
            <summary>
            Gets or sets the intensity.
            </summary>
            <value>
            The intensity.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.VariableMessageSignDto.PowerSource">
            <summary>
            Gets or sets the power source.
            </summary>
            <value>
            The power source.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.VariableMessageSignDto.RecoveryMessage">
            <summary>
            Gets or sets the recovery message.
            </summary>
            <value>
            The recovery message.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.VariableMessageSignDto.PowerLossMessage">
            <summary>
            Gets or sets the Width.
            </summary>
            <value>
            The Width.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.VariableMessageSignDto.CustomField">
            <summary>
            Gets or sets the custom field.
            </summary>
            <value>
            The custom field.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.VariableMessageSignDto.AssetDto">
            <summary>
            Gets or sets the asset dto.
            </summary>
            <value>
            The asset dto.
            </value>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.VariableMessageSignDto.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:iSIM.Core.Entity.Dto.VariableMessageSignDto"/> class.
            </summary>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.VariableMessageSignDto.ToEntity">
            <summary>
            To the entity.
            </summary>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.VariableMessageSignDto.Select">
            <summary>
            Selects this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:iSIM.Core.Entity.Dto.VehicleModelDto">
            <summary>
            VehicleModelDto
            </summary>
            <seealso cref="!:iSIM.Core.Common.Interface.DtoBase&lt;iSIM.Core.Entity.Entity.TblEnumVehicleModel, iSIM.Core.Entity.Dto.VehicleModelDto&gt;" />
        </member>
        <member name="P:iSIM.Core.Entity.Dto.VehicleModelDto.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.VehicleModelDto.BrandDto">
            <summary>
            Gets or sets the brand dto.
            </summary>
            <value>
            The brand dto.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.VehicleModelDto.TvId">
            <summary>
            Gets or sets the tv identifier.
            </summary>
            <value>
            The tv identifier.
            </value>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.VehicleModelDto.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:iSIM.Core.Entity.Dto.VehicleModelDto"/> class.
            </summary>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.VehicleModelDto.ToEntity">
            <summary>
            To the entity.
            </summary>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.VehicleModelDto.Select">
            <summary>
            Selects this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:iSIM.Core.Entity.Dto.VehicleShapeDto">
            <summary>
            VehicleShapeDto
            </summary>
            <seealso cref="!:iSIM.Core.Common.Interface.DtoBase&lt;iSIM.Core.Entity.Entity.TblEnumVehicleShape, iSIM.Core.Entity.Dto.VehicleShapeDto&gt;" />
        </member>
        <member name="P:iSIM.Core.Entity.Dto.VehicleShapeDto.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.VehicleShapeDto.TvId">
            <summary>
            Gets or sets the tv identifier.
            </summary>
            <value>
            The tv identifier.
            </value>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.VehicleShapeDto.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:iSIM.Core.Entity.Dto.VehicleShapeDto"/> class.
            </summary>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.VehicleShapeDto.ToEntity">
            <summary>
            To the entity.
            </summary>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.VehicleShapeDto.Select">
            <summary>
            Selects this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:iSIM.Core.Entity.Dto.VehicleTypeDto">
            <summary>
            VehicleTypeDto
            </summary>
            <seealso cref="!:iSIM.Core.Common.Interface.DtoBase&lt;iSIM.Core.Entity.Entity.TblEnumVehicleType, iSIM.Core.Entity.Dto.VehicleTypeDto&gt;" />
        </member>
        <member name="P:iSIM.Core.Entity.Dto.VehicleTypeDto.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.VehicleTypeDto.TvId">
            <summary>
            Gets or sets the tv identifier.
            </summary>
            <value>
            The tv identifier.
            </value>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.VehicleTypeDto.ToEntity">
            <summary>
            To the entity.
            </summary>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.VehicleTypeDto.Select">
            <summary>
            Selects this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:iSIM.Core.Entity.Dto.VideoInfoDto">
            <summary>
            VideoInfoDto
            </summary>
            <seealso cref="!:iSIM.Core.Common.Interface.DtoBase&lt;iSIM.Core.Entity.Entity.TblVideoInfo, iSIM.Core.Entity.Dto.VideoInfoDto&gt;" />
        </member>
        <member name="P:iSIM.Core.Entity.Dto.VideoInfoDto.BeginDate">
            <summary>
            Gets or sets the begin date.
            </summary>
            <value>
            The begin date.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.VideoInfoDto.EndDate">
            <summary>
            Gets or sets the end date.
            </summary>
            <value>
            The end date.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.VideoInfoDto.Duration">
            <summary>
            Gets or sets the duration.
            </summary>
            <value>
            The duration.
            </value>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.VideoInfoDto.ToEntity">
            <summary>
            To the entity.
            </summary>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.VideoInfoDto.Select">
            <summary>
            Selects this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:iSIM.Core.Entity.Dto.ViewPortDto">
            <summary>
            ViewPortDto
            </summary>
            <seealso cref="!:iSIM.Core.Common.Interface.DtoBase&lt;iSIM.Core.Entity.Entity.TblViewPort, iSIM.Core.Entity.Dto.ViewPortDto&gt;" />
        </member>
        <member name="P:iSIM.Core.Entity.Dto.ViewPortDto.Radius">
            <summary>
            Gets or sets the radius.
            </summary>
            <value>
            The radius.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.ViewPortDto.Direction">
            <summary>
            Gets or sets the direction.
            </summary>
            <value>
            The direction.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.ViewPortDto.Angle">
            <summary>
            Gets or sets the angle.
            </summary>
            <value>
            The angle.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.ViewPortDto.CustomField">
            <summary>
            Gets or sets the custom field.
            </summary>
            <value>
            The custom field.
            </value>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.ViewPortDto.ToEntity">
            <summary>
            To the entity.
            </summary>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.ViewPortDto.Select">
            <summary>
            Selects this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:iSIM.Core.Entity.Dto.VmsDto">
            <summary>
            VmsDto
            </summary>
            <seealso cref="!:iSIM.Core.Common.Interface.DtoBase&lt;iSIM.Core.Entity.Entity.TblVm, iSIM.Core.Entity.Dto.VmsDto&gt;" />
        </member>
        <member name="P:iSIM.Core.Entity.Dto.VmsDto.Username">
            <summary>
            Gets or sets the username.
            </summary>
            <value>
            The username.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.VmsDto.Password">
            <summary>
            Gets or sets the password.
            </summary>
            <value>
            The password.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.VmsDto.ExtensionId">
            <summary>
            Gets or sets the extension identifier.
            </summary>
            <value>
            The extension identifier.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.VmsDto.AutoChangeStream">
            <summary>
            Gets or sets a value indicating whether [automatic change stream].
            </summary>
            <value>
              <c>true</c> if [automatic change stream]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.VmsDto.Version">
            <summary>
            Gets or sets the version.
            </summary>
            <value>
            The version.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.VmsDto.Model">
            <summary>
            Gets or sets the model.
            </summary>
            <value>
            The model.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.VmsDto.SdkVersion">
            <summary>
            Gets or sets the SDK version.
            </summary>
            <value>
            The SDK version.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.VmsDto.CustomField">
            <summary>
            Gets or sets the custom field.
            </summary>
            <value>
            The custom field.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.VmsDto.BrandDto">
            <summary>
            Gets or sets the brand dto.
            </summary>
            <value>
            The brand dto.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.VmsDto.AssetDto">
            <summary>
            Gets or sets the asset dto.
            </summary>
            <value>
            The asset dto.
            </value>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.VmsDto.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:iSIM.Core.Entity.Dto.VmsDto"/> class.
            </summary>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.VmsDto.ToEntity">
            <summary>
            To the entity.
            </summary>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.VmsDto.Select">
            <summary>
            Selects this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:iSIM.Core.Entity.Dto.ZoneDto">
            <summary>
            ZoneDto
            </summary>
            <seealso cref="!:iSIM.Core.Common.Interface.DtoBase&lt;iSIM.Core.Entity.Entity.TblZone, iSIM.Core.Entity.Dto.ZoneDto&gt;" />
        </member>
        <member name="P:iSIM.Core.Entity.Dto.ZoneDto.ZoneNo">
            <summary>
            Gets or sets the zone no.
            </summary>
            <value>
            The zone no.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.ZoneDto.Municipal">
            <summary>
            Gets or sets the municipal.
            </summary>
            <value>
            The municipal.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.ZoneDto.CenterX">
            <summary>
            Gets or sets the center x.
            </summary>
            <value>
            The center x.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.ZoneDto.CenterY">
            <summary>
            Gets or sets the center y.
            </summary>
            <value>
            The center y.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.ZoneDto.ShapeLenght">
            <summary>
            Gets or sets the shape lenght.
            </summary>
            <value>
            The shape lenght.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.ZoneDto.ShapeArea">
            <summary>
            Gets or sets the shape area.
            </summary>
            <value>
            The shape area.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.ZoneDto.Geom">
            <summary>
            Gets or sets the geom.
            </summary>
            <value>
            The geom.
            </value>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.ZoneDto.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:iSIM.Core.Entity.Dto.ZoneDto"/> class.
            </summary>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.ZoneDto.ToEntity">
            <summary>
            To the entity.
            </summary>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Dto.ZoneDto.Select">
            <summary>
            Selects this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:iSIM.Core.Entity.Dto.ZoneFilterDto">
            <summary>
            ZoneFilterDto
            </summary>
            <seealso cref="T:iSIM.Core.Entity.Interface.IFilter" />
        </member>
        <member name="P:iSIM.Core.Entity.Dto.ZoneFilterDto.Limit">
            <summary>
            Gets or sets the limit.
            </summary>
            <value>
            The limit.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.ZoneFilterDto.Page">
            <summary>
            Gets or sets the page.
            </summary>
            <value>
            The page.
            </value>
        </member>
        <member name="P:iSIM.Core.Entity.Dto.ZoneFilterDto.ZoneNo">
            <summary>
            Gets or sets the zone no.
            </summary>
            <value>
            The zone no.
            </value>
        </member>
        <member name="T:iSIM.Core.Entity.Entity.IIsimContext">
            <summary>
            IIsimContext
            </summary>
            <seealso cref="T:System.IDisposable" />
        </member>
        <member name="M:iSIM.Core.Entity.Entity.IIsimContext.SetAsAdded``1(``0)">
            <summary>
            Sets as added.
            </summary>
            <typeparam name="TEntity">The type of the entity.</typeparam>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:iSIM.Core.Entity.Entity.IIsimContext.SetAsModified``1(``0)">
            <summary>
            Sets as modified.
            </summary>
            <typeparam name="TEntity">The type of the entity.</typeparam>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:iSIM.Core.Entity.Entity.IIsimContext.SetAsDeleted``1(``0)">
            <summary>
            Sets as deleted.
            </summary>
            <typeparam name="TEntity">The type of the entity.</typeparam>
            <param name="entity">The entity.</param>
        </member>
        <member name="T:iSIM.Core.Entity.Entity.IsimContext">
            <summary>
            IsimContext
            </summary>
            <seealso cref="T:System.Data.Entity.DbContext" />
            <seealso cref="T:iSIM.Core.Entity.Entity.IIsimContext" />
        </member>
        <member name="M:iSIM.Core.Entity.Entity.IsimContext.InitializePartial">
            <summary>
            Initializes the partial.
            </summary>
        </member>
        <member name="M:iSIM.Core.Entity.Entity.IsimContext.OnModelCreatingPartial(System.Data.Entity.DbModelBuilder)">
            <summary>
            Called when [model creating partial].
            </summary>
            <param name="modelBuilder">The model builder.</param>
        </member>
        <member name="M:iSIM.Core.Entity.Entity.IsimContext.#ctor(System.Data.Entity.Infrastructure.DbCompiledModel)">
            <summary>
            Constructs a new context instance using conventions to create the name of
            the database to which a connection will be made, and initializes it from
            the given model.  The by-convention name is the full name (namespace + class
            name) of the derived context class.  See the class remarks for how this is
            used to create a connection.
            </summary>
            <param name="model">The model that will back this context.</param>
        </member>
        <member name="M:iSIM.Core.Entity.Entity.IsimContext.#ctor(System.Data.Entity.Core.Objects.ObjectContext,System.Boolean)">
            <summary>
            Constructs a new context instance around an existing ObjectContext.  An existing
            ObjectContext to wrap with the new context.  If set to true the ObjectContext
            is disposed when the EntitiesContext is disposed, otherwise the caller must dispose
            the connection.
            </summary>
            <param name="objectContext">An existing ObjectContext to wrap with the new context.</param>
            <param name="entityContextOwnsObjectContext">If set to true the ObjectContext is disposed when the EntitiesContext is disposed,
            otherwise the caller must dispose the connection.</param>
        </member>
        <member name="M:iSIM.Core.Entity.Entity.IsimContext.Set``1">
            <summary>
            Sets this instance.
            </summary>
            <typeparam name="TEntity">The type of the entity.</typeparam>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Entity.IsimContext.SetAsAdded``1(``0)">
            <summary>
            Sets as added.
            </summary>
            <typeparam name="TEntity">The type of the entity.</typeparam>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:iSIM.Core.Entity.Entity.IsimContext.SetAsModified``1(``0)">
            <summary>
            Sets as modified.
            </summary>
            <typeparam name="TEntity">The type of the entity.</typeparam>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:iSIM.Core.Entity.Entity.IsimContext.SetAsDeleted``1(``0)">
            <summary>
            Sets as deleted.
            </summary>
            <typeparam name="TEntity">The type of the entity.</typeparam>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:iSIM.Core.Entity.Entity.IsimContext.SaveChanges">
            <summary>
            Saves all changes made in this context to the underlying database.
            </summary>
            <returns>
            The number of state entries written to the underlying database. This can include
            state entries for entities and/or relationships. Relationship state entries are created for
            many-to-many relationships and relationships where there is no foreign key property
            included in the entity class (often referred to as independent associations).
            </returns>
            <exception cref="T:iSIM.Core.Entity.Exception.FormattedDbEntityValidationException"></exception>
            <exception cref="T:iSIM.Core.Entity.Exception.FormattedDbUpdateException"></exception>
        </member>
        <member name="M:iSIM.Core.Entity.Entity.IsimContext.SaveChangesAsync">
            <summary>
            Asynchronously saves all changes made in this context to the underlying database.
            </summary>
            <returns>
            A task that represents the asynchronous save operation.
            The task result contains the number of state entries written to the underlying database. This can include
            state entries for entities and/or relationships. Relationship state entries are created for
            many-to-many relationships and relationships where there is no foreign key property
            included in the entity class (often referred to as independent associations).
            </returns>
            <exception cref="T:iSIM.Core.Entity.Exception.FormattedDbEntityValidationException"></exception>
            <exception cref="T:iSIM.Core.Entity.Exception.FormattedDbUpdateException"></exception>
            <remarks>
            Multiple active operations on the same context instance are not supported.  Use 'await' to ensure
            that any asynchronous operations have completed before calling another method on this context.
            </remarks>
        </member>
        <member name="M:iSIM.Core.Entity.Entity.IsimContext.Dispose">
            <summary>
            Calls the protected Dispose method.
            </summary>
        </member>
        <member name="M:iSIM.Core.Entity.Entity.IsimContext.GetDbEntityEntrySafely``1(``0,System.Data.Entity.EntityState)">
            <summary>
            Gets the database entity entry safely.
            </summary>
            <typeparam name="TEntity">The type of the entity.</typeparam>
            <param name="entity">The entity.</param>
            <param name="state">The state.</param>
            <exception cref="T:iSIM.Core.Common.Exception.IsimException"></exception>
        </member>
        <member name="M:iSIM.Core.Entity.Entity.IsimContext.IterateProps``1(``0,System.Data.Entity.EntityState)">
            <summary>
            Iterates the props.
            </summary>
            <typeparam name="TEntity">The type of the entity.</typeparam>
            <param name="entity">The entity.</param>
            <param name="state">The state.</param>
        </member>
        <member name="M:iSIM.Core.Entity.Entity.IsimContext.IsIEntity(System.Type)">
            <summary>
            Determines whether [is i entity] [the specified type].
            </summary>
            <param name="type">The type.</param>
            <returns>
              <c>true</c> if [is i entity] [the specified type]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblAsset.TblAssetLocation3D">
            <summary>
            Child TblAssetLocation3D where [tbl_asset_location_3D].[id_asset] point to this entity (FK_tbl_asset_location_3D_tbl_asset)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblAsset.TblBookmarks">
            <summary>
            Child TblBookmarks where [tbl_bookmark].[id_asset] point to this entity (FK_tbl_bookmark_tbl_asset)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblAsset.TblCameras">
            <summary>
            Child TblCameras where [tbl_camera].[id_asset] point to this entity (FK_tbl_camera_tbl_asset)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblAsset.TblClients">
            <summary>
            Child TblClients where [tbl_client].[id_asset] point to this entity (FK_tbl_client_tbl_asset)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblAsset.TblGisServices">
            <summary>
            Child TblGisServices where [tbl_gis_service].[id_asset] point to this entity (FK_tbl_gis_service_tbl_asset)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblAsset.TblLogEvents">
            <summary>
            Child TblLogEvents where [tbl_log_event].[id_asset] point to this entity (FK_tbl_log_event_tbl_asset)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblAsset.TblLogSystems">
            <summary>
            Child TblLogSystems where [tbl_log_system].[id_asset] point to this entity (FK_tbl_log_system_tbl_asset)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblAsset.TblRelAssetAssets_IdChildAsset">
            <summary>
            Child TblRelAssetAssets where [tbl_rel_asset_asset].[id_child_asset] point to this entity (FK_tbl_rel_asset_asset_tbl_asset)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblAsset.TblRelAssetAssets_IdParentAsset">
            <summary>
            Child TblRelAssetAssets where [tbl_rel_asset_asset].[id_parent_asset] point to this entity (FK_tbl_rel_asset_asset_tbl_asset1)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblAsset.TblRelAssetEndpoints">
            <summary>
            Child TblRelAssetEndpoints where [tbl_rel_asset_endpoint].[id_asset] point to this entity (FK_tbl_asset_ip_rel_tbl_asset)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblAsset.TblRelAuthorizationAssets">
            <summary>
            Child TblRelAuthorizationAssets where [tbl_rel_authorization_asset].[id_asset] point to this entity (FK_tbl_rel_authorization_asset_tbl_asset)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblAsset.TblRelAuthorizationRegions">
            <summary>
            Child TblRelAuthorizationRegions where [tbl_rel_authorization_region].[id_asset] point to this entity (FK_tbl_rel_authorization_region_tbl_asset)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblAsset.TblRelIncidentAssets">
            <summary>
            Child TblRelIncidentAssets where [tbl_rel_incident_asset].[id_asset] point to this entity (FK_tbl_rel_incident_asset_tbl_asset)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblAsset.TblRelVmsAssets">
            <summary>
            Child TblRelVmsAssets where [tbl_rel_vms_asset].[id_asset] point to this entity (FK_tbl_rel_vms_asset_tbl_asset)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblAsset.TblServers">
            <summary>
            Child TblServers where [tbl_server].[id_asset] point to this entity (FK_tbl_server_tbl_asset)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblAsset.TblVariableMessageSigns">
            <summary>
            Child TblVariableMessageSigns where [tbl_variable_message_sign].[id_asset] point to this entity (FK_tbl_variable_message_sign_tbl_asset)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblAsset.TblVideoAnalyticServers">
            <summary>
            Child TblVideoAnalyticServers where [tbl_video_analytic_server].[id_asset] point to this entity (FK_tbl_video_analytic_server_tbl_asset)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblAsset.TblVms">
            <summary>
            Child TblVms where [tbl_vms].[id_asset] point to this entity (FK_tbl_vms_tbl_asset)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblAsset.TblAssetLocationLine">
            <summary>
            Parent TblAssetLocationLine pointed by [tbl_asset].([IdAssetLocation], [IdAssetLocationType]) (FK_tbl_asset_tbl_asset_location_line)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblAsset.TblAssetLocationPoint">
            <summary>
            Parent TblAssetLocationPoint pointed by [tbl_asset].([IdAssetLocation], [IdAssetLocationType]) (FK_tbl_asset_tbl_asset_location_point)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblAsset.TblAssetLocationPolygon">
            <summary>
            Parent TblAssetLocationPolygon pointed by [tbl_asset].([IdAssetLocation], [IdAssetLocationType]) (FK_tbl_asset_tbl_asset_location_polygon)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblAsset.TblEnumAssetLocationType">
            <summary>
            Parent TblEnumAssetLocationType pointed by [tbl_asset].([IdAssetLocationType]) (FK_tbl_asset_tbl_enum_asset_location_type)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblAsset.TblEnumAssetType">
            <summary>
            Parent TblEnumAssetType pointed by [tbl_asset].([IdAssetType]) (FK_tbl_asset_tbl_asset_type)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblAssetLocation3D.TblAssetLocation3D2">
            <summary>
            Child TblAssetLocation3D where [tbl_asset_location_3D].[id_parent] point to this entity (FK_tbl_asset_location_3D_tbl_asset_location_3D)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblAssetLocation3D.TblAsset">
            <summary>
            Parent TblAsset pointed by [tbl_asset_location_3D].([IdAsset]) (FK_tbl_asset_location_3D_tbl_asset)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblAssetLocation3D.TblAssetLocation3D1">
            <summary>
            Parent TblAssetLocation3D pointed by [tbl_asset_location_3D].([IdParent]) (FK_tbl_asset_location_3D_tbl_asset_location_3D)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblAssetLocationLine.TblAssets">
            <summary>
            Child TblAssets where [tbl_asset].([id_asset_location], [id_asset_location_type]) point to this entity (FK_tbl_asset_tbl_asset_location_line)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblAssetLocationLine.TblEnumAssetLocationType">
            <summary>
            Parent TblEnumAssetLocationType pointed by [tbl_asset_location_line].([IdAssetLocationType]) (FK_tbl_asset_location_line_tbl_enum_asset_location_type)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblAssetLocationPoint.TblAssets">
            <summary>
            Child TblAssets where [tbl_asset].([id_asset_location], [id_asset_location_type]) point to this entity (FK_tbl_asset_tbl_asset_location_point)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblAssetLocationPoint.TblEnumAssetLocationType">
            <summary>
            Parent TblEnumAssetLocationType pointed by [tbl_asset_location_point].([IdAssetLocationType]) (FK_tbl_asset_location_point_tbl_enum_asset_location_type)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblAssetLocationPolygon.TblAssets">
            <summary>
            Child TblAssets where [tbl_asset].([id_asset_location], [id_asset_location_type]) point to this entity (FK_tbl_asset_tbl_asset_location_polygon)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblAssetLocationPolygon.TblEnumAssetLocationType">
            <summary>
            Parent TblEnumAssetLocationType pointed by [tbl_asset_location_polygon].([IdAssetLocationType]) (FK_tbl_asset_location_polygon_tbl_enum_asset_location_type)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblAuthorization.TblRelAuthorizationAssets">
            <summary>
            Child TblRelAuthorizationAssets where [tbl_rel_authorization_asset].[id_authorization] point to this entity (FK_tbl_rel_authorization_asset_tbl_authorization)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblAuthorization.TblRelAuthorizationRegions">
            <summary>
            Child TblRelAuthorizationRegions where [tbl_rel_authorization_region].[id_authorization] point to this entity (FK_tbl_rel_authorization_region_tbl_authorization)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblAuthorization.TblRelAuthorizationSchedulers">
            <summary>
            Child TblRelAuthorizationSchedulers where [tbl_rel_authorization_scheduler].[id_authorization] point to this entity (FK_tbl_authorization_schedular_rel_tbl_authorization)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblAuthorization.TblEnumRelationType_IdRelationTypeForRole">
            <summary>
            Parent TblEnumRelationType pointed by [tbl_authorization].([IdRelationTypeForRole]) (FK_tbl_authorization_tbl_enum_relation_type)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblAuthorization.TblEnumRelationType_IdRelationTypeForUser">
            <summary>
            Parent TblEnumRelationType pointed by [tbl_authorization].([IdRelationTypeForUser]) (FK_tbl_authorization_tbl_enum_relation_type1)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblAuthorization.TblEnumRole">
            <summary>
            Parent TblEnumRole pointed by [tbl_authorization].([IdRoleOrRoleGroup], [IdRelationTypeForRole]) (FK_tbl_authorization_tbl_enum_role)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblAuthorization.TblRoleGroup">
            <summary>
            Parent TblRoleGroup pointed by [tbl_authorization].([IdRoleOrRoleGroup], [IdRelationTypeForRole]) (FK_tbl_authorization_tbl_role_group)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblAuthorization.TblUser">
            <summary>
            Parent TblUser pointed by [tbl_authorization].([IdUserOrUserGroup], [IdRelationTypeForUser]) (FK_tbl_authorization_tbl_user)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblAuthorization.TblUserGroup">
            <summary>
            Parent TblUserGroup pointed by [tbl_authorization].([IdUserOrUserGroup], [IdRelationTypeForUser]) (FK_tbl_authorization_tbl_user_group)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblBookmark.TblAsset">
            <summary>
            Parent TblAsset pointed by [tbl_bookmark].([IdAsset]) (FK_tbl_bookmark_tbl_asset)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblCamera.TblAsset">
            <summary>
            Parent TblAsset pointed by [tbl_camera].([IdAsset]) (FK_tbl_camera_tbl_asset)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblCamera.TblEnumBrand">
            <summary>
            Parent TblEnumBrand pointed by [tbl_camera].([IdBrand]) (FK_tbl_camera_tbl_enum_brand)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblCamera.TblEnumCameraType">
            <summary>
            Parent TblEnumCameraType pointed by [tbl_camera].([IdCameraType]) (FK_tbl_camera_tbl_enum_camera_type1)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblCamera.TblViewPort">
            <summary>
            Parent TblViewPort pointed by [tbl_camera].([IdViewPort]) (FK_tbl_camera_tbl_enum_camera_type)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblClient.TblLogUsers">
            <summary>
            Child TblLogUsers where [tbl_log_user].[id_client] point to this entity (FK_tbl_log_user_tbl_client)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblClient.TblAsset">
            <summary>
            Parent TblAsset pointed by [tbl_client].([IdAsset]) (FK_tbl_client_tbl_asset)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblClient.TblEnumClientType">
            <summary>
            Parent TblEnumClientType pointed by [tbl_client].([IdClientType]) (FK_tbl_client_tbl_enum_client_type)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblClient.TblUser">
            <summary>
            Parent TblUser pointed by [tbl_client].([IdUserAutoLogin]) (FK_tbl_client_tbl_user)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblDatabaseVersion.TblEnumAssetType">
            <summary>
            Parent TblEnumAssetType pointed by [tbl_database_version].([IdAssetType]) (FK_tbl_database_version_tbl_enum_asset_type)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblDomainService.TblRelUserGroupDomainServices">
            <summary>
            Child TblRelUserGroupDomainServices where [tbl_rel_user_group_domain_service].[id_domain_service] point to this entity (FK_tbl_user_group_domain_service_rel_tbl_domain_service)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblDomainService.TblUsers">
            <summary>
            Child TblUsers where [tbl_user].[id_domain_service] point to this entity (FK_tbl_user_tbl_domain_service)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblDomainService.TblEndpoint">
            <summary>
            Parent TblEndpoint pointed by [tbl_domain_service].([IdEndpoint]) (FK_tbl_domain_service_tbl_endpoint)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblEndpoint.TblDomainServices">
            <summary>
            Child TblDomainServices where [tbl_domain_service].[id_endpoint] point to this entity (FK_tbl_domain_service_tbl_endpoint)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblEndpoint.TblRelAssetEndpoints">
            <summary>
            Child TblRelAssetEndpoints where [tbl_rel_asset_endpoint].[id_endpoint] point to this entity (FK_tbl_asset_ip_rel_tbl_ip_address)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblEnumAssetLocationType.TblAssets">
            <summary>
            Child TblAssets where [tbl_asset].[id_asset_location_type] point to this entity (FK_tbl_asset_tbl_enum_asset_location_type)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblEnumAssetLocationType.TblAssetLocationLines">
            <summary>
            Child TblAssetLocationLines where [tbl_asset_location_line].[id_asset_location_type] point to this entity (FK_tbl_asset_location_line_tbl_enum_asset_location_type)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblEnumAssetLocationType.TblAssetLocationPoints">
            <summary>
            Child TblAssetLocationPoints where [tbl_asset_location_point].[id_asset_location_type] point to this entity (FK_tbl_asset_location_point_tbl_enum_asset_location_type)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblEnumAssetLocationType.TblAssetLocationPolygons">
            <summary>
            Child TblAssetLocationPolygons where [tbl_asset_location_polygon].[id_asset_location_type] point to this entity (FK_tbl_asset_location_polygon_tbl_enum_asset_location_type)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblEnumAssetType.TblAssets">
            <summary>
            Child TblAssets where [tbl_asset].[id_asset_type] point to this entity (FK_tbl_asset_tbl_asset_type)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblEnumAssetType.TblDatabaseVersions">
            <summary>
            Child TblDatabaseVersions where [tbl_database_version].[id_asset_type] point to this entity (FK_tbl_database_version_tbl_enum_asset_type)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblEnumAssetType.TblEnumAssetTypes">
            <summary>
            Child TblEnumAssetTypes where [tbl_enum_asset_type].[id_parent] point to this entity (FK_tbl_enum_asset_type_tbl_enum_asset_type)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblEnumAssetType.TblIsimVersions">
            <summary>
            Child TblIsimVersions where [tbl_isim_version].[id_asset_type] point to this entity (FK_tbl_isim_version_tbl_enum_asset_type)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblEnumAssetType.TblEnumAssetType_IdParent">
            <summary>
            Parent TblEnumAssetType pointed by [tbl_enum_asset_type].([IdParent]) (FK_tbl_enum_asset_type_tbl_enum_asset_type)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblEnumBrand.TblCameras">
            <summary>
            Child TblCameras where [tbl_camera].[id_brand] point to this entity (FK_tbl_camera_tbl_enum_brand)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblEnumBrand.TblEnumVehicleModels">
            <summary>
            Child TblEnumVehicleModels where [tbl_enum_vehicle_model].[id_vehicle_brand] point to this entity (FK_tbl_enum_vehicle_model_tbl_enum_brand)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblEnumBrand.TblTrafficViolations">
            <summary>
            Child TblTrafficViolations where [tbl_traffic_violation].[id_vehicle_brand] point to this entity (FK_tbl_traffic_violation_tbl_enum_brand)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblEnumBrand.TblVms">
            <summary>
            Child TblVms where [tbl_vms].[id_brand] point to this entity (FK_tbl_vms_tbl_enum_brand)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblEnumBrand.TblEnumBrandType">
            <summary>
            Parent TblEnumBrandType pointed by [tbl_enum_brand].([IdBrandType]) (FK_tbl_enum_brand_tbl_enum_brand_type)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblEnumBrandType.TblEnumBrands">
            <summary>
            Child TblEnumBrands where [tbl_enum_brand].[id_brand_type] point to this entity (FK_tbl_enum_brand_tbl_enum_brand_type)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblEnumCameraType.TblCameras">
            <summary>
            Child TblCameras where [tbl_camera].[id_camera_type] point to this entity (FK_tbl_camera_tbl_enum_camera_type1)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblEnumClientType.TblClients">
            <summary>
            Child TblClients where [tbl_client].[id_client_type] point to this entity (FK_tbl_client_tbl_enum_client_type)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblEnumColor.TblEnumPlateTypes">
            <summary>
            Child TblEnumPlateTypes where [tbl_enum_plate_type].[id_plate_color] point to this entity (FK_tbl_enum_plate_type_tbl_enum_color)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblEnumColor.TblTrafficViolations_IdPlateColor">
            <summary>
            Child TblTrafficViolations where [tbl_traffic_violation].[id_plate_color] point to this entity (FK_tbl_traffic_violation_tbl_enum_color1)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblEnumColor.TblTrafficViolations_IdVehicleColor">
            <summary>
            Child TblTrafficViolations where [tbl_traffic_violation].[id_vehicle_color] point to this entity (FK_tbl_traffic_violation_tbl_enum_color)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblEnumColorShade.TblTrafficViolations">
            <summary>
            Child TblTrafficViolations where [tbl_traffic_violation].[id_vehicle_color_shade] point to this entity (FK_tbl_traffic_violation_tbl_enum__color_shade)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblEnumContinent.TblEnumCountries">
            <summary>
            Child TblEnumCountries where [tbl_enum_country].[id_continent] point to this entity (FK_tbl_enum_country_tbl_enum_continent)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblEnumCountry.TblTrafficViolations">
            <summary>
            Child TblTrafficViolations where [tbl_traffic_violation].[id_vehicle_country] point to this entity (FK_tbl_traffic_violation_tbl_enum_country)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblEnumCountry.TblEnumContinent">
            <summary>
            Parent TblEnumContinent pointed by [tbl_enum_country].([IdContinent]) (FK_tbl_enum_country_tbl_enum_continent)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblEnumEventType.TblLogEvents">
            <summary>
            Child TblLogEvents where [tbl_log_event].[id_event_type] point to this entity (FK_tbl_log_event_tbl_enum_event_type)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblEnumEventType.TblEnumEventTypeCategory">
            <summary>
            Parent TblEnumEventTypeCategory pointed by [tbl_enum_event_type].([IdEventTypeCategory]) (FK_tbl_event_type_tbl_event_type_category)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblEnumEventType.TblEnumLogType">
            <summary>
            Parent TblEnumLogType pointed by [tbl_enum_event_type].([IdLogType]) (FK_tbl_enum_event_type_tbl_enum_log_type)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblEnumEventTypeCategory.TblEnumEventTypes">
            <summary>
            Child TblEnumEventTypes where [tbl_enum_event_type].[id_event_type_category] point to this entity (FK_tbl_event_type_tbl_event_type_category)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblEnumIncidentStatus.TblIncidents">
            <summary>
            Child TblIncidents where [tbl_incident].[id_incident_status] point to this entity (FK_tbl_incident_tbl_incident_status)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblEnumIncidentType.TblIncidents">
            <summary>
            Child TblIncidents where [tbl_incident].[id_incident_type] point to this entity (FK_tbl_incident_tbl_enum_incident_type)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblEnumIncidentType.TblEnumIncidentTypeCategory">
            <summary>
            Parent TblEnumIncidentTypeCategory pointed by [tbl_enum_incident_type].([IdIncidentTypeCategory]) (FK_tbl_enum_incident_type_tbl_enum_incident_type_category)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblEnumIncidentTypeCategory.TblEnumIncidentTypes">
            <summary>
            Child TblEnumIncidentTypes where [tbl_enum_incident_type].[id_incident_type_category] point to this entity (FK_tbl_enum_incident_type_tbl_enum_incident_type_category)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblEnumLandmarkCategory.TblEnumLandmarkSubCategories">
            <summary>
            Child TblEnumLandmarkSubCategories where [tbl_enum_landmark_sub_category].[id_landmark_category] point to this entity (FK_tbl_enum_landmark_sub_category_tbl_enum_landmark_category)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblEnumLandmarkCategory.TblLandmarks">
            <summary>
            Child TblLandmarks where [tbl_landmark].[id_landmark_category] point to this entity (FK_tbl_landmark_tbl_enum_landmark_category)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblEnumLandmarkSubCategory.TblLandmarks">
            <summary>
            Child TblLandmarks where [tbl_landmark].[id_landmark_sub_category] point to this entity (FK_tbl_landmark_tbl_enum_landmark_sub_category)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblEnumLandmarkSubCategory.TblEnumLandmarkCategory">
            <summary>
            Parent TblEnumLandmarkCategory pointed by [tbl_enum_landmark_sub_category].([IdLandmarkCategory]) (FK_tbl_enum_landmark_sub_category_tbl_enum_landmark_category)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblEnumLayerServiceType.TblGisLayers">
            <summary>
            Child TblGisLayers where [tbl_gis_layer].[id_layer_service_type] point to this entity (FK_tbl_layer_tbl_layer_service_type)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblEnumLogType.TblEnumEventTypes">
            <summary>
            Child TblEnumEventTypes where [tbl_enum_event_type].[id_log_type] point to this entity (FK_tbl_enum_event_type_tbl_enum_log_type)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblEnumLogType.TblEnumOperationTypes">
            <summary>
            Child TblEnumOperationTypes where [tbl_enum_operation_type].[id_log_type] point to this entity (FK_tbl_enum_operation_type_tbl_enum_log_type)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblEnumLogType.TblLogEvents">
            <summary>
            Child TblLogEvents where [tbl_log_event].[id_log_type] point to this entity (FK_tbl_log_event_tbl_enum_log_type)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblEnumLogType.TblLogFiles">
            <summary>
            Child TblLogFiles where [tbl_log_file].[id_log_type] point to this entity (FK_tbl_log_file_tbl_enum_log_type)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblEnumLogType.TblLogSystems">
            <summary>
            Child TblLogSystems where [tbl_log_system].[id_log_type] point to this entity (FK_tbl_log_system_tbl_enum_log_type)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblEnumLogType.TblLogUsers">
            <summary>
            Child TblLogUsers where [tbl_log_user].[id_log_type] point to this entity (FK_tbl_log_user_tbl_enum_log_type)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblEnumMimeType.TblGisLayers">
            <summary>
            Child TblGisLayers where [tbl_gis_layer].[id_mime_type] point to this entity (FK_tbl_layer_tbl_enum_mime_type)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblEnumMimeType.TblIncidentFiles">
            <summary>
            Child TblIncidentFiles where [tbl_incident_file].[id_mime_type] point to this entity (FK_tbl_incident_file_tbl_enum_mime_type)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblEnumMimeType.TblLogFiles">
            <summary>
            Child TblLogFiles where [tbl_log_file].[id_mime_type] point to this entity (FK_tbl_log_file_tbl_enum_mime_type)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblEnumNationality.TblTrafficViolations">
            <summary>
            Child TblTrafficViolations where [tbl_traffic_violation].[id_nationaltiy] point to this entity (FK_tbl_traffic_violation_tbl_enum_nationality)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblEnumOperationType.TblLogUsers">
            <summary>
            Child TblLogUsers where [tbl_log_user].[id_operation_type] point to this entity (FK_tbl_log_audit_operation_tbl_enum_operation_type)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblEnumOperationType.TblEnumLogType">
            <summary>
            Parent TblEnumLogType pointed by [tbl_enum_operation_type].([IdLogType]) (FK_tbl_enum_operation_type_tbl_enum_log_type)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblEnumOperationType.TblEnumOperationTypeCategory">
            <summary>
            Parent TblEnumOperationTypeCategory pointed by [tbl_enum_operation_type].([IdOperationTypeCategory]) (FK_tbl_enum_operation_type_tbl_enum_operation_type_category)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblEnumOperationTypeCategory.TblEnumOperationTypes">
            <summary>
            Child TblEnumOperationTypes where [tbl_enum_operation_type].[id_operation_type_category] point to this entity (FK_tbl_enum_operation_type_tbl_enum_operation_type_category)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblEnumPlateType.TblTrafficViolations">
            <summary>
            Child TblTrafficViolations where [tbl_traffic_violation].[id_plate_type] point to this entity (FK_tbl_traffic_violation_tbl_enum_plate_type)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblEnumPlateType.TblEnumColor">
            <summary>
            Parent TblEnumColor pointed by [tbl_enum_plate_type].([IdPlateColor]) (FK_tbl_enum_plate_type_tbl_enum_color)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblEnumPriority.TblIncidents">
            <summary>
            Child TblIncidents where [tbl_incident].[id_priority] point to this entity (FK_tbl_incident_tbl_enum_priority)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblEnumPriority.TblLogEvents">
            <summary>
            Child TblLogEvents where [tbl_log_event].[id_priority] point to this entity (FK_tbl_log_event_tbl_enum_priority)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblEnumRelationType.TblAuthorizations_IdRelationTypeForRole">
            <summary>
            Child TblAuthorizations where [tbl_authorization].[id_relation_type_for_role] point to this entity (FK_tbl_authorization_tbl_enum_relation_type)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblEnumRelationType.TblAuthorizations_IdRelationTypeForUser">
            <summary>
            Child TblAuthorizations where [tbl_authorization].[id_relation_type_for_user] point to this entity (FK_tbl_authorization_tbl_enum_relation_type1)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblEnumRelationType.TblEnumRoles">
            <summary>
            Child TblEnumRoles where [tbl_enum_role].[id_relation_type] point to this entity (FK_tbl_enum_role_tbl_enum_relation_type)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblEnumRelationType.TblRelRoleRoleGroups">
            <summary>
            Child TblRelRoleRoleGroups where [tbl_rel_role_role_group].[id_relation_type] point to this entity (FK_tbl_rel_role_role_group_tbl_enum_relation_type)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblEnumRelationType.TblRelUserUserGroups">
            <summary>
            Child TblRelUserUserGroups where [tbl_rel_user_user_group].[id_relation_type] point to this entity (FK_tbl_rel_user_user_group_tbl_enum_relation_type)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblEnumRelationType.TblRoleGroups">
            <summary>
            Child TblRoleGroups where [tbl_role_group].[id_relation_type] point to this entity (FK_tbl_role_group_tbl_enum_relation_type)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblEnumRelationType.TblUsers">
            <summary>
            Child TblUsers where [tbl_user].[id_relation_type] point to this entity (FK_tbl_user_tbl_enum_relation_type)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblEnumRelationType.TblUserGroups">
            <summary>
            Child TblUserGroups where [tbl_user_group].[id_relation_type] point to this entity (FK_tbl_user_group_tbl_enum_relation_type)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblEnumResolutionStatus.TblIncidents">
            <summary>
            Child TblIncidents where [tbl_incident].[id_resolution] point to this entity (FK_tbl_incident_tbl_resolution_status)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblEnumRole.TblAuthorizations">
            <summary>
            Child TblAuthorizations where [tbl_authorization].([id_relation_type_for_role], [id_role_or_role_group]) point to this entity (FK_tbl_authorization_tbl_enum_role)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblEnumRole.TblRelRoleRoleGroups">
            <summary>
            Child TblRelRoleRoleGroups where [tbl_rel_role_role_group].([id_relation_type], [id_role_or_role_group]) point to this entity (FK_tbl_rel_role_role_group_tbl_enum_role)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblEnumRole.TblEnumRelationType">
            <summary>
            Parent TblEnumRelationType pointed by [tbl_enum_role].([IdRelationType]) (FK_tbl_enum_role_tbl_enum_relation_type)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblEnumTrafficViolationChargeType.TblTrafficViolationCharges">
            <summary>
            Child TblTrafficViolationCharges where [tbl_traffic_violation_charge].[id_violation_charge_type] point to this entity (FK_tbl_traffic_violation_charge_tbl_enum_traffic_violation_charge_type)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblEnumTrafficViolationReasonType.TblTrafficViolationReasons">
            <summary>
            Child TblTrafficViolationReasons where [tbl_traffic_violation_reason].[id_discard_reason] point to this entity (FK_tbl_traffic_violation_reason_tbl_enum_traffic_violation_reason_type)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblEnumTrafficViolationStatus.TblTrafficViolations">
            <summary>
            Child TblTrafficViolations where [tbl_traffic_violation].[id_violation_status] point to this entity (FK_tbl_traffic_violation_tbl_enum_traffic_violation_status)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblEnumTrafficViolationStatus.TblTrafficViolationReasons_IdStatusNew">
            <summary>
            Child TblTrafficViolationReasons where [tbl_traffic_violation_reason].[id_status_new] point to this entity (FK_tbl_traffic_violation_reason_tbl_enum_traffic_violation_status1)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblEnumTrafficViolationStatus.TblTrafficViolationReasons_IdStatusOld">
            <summary>
            Child TblTrafficViolationReasons where [tbl_traffic_violation_reason].[id_status_old] point to this entity (FK_tbl_traffic_violation_reason_tbl_enum_traffic_violation_status)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblEnumUserShortcutType.TblUserShortcuts">
            <summary>
            Child TblUserShortcuts where [tbl_user_shortcut].[id_shortcut_type] point to this entity (FK_tbl_user_shortcut_tbl_enum_shortcut_type)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblEnumVehicleModel.TblTrafficViolations">
            <summary>
            Child TblTrafficViolations where [tbl_traffic_violation].[id_vehicle_model] point to this entity (FK_tbl_traffic_violation_tbl_enum_vehicle_model)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblEnumVehicleModel.TblEnumBrand">
            <summary>
            Parent TblEnumBrand pointed by [tbl_enum_vehicle_model].([IdVehicleBrand]) (FK_tbl_enum_vehicle_model_tbl_enum_brand)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblEnumVehicleShape.TblTrafficViolations">
            <summary>
            Child TblTrafficViolations where [tbl_traffic_violation].[id_vehicle_shape] point to this entity (FK_tbl_traffic_violation_tbl_enum_vehicle_shape)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblEnumVehicleType.TblTrafficViolations">
            <summary>
            Child TblTrafficViolations where [tbl_traffic_violation].[id_vehicle_type] point to this entity (FK_tbl_traffic_violation_tbl_enum_vehicle_type)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblGisLayer.TblEnumLayerServiceType">
            <summary>
            Parent TblEnumLayerServiceType pointed by [tbl_gis_layer].([IdLayerServiceType]) (FK_tbl_layer_tbl_layer_service_type)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblGisLayer.TblEnumMimeType">
            <summary>
            Parent TblEnumMimeType pointed by [tbl_gis_layer].([IdMimeType]) (FK_tbl_layer_tbl_enum_mime_type)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblGisLayer.TblGisLayerGroup">
            <summary>
            Parent TblGisLayerGroup pointed by [tbl_gis_layer].([IdGisLayerGroup]) (FK_tbl_gis_layer_tbl_gis_layer_group)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblGisLayer.TblGisService">
            <summary>
            Parent TblGisService pointed by [tbl_gis_layer].([IdGisService]) (FK_tbl_gis_layer_tbl_gis_service)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblGisLayerGroup.TblGisLayers">
            <summary>
            Child TblGisLayers where [tbl_gis_layer].[id_gis_layer_group] point to this entity (FK_tbl_gis_layer_tbl_gis_layer_group)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblGisLayerGroup.TblGisLayerGroups">
            <summary>
            Child TblGisLayerGroups where [tbl_gis_layer_group].[id_parent] point to this entity (FK_tbl_layer_group_tbl_layer_group)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblGisLayerGroup.TblGisLayerGroup_IdParent">
            <summary>
            Parent TblGisLayerGroup pointed by [tbl_gis_layer_group].([IdParent]) (FK_tbl_layer_group_tbl_layer_group)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblGisService.TblGisLayers">
            <summary>
            Child TblGisLayers where [tbl_gis_layer].[id_gis_service] point to this entity (FK_tbl_gis_layer_tbl_gis_service)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblGisService.TblAsset">
            <summary>
            Parent TblAsset pointed by [tbl_gis_service].([IdAsset]) (FK_tbl_gis_service_tbl_asset)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblImageInfo.TblLogFile">
            <summary>
            Parent TblLogFile pointed by [tbl_image_info].([IdLogFile]) (FK_tbl_image_info_tbl_log_file)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblIncident.TblIncidents">
            <summary>
            Child TblIncidents where [tbl_incident].[id_parent] point to this entity (FK_tbl_incident_tbl_incident)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblIncident.TblIncidentFiles">
            <summary>
            Child TblIncidentFiles where [tbl_incident_file].[id_incident] point to this entity (FK_tbl_incident_file_tbl_incident)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblIncident.TblIncidentMessages">
            <summary>
            Child TblIncidentMessages where [tbl_incident_message].[id_incident] point to this entity (FK_tbl_incident_message_tbl_incident)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblIncident.TblRelIncidentAssets">
            <summary>
            Child TblRelIncidentAssets where [tbl_rel_incident_asset].[id_incident] point to this entity (FK_tbl_rel_incident_asset_tbl_incident)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblIncident.TblRelIncidentLogEvents">
            <summary>
            Child TblRelIncidentLogEvents where [tbl_rel_incident_log_event].[id_incident] point to this entity (FK_tbl_event_incident_rel_tbl_incident)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblIncident.TblRelUserManuelIncidents">
            <summary>
            Child TblRelUserManuelIncidents where [tbl_rel_user_manuel_incident].[id_incident] point to this entity (FK_tbl_rel_user_manuel_incident_tbl_incident)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblIncident.TblTrafficViolations">
            <summary>
            Child TblTrafficViolations where [tbl_traffic_violation].[id_incident] point to this entity (FK_tbl_traffic_violation_tbl_incident)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblIncident.TblEnumIncidentStatus">
            <summary>
            Parent TblEnumIncidentStatus pointed by [tbl_incident].([IdIncidentStatus]) (FK_tbl_incident_tbl_incident_status)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblIncident.TblEnumIncidentType">
            <summary>
            Parent TblEnumIncidentType pointed by [tbl_incident].([IdIncidentType]) (FK_tbl_incident_tbl_enum_incident_type)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblIncident.TblEnumPriority">
            <summary>
            Parent TblEnumPriority pointed by [tbl_incident].([IdPriority]) (FK_tbl_incident_tbl_enum_priority)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblIncident.TblEnumResolutionStatus">
            <summary>
            Parent TblEnumResolutionStatus pointed by [tbl_incident].([IdResolution]) (FK_tbl_incident_tbl_resolution_status)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblIncident.TblIncident_IdParent">
            <summary>
            Parent TblIncident pointed by [tbl_incident].([IdParent]) (FK_tbl_incident_tbl_incident)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblIncidentFile.TblRelTrafficViolationSelectedFiles">
            <summary>
            Child TblRelTrafficViolationSelectedFiles where [tbl_rel_traffic_violation_selected_file].[id_incident_image] point to this entity (FK_tbl_rel_traffic_violation_selected_file_tbl_incident_file)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblIncidentFile.TblEnumMimeType">
            <summary>
            Parent TblEnumMimeType pointed by [tbl_incident_file].([IdMimeType]) (FK_tbl_incident_file_tbl_enum_mime_type)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblIncidentFile.TblIncident">
            <summary>
            Parent TblIncident pointed by [tbl_incident_file].([IdIncident]) (FK_tbl_incident_file_tbl_incident)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblIncidentMessage.TblIncident">
            <summary>
            Parent TblIncident pointed by [tbl_incident_message].([IdIncident]) (FK_tbl_incident_message_tbl_incident)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblIsimVersion.TblEnumAssetType">
            <summary>
            Parent TblEnumAssetType pointed by [tbl_isim_version].([IdAssetType]) (FK_tbl_isim_version_tbl_enum_asset_type)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblLandmark.TblEnumLandmarkCategory">
            <summary>
            Parent TblEnumLandmarkCategory pointed by [tbl_landmark].([IdLandmarkCategory]) (FK_tbl_landmark_tbl_enum_landmark_category)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblLandmark.TblEnumLandmarkSubCategory">
            <summary>
            Parent TblEnumLandmarkSubCategory pointed by [tbl_landmark].([IdLandmarkSubCategory]) (FK_tbl_landmark_tbl_enum_landmark_sub_category)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblLayout.TblUser">
            <summary>
            Parent TblUser pointed by [tbl_layout].([IdUser]) (FK_tbl_layout_tbl_user)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblLogEvent.TblLogFiles">
            <summary>
            Child TblLogFiles where [tbl_log_file].([id_log], [id_log_type]) point to this entity (FK_tbl_log_file_tbl_log_event)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblLogEvent.TblRelIncidentLogEvents">
            <summary>
            Child TblRelIncidentLogEvents where [tbl_rel_incident_log_event].[id_log_event] point to this entity (FK_tbl_incident_log_event_rel_tbl_log_event)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblLogEvent.TblAsset">
            <summary>
            Parent TblAsset pointed by [tbl_log_event].([IdAsset]) (FK_tbl_log_event_tbl_asset)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblLogEvent.TblEnumEventType">
            <summary>
            Parent TblEnumEventType pointed by [tbl_log_event].([IdEventType]) (FK_tbl_log_event_tbl_enum_event_type)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblLogEvent.TblEnumLogType">
            <summary>
            Parent TblEnumLogType pointed by [tbl_log_event].([IdLogType]) (FK_tbl_log_event_tbl_enum_log_type)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblLogEvent.TblEnumPriority">
            <summary>
            Parent TblEnumPriority pointed by [tbl_log_event].([IdPriority]) (FK_tbl_log_event_tbl_enum_priority)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblLogFile.TblImageInfoes">
            <summary>
            Child TblImageInfoes where [tbl_image_info].[id_log_file] point to this entity (FK_tbl_image_info_tbl_log_file)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblLogFile.TblVideoInfoes">
            <summary>
            Child TblVideoInfoes where [tbl_video_info].[id_log_file] point to this entity (FK_tbl_video_info_tbl_log_file)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblLogFile.TblEnumLogType">
            <summary>
            Parent TblEnumLogType pointed by [tbl_log_file].([IdLogType]) (FK_tbl_log_file_tbl_enum_log_type)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblLogFile.TblEnumMimeType">
            <summary>
            Parent TblEnumMimeType pointed by [tbl_log_file].([IdMimeType]) (FK_tbl_log_file_tbl_enum_mime_type)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblLogFile.TblLogEvent">
            <summary>
            Parent TblLogEvent pointed by [tbl_log_file].([IdLog], [IdLogType]) (FK_tbl_log_file_tbl_log_event)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblLogFile.TblLogSystem">
            <summary>
            Parent TblLogSystem pointed by [tbl_log_file].([IdLog], [IdLogType]) (FK_tbl_log_file_tbl_log_system)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblLogFile.TblLogUser">
            <summary>
            Parent TblLogUser pointed by [tbl_log_file].([IdLogType], [IdLog]) (FK_tbl_log_file_tbl_log_user)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblLogSystem.TblLogFiles">
            <summary>
            Child TblLogFiles where [tbl_log_file].([id_log], [id_log_type]) point to this entity (FK_tbl_log_file_tbl_log_system)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblLogSystem.TblAsset">
            <summary>
            Parent TblAsset pointed by [tbl_log_system].([IdAsset]) (FK_tbl_log_system_tbl_asset)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblLogSystem.TblEnumLogType">
            <summary>
            Parent TblEnumLogType pointed by [tbl_log_system].([IdLogType]) (FK_tbl_log_system_tbl_enum_log_type)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblLogUser.TblLogFiles">
            <summary>
            Child TblLogFiles where [tbl_log_file].([id_log], [id_log_type]) point to this entity (FK_tbl_log_file_tbl_log_user)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblLogUser.TblClient">
            <summary>
            Parent TblClient pointed by [tbl_log_user].([IdClient]) (FK_tbl_log_user_tbl_client)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblLogUser.TblEnumLogType">
            <summary>
            Parent TblEnumLogType pointed by [tbl_log_user].([IdLogType]) (FK_tbl_log_user_tbl_enum_log_type)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblLogUser.TblEnumOperationType">
            <summary>
            Parent TblEnumOperationType pointed by [tbl_log_user].([IdOperationType]) (FK_tbl_log_audit_operation_tbl_enum_operation_type)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblLogUser.TblUser">
            <summary>
            Parent TblUser pointed by [tbl_log_user].([IdUser]) (FK_tbl_log_audit_operation_tbl_user)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblPerspective.TblPerspectiveWindowsActions">
            <summary>
            Child TblPerspectiveWindowsActions where [tbl_perspective_windows_actions].[id_perspective] point to this entity (FK_tbl_perspective_windows_actions_tbl_perspective)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblPerspective.TblUser">
            <summary>
            Parent TblUser pointed by [tbl_perspective].([IdUser]) (FK_tbl_perspective_tbl_user)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblPerspectiveWindowsAction.TblPerspective">
            <summary>
            Parent TblPerspective pointed by [tbl_perspective_windows_actions].([IdPerspective]) (FK_tbl_perspective_windows_actions_tbl_perspective)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblRelAssetAsset.TblAsset_IdChildAsset">
            <summary>
            Parent TblAsset pointed by [tbl_rel_asset_asset].([IdChildAsset]) (FK_tbl_rel_asset_asset_tbl_asset)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblRelAssetAsset.TblAsset_IdParentAsset">
            <summary>
            Parent TblAsset pointed by [tbl_rel_asset_asset].([IdParentAsset]) (FK_tbl_rel_asset_asset_tbl_asset1)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblRelAssetEndpoint.TblAsset">
            <summary>
            Parent TblAsset pointed by [tbl_rel_asset_endpoint].([IdAsset]) (FK_tbl_asset_ip_rel_tbl_asset)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblRelAssetEndpoint.TblEndpoint">
            <summary>
            Parent TblEndpoint pointed by [tbl_rel_asset_endpoint].([IdEndpoint]) (FK_tbl_asset_ip_rel_tbl_ip_address)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblRelAuthorizationAsset.TblAsset">
            <summary>
            Parent TblAsset pointed by [tbl_rel_authorization_asset].([IdAsset]) (FK_tbl_rel_authorization_asset_tbl_asset)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblRelAuthorizationAsset.TblAuthorization">
            <summary>
            Parent TblAuthorization pointed by [tbl_rel_authorization_asset].([IdAuthorization]) (FK_tbl_rel_authorization_asset_tbl_authorization)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblRelAuthorizationRegion.TblAsset">
            <summary>
            Parent TblAsset pointed by [tbl_rel_authorization_region].([IdAsset]) (FK_tbl_rel_authorization_region_tbl_asset)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblRelAuthorizationRegion.TblAuthorization">
            <summary>
            Parent TblAuthorization pointed by [tbl_rel_authorization_region].([IdAuthorization]) (FK_tbl_rel_authorization_region_tbl_authorization)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblRelAuthorizationScheduler.TblAuthorization">
            <summary>
            Parent TblAuthorization pointed by [tbl_rel_authorization_scheduler].([IdAuthorization]) (FK_tbl_authorization_schedular_rel_tbl_authorization)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblRelAuthorizationScheduler.TblScheduler">
            <summary>
            Parent TblScheduler pointed by [tbl_rel_authorization_scheduler].([IdScheduler]) (FK_tbl_authorization_schedular_rel_tbl_schedular)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblRelIncidentAsset.TblAsset">
            <summary>
            Parent TblAsset pointed by [tbl_rel_incident_asset].([IdAsset]) (FK_tbl_rel_incident_asset_tbl_asset)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblRelIncidentAsset.TblIncident">
            <summary>
            Parent TblIncident pointed by [tbl_rel_incident_asset].([IdIncident]) (FK_tbl_rel_incident_asset_tbl_incident)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblRelIncidentLogEvent.TblIncident">
            <summary>
            Parent TblIncident pointed by [tbl_rel_incident_log_event].([IdIncident]) (FK_tbl_event_incident_rel_tbl_incident)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblRelIncidentLogEvent.TblLogEvent">
            <summary>
            Parent TblLogEvent pointed by [tbl_rel_incident_log_event].([IdLogEvent]) (FK_tbl_incident_log_event_rel_tbl_log_event)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblRelRoleRoleGroup.TblEnumRelationType">
            <summary>
            Parent TblEnumRelationType pointed by [tbl_rel_role_role_group].([IdRelationType]) (FK_tbl_rel_role_role_group_tbl_enum_relation_type)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblRelRoleRoleGroup.TblEnumRole">
            <summary>
            Parent TblEnumRole pointed by [tbl_rel_role_role_group].([IdRoleOrRoleGroup], [IdRelationType]) (FK_tbl_rel_role_role_group_tbl_enum_role)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblRelRoleRoleGroup.TblRoleGroup_IdRelationType">
            <summary>
            Parent TblRoleGroup pointed by [tbl_rel_role_role_group].([IdRoleOrRoleGroup], [IdRelationType]) (FK_tbl_rel_role_role_group_tbl_role_group1)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblRelRoleRoleGroup.TblRoleGroup_IdRoleGroup">
            <summary>
            Parent TblRoleGroup pointed by [tbl_rel_role_role_group].([IdRoleGroup]) (FK_tbl_rel_role_role_group_tbl_role_group)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblRelTrafficViolationAssignedUser.TblTrafficViolation">
            <summary>
            Parent TblTrafficViolation pointed by [tbl_rel_traffic_violation_assigned_user].([IdViolation]) (FK_tbl_rel_traffic_violation_assigned_user_tbl_traffic_violation)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblRelTrafficViolationAssignedUser.TblUser">
            <summary>
            Parent TblUser pointed by [tbl_rel_traffic_violation_assigned_user].([IdUserOrUserGroup], [IdRelationType]) (FK_tbl_rel_traffic_violation_assigned_user_tbl_user)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblRelTrafficViolationAssignedUser.TblUserGroup">
            <summary>
            Parent TblUserGroup pointed by [tbl_rel_traffic_violation_assigned_user].([IdUserOrUserGroup], [IdRelationType]) (FK_tbl_rel_traffic_violation_assigned_user_tbl_user_group)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblRelTrafficViolationSelectedFile.TblIncidentFile">
            <summary>
            Parent TblIncidentFile pointed by [tbl_rel_traffic_violation_selected_file].([IdIncidentImage]) (FK_tbl_rel_traffic_violation_selected_file_tbl_incident_file)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblRelTrafficViolationSelectedFile.TblTrafficViolation">
            <summary>
            Parent TblTrafficViolation pointed by [tbl_rel_traffic_violation_selected_file].([IdViolation]) (FK_tbl_rel_traffic_violation_selected_file_tbl_traffic_violation)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblRelUserGroupDomainService.TblDomainService">
            <summary>
            Parent TblDomainService pointed by [tbl_rel_user_group_domain_service].([IdDomainService]) (FK_tbl_user_group_domain_service_rel_tbl_domain_service)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblRelUserGroupDomainService.TblUserGroup">
            <summary>
            Parent TblUserGroup pointed by [tbl_rel_user_group_domain_service].([IdUserGroup]) (FK_tbl_user_group_domain_service_rel_tbl_user_group)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblRelUserManuelIncident.TblIncident">
            <summary>
            Parent TblIncident pointed by [tbl_rel_user_manuel_incident].([IdIncident]) (FK_tbl_rel_user_manuel_incident_tbl_incident)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblRelUserManuelIncident.TblUser">
            <summary>
            Parent TblUser pointed by [tbl_rel_user_manuel_incident].([IdUser]) (FK_tbl_rel_user_manuel_incident_tbl_user)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblRelUserUserGroup.TblEnumRelationType">
            <summary>
            Parent TblEnumRelationType pointed by [tbl_rel_user_user_group].([IdRelationType]) (FK_tbl_rel_user_user_group_tbl_enum_relation_type)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblRelUserUserGroup.TblUser">
            <summary>
            Parent TblUser pointed by [tbl_rel_user_user_group].([IdUserOrUserGroup], [IdRelationType]) (FK_tbl_rel_user_user_group_tbl_user)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblRelUserUserGroup.TblUserGroup_IdRelationType">
            <summary>
            Parent TblUserGroup pointed by [tbl_rel_user_user_group].([IdUserOrUserGroup], [IdRelationType]) (FK_tbl_rel_user_user_group_tbl_user_group1)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblRelUserUserGroup.TblUserGroup_IdUserGroup">
            <summary>
            Parent TblUserGroup pointed by [tbl_rel_user_user_group].([IdUserGroup]) (FK_tbl_rel_user_user_group_tbl_user_group)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblRelVmsAsset.TblAsset">
            <summary>
            Parent TblAsset pointed by [tbl_rel_vms_asset].([IdAsset]) (FK_tbl_rel_vms_asset_tbl_asset)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblRelVmsAsset.TblVm">
            <summary>
            Parent TblVm pointed by [tbl_rel_vms_asset].([IdVmsSystem]) (FK_tbl_vms_asset_rel_tbl_vms)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblRoleGroup.TblAuthorizations">
            <summary>
            Child TblAuthorizations where [tbl_authorization].([id_relation_type_for_role], [id_role_or_role_group]) point to this entity (FK_tbl_authorization_tbl_role_group)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblRoleGroup.TblRelRoleRoleGroups_IdRelationType">
            <summary>
            Child TblRelRoleRoleGroups where [tbl_rel_role_role_group].([id_relation_type], [id_role_or_role_group]) point to this entity (FK_tbl_rel_role_role_group_tbl_role_group1)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblRoleGroup.TblRelRoleRoleGroups_IdRoleGroup">
            <summary>
            Child TblRelRoleRoleGroups where [tbl_rel_role_role_group].[id_role_group] point to this entity (FK_tbl_rel_role_role_group_tbl_role_group)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblRoleGroup.TblEnumRelationType">
            <summary>
            Parent TblEnumRelationType pointed by [tbl_role_group].([IdRelationType]) (FK_tbl_role_group_tbl_enum_relation_type)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblScheduler.TblRelAuthorizationSchedulers">
            <summary>
            Child TblRelAuthorizationSchedulers where [tbl_rel_authorization_scheduler].[id_scheduler] point to this entity (FK_tbl_authorization_schedular_rel_tbl_schedular)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblServer.TblAsset">
            <summary>
            Parent TblAsset pointed by [tbl_server].([IdAsset]) (FK_tbl_server_tbl_asset)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblTrafficViolation.TblRelTrafficViolationAssignedUsers">
            <summary>
            Child TblRelTrafficViolationAssignedUsers where [tbl_rel_traffic_violation_assigned_user].[id_violation] point to this entity (FK_tbl_rel_traffic_violation_assigned_user_tbl_traffic_violation)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblTrafficViolation.TblRelTrafficViolationSelectedFiles">
            <summary>
            Child TblRelTrafficViolationSelectedFiles where [tbl_rel_traffic_violation_selected_file].[id_violation] point to this entity (FK_tbl_rel_traffic_violation_selected_file_tbl_traffic_violation)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblTrafficViolation.TblTrafficViolationCharges">
            <summary>
            Child TblTrafficViolationCharges where [tbl_traffic_violation_charge].[id_violation] point to this entity (FK_tbl_traffic_violation_charge_tbl_traffic_violation)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblTrafficViolation.TblTrafficViolationReasons">
            <summary>
            Child TblTrafficViolationReasons where [tbl_traffic_violation_reason].[id_violation] point to this entity (FK_tbl_traffic_violation_reason_tbl_traffic_violation)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblTrafficViolation.TblEnumBrand">
            <summary>
            Parent TblEnumBrand pointed by [tbl_traffic_violation].([IdVehicleBrand]) (FK_tbl_traffic_violation_tbl_enum_brand)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblTrafficViolation.TblEnumColor_IdPlateColor">
            <summary>
            Parent TblEnumColor pointed by [tbl_traffic_violation].([IdPlateColor]) (FK_tbl_traffic_violation_tbl_enum_color1)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblTrafficViolation.TblEnumColor_IdVehicleColor">
            <summary>
            Parent TblEnumColor pointed by [tbl_traffic_violation].([IdVehicleColor]) (FK_tbl_traffic_violation_tbl_enum_color)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblTrafficViolation.TblEnumColorShade">
            <summary>
            Parent TblEnumColorShade pointed by [tbl_traffic_violation].([IdVehicleColorShade]) (FK_tbl_traffic_violation_tbl_enum__color_shade)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblTrafficViolation.TblEnumCountry">
            <summary>
            Parent TblEnumCountry pointed by [tbl_traffic_violation].([IdVehicleCountry]) (FK_tbl_traffic_violation_tbl_enum_country)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblTrafficViolation.TblEnumNationality">
            <summary>
            Parent TblEnumNationality pointed by [tbl_traffic_violation].([IdNationaltiy]) (FK_tbl_traffic_violation_tbl_enum_nationality)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblTrafficViolation.TblEnumPlateType">
            <summary>
            Parent TblEnumPlateType pointed by [tbl_traffic_violation].([IdPlateType]) (FK_tbl_traffic_violation_tbl_enum_plate_type)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblTrafficViolation.TblEnumTrafficViolationStatus">
            <summary>
            Parent TblEnumTrafficViolationStatus pointed by [tbl_traffic_violation].([IdViolationStatus]) (FK_tbl_traffic_violation_tbl_enum_traffic_violation_status)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblTrafficViolation.TblEnumVehicleModel">
            <summary>
            Parent TblEnumVehicleModel pointed by [tbl_traffic_violation].([IdVehicleModel]) (FK_tbl_traffic_violation_tbl_enum_vehicle_model)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblTrafficViolation.TblEnumVehicleShape">
            <summary>
            Parent TblEnumVehicleShape pointed by [tbl_traffic_violation].([IdVehicleShape]) (FK_tbl_traffic_violation_tbl_enum_vehicle_shape)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblTrafficViolation.TblEnumVehicleType">
            <summary>
            Parent TblEnumVehicleType pointed by [tbl_traffic_violation].([IdVehicleType]) (FK_tbl_traffic_violation_tbl_enum_vehicle_type)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblTrafficViolation.TblIncident">
            <summary>
            Parent TblIncident pointed by [tbl_traffic_violation].([IdIncident]) (FK_tbl_traffic_violation_tbl_incident)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblTrafficViolation.TblUser_IdUser">
            <summary>
            Parent TblUser pointed by [tbl_traffic_violation].([IdUser]) (FK_tbl_traffic_violation_tbl_user)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblTrafficViolation.TblUser_IdUserLastUpdate">
            <summary>
            Parent TblUser pointed by [tbl_traffic_violation].([IdUserLastUpdate]) (FK_tbl_traffic_violation_tbl_user1)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblTrafficViolationCharge.TblEnumTrafficViolationChargeType">
            <summary>
            Parent TblEnumTrafficViolationChargeType pointed by [tbl_traffic_violation_charge].([IdViolationChargeType]) (FK_tbl_traffic_violation_charge_tbl_enum_traffic_violation_charge_type)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblTrafficViolationCharge.TblTrafficViolation">
            <summary>
            Parent TblTrafficViolation pointed by [tbl_traffic_violation_charge].([IdViolation]) (FK_tbl_traffic_violation_charge_tbl_traffic_violation)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblTrafficViolationReason.TblEnumTrafficViolationReasonType">
            <summary>
            Parent TblEnumTrafficViolationReasonType pointed by [tbl_traffic_violation_reason].([IdDiscardReason]) (FK_tbl_traffic_violation_reason_tbl_enum_traffic_violation_reason_type)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblTrafficViolationReason.TblEnumTrafficViolationStatus_IdStatusNew">
            <summary>
            Parent TblEnumTrafficViolationStatus pointed by [tbl_traffic_violation_reason].([IdStatusNew]) (FK_tbl_traffic_violation_reason_tbl_enum_traffic_violation_status1)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblTrafficViolationReason.TblEnumTrafficViolationStatus_IdStatusOld">
            <summary>
            Parent TblEnumTrafficViolationStatus pointed by [tbl_traffic_violation_reason].([IdStatusOld]) (FK_tbl_traffic_violation_reason_tbl_enum_traffic_violation_status)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblTrafficViolationReason.TblTrafficViolation">
            <summary>
            Parent TblTrafficViolation pointed by [tbl_traffic_violation_reason].([IdViolation]) (FK_tbl_traffic_violation_reason_tbl_traffic_violation)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblTrafficViolationReason.TblUser">
            <summary>
            Parent TblUser pointed by [tbl_traffic_violation_reason].([IdUser]) (FK_tbl_traffic_violation_reason_tbl_user)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblUser.TblAuthorizations">
            <summary>
            Child TblAuthorizations where [tbl_authorization].([id_relation_type_for_user], [id_user_or_user_group]) point to this entity (FK_tbl_authorization_tbl_user)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblUser.TblClients">
            <summary>
            Child TblClients where [tbl_client].[id_user_auto_login] point to this entity (FK_tbl_client_tbl_user)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblUser.TblLayouts">
            <summary>
            Child TblLayouts where [tbl_layout].[id_user] point to this entity (FK_tbl_layout_tbl_user)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblUser.TblLogUsers">
            <summary>
            Child TblLogUsers where [tbl_log_user].[id_user] point to this entity (FK_tbl_log_audit_operation_tbl_user)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblUser.TblPerspectives">
            <summary>
            Child TblPerspectives where [tbl_perspective].[id_user] point to this entity (FK_tbl_perspective_tbl_user)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblUser.TblRelTrafficViolationAssignedUsers">
            <summary>
            Child TblRelTrafficViolationAssignedUsers where [tbl_rel_traffic_violation_assigned_user].([id_relation_type], [id_user_or_user_group]) point to this entity (FK_tbl_rel_traffic_violation_assigned_user_tbl_user)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblUser.TblRelUserManuelIncidents">
            <summary>
            Child TblRelUserManuelIncidents where [tbl_rel_user_manuel_incident].[id_user] point to this entity (FK_tbl_rel_user_manuel_incident_tbl_user)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblUser.TblRelUserUserGroups">
            <summary>
            Child TblRelUserUserGroups where [tbl_rel_user_user_group].([id_relation_type], [id_user_or_user_group]) point to this entity (FK_tbl_rel_user_user_group_tbl_user)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblUser.TblTrafficViolations_IdUser">
            <summary>
            Child TblTrafficViolations where [tbl_traffic_violation].[id_user] point to this entity (FK_tbl_traffic_violation_tbl_user)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblUser.TblTrafficViolations_IdUserLastUpdate">
            <summary>
            Child TblTrafficViolations where [tbl_traffic_violation].[id_user_last_update] point to this entity (FK_tbl_traffic_violation_tbl_user1)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblUser.TblTrafficViolationReasons">
            <summary>
            Child TblTrafficViolationReasons where [tbl_traffic_violation_reason].[id_user] point to this entity (FK_tbl_traffic_violation_reason_tbl_user)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblUser.TblUserFilters">
            <summary>
            Child TblUserFilters where [tbl_user_filter].[id_user] point to this entity (FK_tbl_user_filter_tbl_user)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblUser.TblUserShortcuts">
            <summary>
            Child TblUserShortcuts where [tbl_user_shortcut].[id_user] point to this entity (FK_tbl_user_shortcut_tbl_user)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblUser.TblDomainService">
            <summary>
            Parent TblDomainService pointed by [tbl_user].([IdDomainService]) (FK_tbl_user_tbl_domain_service)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblUser.TblEnumRelationType">
            <summary>
            Parent TblEnumRelationType pointed by [tbl_user].([IdRelationType]) (FK_tbl_user_tbl_enum_relation_type)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblUserFilter.TblUser">
            <summary>
            Parent TblUser pointed by [tbl_user_filter].([IdUser]) (FK_tbl_user_filter_tbl_user)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblUserGroup.TblAuthorizations">
            <summary>
            Child TblAuthorizations where [tbl_authorization].([id_relation_type_for_user], [id_user_or_user_group]) point to this entity (FK_tbl_authorization_tbl_user_group)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblUserGroup.TblRelTrafficViolationAssignedUsers">
            <summary>
            Child TblRelTrafficViolationAssignedUsers where [tbl_rel_traffic_violation_assigned_user].([id_relation_type], [id_user_or_user_group]) point to this entity (FK_tbl_rel_traffic_violation_assigned_user_tbl_user_group)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblUserGroup.TblRelUserGroupDomainServices">
            <summary>
            Child TblRelUserGroupDomainServices where [tbl_rel_user_group_domain_service].[id_user_group] point to this entity (FK_tbl_user_group_domain_service_rel_tbl_user_group)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblUserGroup.TblRelUserUserGroups_IdRelationType">
            <summary>
            Child TblRelUserUserGroups where [tbl_rel_user_user_group].([id_relation_type], [id_user_or_user_group]) point to this entity (FK_tbl_rel_user_user_group_tbl_user_group1)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblUserGroup.TblRelUserUserGroups_IdUserGroup">
            <summary>
            Child TblRelUserUserGroups where [tbl_rel_user_user_group].[id_user_group] point to this entity (FK_tbl_rel_user_user_group_tbl_user_group)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblUserGroup.TblUserGroups">
            <summary>
            Child TblUserGroups where [tbl_user_group].[id_manager_group] point to this entity (FK_tbl_user_group_tbl_user_group)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblUserGroup.TblEnumRelationType">
            <summary>
            Parent TblEnumRelationType pointed by [tbl_user_group].([IdRelationType]) (FK_tbl_user_group_tbl_enum_relation_type)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblUserGroup.TblUserGroup_IdManagerGroup">
            <summary>
            Parent TblUserGroup pointed by [tbl_user_group].([IdManagerGroup]) (FK_tbl_user_group_tbl_user_group)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblUserShortcut.TblEnumUserShortcutType">
            <summary>
            Parent TblEnumUserShortcutType pointed by [tbl_user_shortcut].([IdShortcutType]) (FK_tbl_user_shortcut_tbl_enum_shortcut_type)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblUserShortcut.TblUser">
            <summary>
            Parent TblUser pointed by [tbl_user_shortcut].([IdUser]) (FK_tbl_user_shortcut_tbl_user)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblVariableMessageSign.TblAsset">
            <summary>
            Parent TblAsset pointed by [tbl_variable_message_sign].([IdAsset]) (FK_tbl_variable_message_sign_tbl_asset)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblVideoAnalyticServer.TblAsset">
            <summary>
            Parent TblAsset pointed by [tbl_video_analytic_server].([IdAsset]) (FK_tbl_video_analytic_server_tbl_asset)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblVideoInfo.TblLogFile">
            <summary>
            Parent TblLogFile pointed by [tbl_video_info].([IdLogFile]) (FK_tbl_video_info_tbl_log_file)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblViewPort.TblCameras">
            <summary>
            Child TblCameras where [tbl_camera].[id_view_port] point to this entity (FK_tbl_camera_tbl_enum_camera_type)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblVm.TblRelVmsAssets">
            <summary>
            Child TblRelVmsAssets where [tbl_rel_vms_asset].[id_vms_system] point to this entity (FK_tbl_vms_asset_rel_tbl_vms)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblVm.TblAsset">
            <summary>
            Parent TblAsset pointed by [tbl_vms].([IdAsset]) (FK_tbl_vms_tbl_asset)
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.TblVm.TblEnumBrand">
            <summary>
            Parent TblEnumBrand pointed by [tbl_vms].([IdBrand]) (FK_tbl_vms_tbl_enum_brand)
            </summary>
        </member>
        <member name="T:iSIM.Core.Entity.Entity.EntityRepository`1">
            <summary>
            IEntityRepository implementation for DbContext instance where the TId type is Int32.
            </summary>
            <typeparam name="TEntity">Type of entity</typeparam>
            <seealso cref="!:iSIM.Core.Entity.Entity.EntityRepository&lt;TEntity, System.Int64&gt;" />
            <seealso cref="T:iSIM.Core.Entity.Interface.IEntityRepository`1" />
        </member>
        <member name="M:iSIM.Core.Entity.Entity.EntityRepository`1.#ctor(iSIM.Core.Entity.Entity.IIsimContext)">
            <summary>
            Initializes a new instance of the <see cref="T:iSIM.Core.Entity.Entity.EntityRepository`1" /> class.
            </summary>
            <param name="dbContext">The database context.</param>
        </member>
        <member name="T:iSIM.Core.Entity.Entity.NonDeletableEntityRepository`1">
            <summary>
            NonDeletableEntityRepository
            </summary>
            <typeparam name="TEntity">The type of the entity.</typeparam>
            <seealso cref="!:iSIM.Core.Entity.Entity.EntityRepository&lt;TEntity, System.Int64&gt;" />
            <seealso cref="T:iSIM.Core.Entity.Interface.IEntityRepository`1" />
        </member>
        <member name="M:iSIM.Core.Entity.Entity.NonDeletableEntityRepository`1.#ctor(iSIM.Core.Entity.Entity.IIsimContext)">
            <summary>
            Initializes a new instance of the <see cref="T:iSIM.Core.Entity.Entity.NonDeletableEntityRepository`1"/> class.
            </summary>
            <param name="dbContext">The database context.</param>
        </member>
        <member name="T:iSIM.Core.Entity.Entity.AssetEntityRepository`1">
            <summary>
            AssetEntityRepository
            </summary>
            <typeparam name="TEntity">The type of the entity.</typeparam>
            <seealso cref="!:iSIM.Core.Entity.Entity.EntityRepository&lt;TEntity, System.Int64&gt;" />
            <seealso cref="T:iSIM.Core.Entity.Interface.IEntityRepository`1" />
        </member>
        <member name="M:iSIM.Core.Entity.Entity.AssetEntityRepository`1.#ctor(iSIM.Core.Entity.Entity.IIsimContext)">
            <summary>
            Initializes a new instance of the <see cref="T:iSIM.Core.Entity.Entity.AssetEntityRepository`1"/> class.
            </summary>
            <param name="dbContext">The database context.</param>
        </member>
        <member name="T:iSIM.Core.Entity.Entity.ActiveEntityRepository`1">
            <summary>
            ActiveEntityRepository
            </summary>
            <typeparam name="TEntity">The type of the entity.</typeparam>
            <seealso cref="!:iSIM.Core.Entity.Entity.EntityRepository&lt;TEntity, System.Int64&gt;" />
            <seealso cref="T:iSIM.Core.Entity.Interface.IEntityRepository`1" />
        </member>
        <member name="M:iSIM.Core.Entity.Entity.ActiveEntityRepository`1.#ctor(iSIM.Core.Entity.Entity.IIsimContext)">
            <summary>
            Initializes a new instance of the <see cref="T:iSIM.Core.Entity.Entity.ActiveEntityRepository`1"/> class.
            </summary>
            <param name="dbContext">The database context.</param>
        </member>
        <member name="T:iSIM.Core.Entity.Entity.AllEntityRepository`1">
            <summary>
            AllEntityRepository
            </summary>
            <typeparam name="TEntity">The type of the entity.</typeparam>
            <seealso cref="!:iSIM.Core.Entity.Entity.EntityRepository&lt;TEntity, System.Int64&gt;" />
            <seealso cref="T:iSIM.Core.Entity.Interface.IEntityRepository`1" />
        </member>
        <member name="M:iSIM.Core.Entity.Entity.AllEntityRepository`1.#ctor(iSIM.Core.Entity.Entity.IIsimContext)">
            <summary>
            Initializes a new instance of the <see cref="T:iSIM.Core.Entity.Entity.AllEntityRepository`1"/> class.
            </summary>
            <param name="dbContext">The database context.</param>
        </member>
        <member name="T:iSIM.Core.Entity.Entity.EntityRepository`2">
            <summary>
            IEntityRepository implementation for DbContext instance.
            </summary>
            <typeparam name="TEntity">Type of entity</typeparam>
            <typeparam name="TId">Type of entity Id</typeparam>
            <seealso cref="!:iSIM.Core.Entity.Entity.EntityRepository&lt;TEntity, System.Int64&gt;" />
            <seealso cref="T:iSIM.Core.Entity.Interface.IEntityRepository`1" />
        </member>
        <member name="F:iSIM.Core.Entity.Entity.EntityRepository`2._log">
            <summary>
            The log
            </summary>
        </member>
        <member name="F:iSIM.Core.Entity.Entity.EntityRepository`2._dbContext">
            <summary>
            The database context
            </summary>
        </member>
        <member name="M:iSIM.Core.Entity.Entity.EntityRepository`2.#ctor(iSIM.Core.Entity.Entity.IIsimContext)">
            <summary>
            Initializes a new instance of the <see cref="T:iSIM.Core.Entity.Entity.EntityRepository`2"/> class.
            </summary>
            <param name="dbContext">The database context.</param>
            <exception cref="T:System.ArgumentNullException">dbContext</exception>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.EntityRepository`2.Context">
            <summary>
            Gets the context.
            </summary>
            <value>
            The context.
            </value>
        </member>
        <member name="M:iSIM.Core.Entity.Entity.EntityRepository`2.GetAll">
            <summary>
            Gets all.
            </summary>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Entity.EntityRepository`2.GetNumberOfRecordedData">
            <summary>
            Gets the number of recorded data.
            </summary>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Entity.EntityRepository`2.GetAllIncluding(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>
            Gets all including.
            </summary>
            <param name="includeProperties">The include properties.</param>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Entity.EntityRepository`2.FindBy(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Finds the by.
            </summary>
            <param name="predicate">The predicate.</param>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Entity.EntityRepository`2.Any(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Anies the specified predicate.
            </summary>
            <param name="predicate">The predicate.</param>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Entity.EntityRepository`2.AnyAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Anies the asynchronous.
            </summary>
            <param name="predicate">The predicate.</param>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Entity.EntityRepository`2.Paginate(System.Int32,System.Int32)">
            <summary>
            Paginates the specified page index.
            </summary>
            <param name="pageIndex">Index of the page.</param>
            <param name="pageSize">Size of the page.</param>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Entity.EntityRepository`2.Paginate``1(System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Paginates the specified page index.
            </summary>
            <typeparam name="TKey">The type of the key.</typeparam>
            <param name="pageIndex">Index of the page.</param>
            <param name="pageSize">Size of the page.</param>
            <param name="keySelector">The key selector.</param>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Entity.EntityRepository`2.Paginate``1(System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>
            Paginates the specified page index.
            </summary>
            <typeparam name="TKey">The type of the key.</typeparam>
            <param name="pageIndex">Index of the page.</param>
            <param name="pageSize">Size of the page.</param>
            <param name="keySelector">The key selector.</param>
            <param name="predicate">The predicate.</param>
            <param name="includeProperties">The include properties.</param>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Entity.EntityRepository`2.PaginateDescending``1(System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Paginates the descending.
            </summary>
            <typeparam name="TKey">The type of the key.</typeparam>
            <param name="pageIndex">Index of the page.</param>
            <param name="pageSize">Size of the page.</param>
            <param name="keySelector">The key selector.</param>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Entity.EntityRepository`2.PaginateDescending``1(System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>
            Paginates the descending.
            </summary>
            <typeparam name="TKey">The type of the key.</typeparam>
            <param name="pageIndex">Index of the page.</param>
            <param name="pageSize">Size of the page.</param>
            <param name="keySelector">The key selector.</param>
            <param name="predicate">The predicate.</param>
            <param name="includeProperties">The include properties.</param>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Entity.EntityRepository`2.GetSingle(`1)">
            <summary>
            Gets the single.
            </summary>
            <param name="id">The identifier.</param>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Entity.EntityRepository`2.GetSingleAsync(`1)">
            <summary>
            Gets the single asynchronous.
            </summary>
            <param name="id">The identifier.</param>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Entity.EntityRepository`2.GetSingleIncluding(`1,System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>
            Gets the single including.
            </summary>
            <param name="id">The identifier.</param>
            <param name="includeProperties">The include properties.</param>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Entity.EntityRepository`2.Add(`0)">
            <summary>
            Adds the specified entity.
            </summary>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:iSIM.Core.Entity.Entity.EntityRepository`2.AddEntity``1(``0)">
            <summary>
            Adds the entity.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:iSIM.Core.Entity.Entity.EntityRepository`2.AddGraph(`0)">
            <summary>
            Adds the graph.
            </summary>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:iSIM.Core.Entity.Entity.EntityRepository`2.Edit(`0)">
            <summary>
            Edits the specified entity.
            </summary>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:iSIM.Core.Entity.Entity.EntityRepository`2.EditEntity``1(``0)">
            <summary>
            Edits the entity.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:iSIM.Core.Entity.Entity.EntityRepository`2.Delete(`0)">
            <summary>
            Deletes the specified entity.
            </summary>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:iSIM.Core.Entity.Entity.EntityRepository`2.Save">
            <summary>
            Saves this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Entity.EntityRepository`2.SaveAsync">
            <summary>
            Saves the asynchronous.
            </summary>
            <returns></returns>
        </member>
        <member name="P:iSIM.Core.Entity.Entity.EntityRepository`2.Database">
            <summary>
            Gets the database.
            </summary>
            <value>
            The database.
            </value>
        </member>
        <member name="M:iSIM.Core.Entity.Entity.EntityRepository`2.GetSingleEntity``1(`1)">
            <summary>
            Gets the single entity.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="id">The identifier.</param>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Entity.EntityRepository`2.GetSingleEntityAsync``1(`1)">
            <summary>
            Gets the single entity asynchronous.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="id">The identifier.</param>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Entity.EntityRepository`2.GetSingleEntityBase``1(`1)">
            <summary>
            Gets the single entity base.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="id">The identifier.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentException">Property expected - property</exception>
        </member>
        <member name="M:iSIM.Core.Entity.Entity.EntityRepository`2.Paginate``1(System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},iSIM.Core.Entity.Entity.EntityRepository{`0,`1}.OrderByType,System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>
            Paginates the specified page index.
            </summary>
            <typeparam name="TKey">The type of the key.</typeparam>
            <param name="pageIndex">Index of the page.</param>
            <param name="pageSize">Size of the page.</param>
            <param name="keySelector">The key selector.</param>
            <param name="predicate">The predicate.</param>
            <param name="orderByType">Type of the order by.</param>
            <param name="includeProperties">The include properties.</param>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Entity.EntityRepository`2.Filter``1(System.Linq.IQueryable{`0},System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
            <summary>
            Filters the specified database set.
            </summary>
            <typeparam name="TProperty">The type of the property.</typeparam>
            <param name="dbSet">The database set.</param>
            <param name="property">The property.</param>
            <param name="value">The value.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentException">Property expected - property</exception>
        </member>
        <member name="T:iSIM.Core.Entity.Entity.EntityRepository`2.OrderByType">
            <summary>
            OrderByType
            </summary>
        </member>
        <member name="M:iSIM.Core.Entity.Entity.EntityRepository`2.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:iSIM.Core.Entity.Entity.EntityRepository`2.ApplyIsimConcepts">
            <summary>
            Applies the isim concepts.
            </summary>
        </member>
        <member name="M:iSIM.Core.Entity.Entity.EntityRepository`2.CancelDeletionForSoftDelete(System.Data.Entity.Infrastructure.DbEntityEntry)">
            <summary>
            Cancels the deletion for soft delete.
            </summary>
            <param name="entry">The entry.</param>
        </member>
        <member name="T:iSIM.Core.Entity.Exception.FormattedDbEntityValidationException">
            <summary>
            FormattedDbEntityValidationException
            </summary>
            <seealso cref="T:iSIM.Core.Common.Exception.IsimException" />
        </member>
        <member name="M:iSIM.Core.Entity.Exception.FormattedDbEntityValidationException.#ctor(System.Data.Entity.Validation.DbEntityValidationException)">
            <summary>
            Initializes a new instance of the <see cref="T:iSIM.Core.Entity.Exception.FormattedDbEntityValidationException"/> class.
            </summary>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="F:iSIM.Core.Entity.Exception.FormattedDbEntityValidationException._message">
            <summary>
            The message
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Exception.FormattedDbEntityValidationException.Message">
            <summary>
            Gets a message that describes the current exception.
            </summary>
        </member>
        <member name="T:iSIM.Core.Entity.Exception.FormattedDbUpdateException">
            <summary>
            FormattedDbUpdateException
            </summary>
            <seealso cref="T:iSIM.Core.Common.Exception.IsimException" />
        </member>
        <member name="M:iSIM.Core.Entity.Exception.FormattedDbUpdateException.#ctor(System.Data.Entity.Infrastructure.DbUpdateException)">
            <summary>
            Initializes a new instance of the <see cref="T:iSIM.Core.Entity.Exception.FormattedDbUpdateException"/> class.
            </summary>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="F:iSIM.Core.Entity.Exception.FormattedDbUpdateException._message">
            <summary>
            The message
            </summary>
        </member>
        <member name="P:iSIM.Core.Entity.Exception.FormattedDbUpdateException.Message">
            <summary>
            Gets a message that describes the current exception.
            </summary>
        </member>
        <member name="T:iSIM.Core.Entity.Extension.DbExceptionExtension">
            <summary>
            DbExceptionExtension
            </summary>
        </member>
        <member name="M:iSIM.Core.Entity.Extension.DbExceptionExtension.GetAllDbUpdateMessages(System.Data.Entity.Infrastructure.DbUpdateException)">
            <summary>
            Gets all database update messages.
            </summary>
            <param name="exception">The exception.</param>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Extension.DbExceptionExtension.GetAllValidationMessages(System.Data.Entity.Validation.DbEntityValidationException)">
            <summary>
            Gets all validation messages.
            </summary>
            <param name="exception">The exception.</param>
            <returns></returns>
        </member>
        <member name="T:iSIM.Core.Entity.Interface.IFilter">
            <summary>
            IFilter
            </summary>
        </member>
        <member name="T:iSIM.Core.Entity.Interface.IEntityRepository`1">
            <summary>
            Entity Framework interface implementation for IRepository.
            </summary>
            <typeparam name="TEntity">Type of entity which implements IEntity of int</typeparam>
            <seealso cref="!:iSIM.Core.Entity.Interface.IEntityRepository&lt;TEntity, System.Int64&gt;" />
        </member>
        <member name="T:iSIM.Core.Entity.Interface.IEntityRepository`2">
            <summary>
            Entity Framework interface implementation for IRepository.
            </summary>
            <typeparam name="TEntity">Type of entity</typeparam>
            <typeparam name="TId">Type of entity Id</typeparam>
            <seealso cref="!:iSIM.Core.Entity.Interface.IEntityRepository&lt;TEntity, System.Int64&gt;" />
        </member>
        <member name="M:iSIM.Core.Entity.Interface.IEntityRepository`2.GetAllIncluding(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>
            Gets all including.
            </summary>
            <param name="includeProperties">The include properties.</param>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Interface.IEntityRepository`2.GetSingleIncluding(`1,System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>
            Gets the single including.
            </summary>
            <param name="id">The identifier.</param>
            <param name="includeProperties">The include properties.</param>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Interface.IEntityRepository`2.Paginate``1(System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Paginates the specified page index.
            </summary>
            <typeparam name="TKey">The type of the key.</typeparam>
            <param name="pageIndex">Index of the page.</param>
            <param name="pageSize">Size of the page.</param>
            <param name="keySelector">The key selector.</param>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Interface.IEntityRepository`2.Paginate``1(System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>
            Paginates the specified page index.
            </summary>
            <typeparam name="TKey">The type of the key.</typeparam>
            <param name="pageIndex">Index of the page.</param>
            <param name="pageSize">Size of the page.</param>
            <param name="keySelector">The key selector.</param>
            <param name="predicate">The predicate.</param>
            <param name="includeProperties">The include properties.</param>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Interface.IEntityRepository`2.PaginateDescending``1(System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Paginates the descending.
            </summary>
            <typeparam name="TKey">The type of the key.</typeparam>
            <param name="pageIndex">Index of the page.</param>
            <param name="pageSize">Size of the page.</param>
            <param name="keySelector">The key selector.</param>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Interface.IEntityRepository`2.PaginateDescending``1(System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>
            Paginates the descending.
            </summary>
            <typeparam name="TKey">The type of the key.</typeparam>
            <param name="pageIndex">Index of the page.</param>
            <param name="pageSize">Size of the page.</param>
            <param name="keySelector">The key selector.</param>
            <param name="predicate">The predicate.</param>
            <param name="includeProperties">The include properties.</param>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Interface.IEntityRepository`2.Add(`0)">
            <summary>
            Adds the specified entity.
            </summary>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:iSIM.Core.Entity.Interface.IEntityRepository`2.AddEntity``1(``0)">
            <summary>
            Adds the entity.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:iSIM.Core.Entity.Interface.IEntityRepository`2.AddGraph(`0)">
            <summary>
            Adds the graph.
            </summary>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:iSIM.Core.Entity.Interface.IEntityRepository`2.Edit(`0)">
            <summary>
            Edits the specified entity.
            </summary>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:iSIM.Core.Entity.Interface.IEntityRepository`2.EditEntity``1(``0)">
            <summary>
            Edits the entity.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:iSIM.Core.Entity.Interface.IEntityRepository`2.Delete(`0)">
            <summary>
            Deletes the specified entity.
            </summary>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:iSIM.Core.Entity.Interface.IEntityRepository`2.Save">
            <summary>
            Saves this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Interface.IEntityRepository`2.SaveAsync">
            <summary>
            Saves the asynchronous.
            </summary>
            <returns></returns>
        </member>
        <member name="P:iSIM.Core.Entity.Interface.IEntityRepository`2.Database">
            <summary>
            Gets the database.
            </summary>
            <value>
            The database.
            </value>
        </member>
        <member name="T:iSIM.Core.Entity.Interface.IRepository`2">
            <summary>
            
            </summary>
            <typeparam name="TEntity">The type of the entity.</typeparam>
            <typeparam name="TId">The type of the identifier.</typeparam>
            <seealso cref="T:System.IDisposable" />
        </member>
        <member name="P:iSIM.Core.Entity.Interface.IRepository`2.Context">
            <summary>
            Gets the context.
            </summary>
            <value>
            The context.
            </value>
        </member>
        <member name="M:iSIM.Core.Entity.Interface.IRepository`2.GetAll">
            <summary>
            Gets all.
            </summary>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Interface.IRepository`2.GetNumberOfRecordedData">
            <summary>
            Gets the number of recorded data.
            </summary>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Interface.IRepository`2.FindBy(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Finds the by.
            </summary>
            <param name="predicate">The predicate.</param>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Interface.IRepository`2.Any(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Anies the specified predicate.
            </summary>
            <param name="predicate">The predicate.</param>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Interface.IRepository`2.AnyAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Anies the asynchronous.
            </summary>
            <param name="predicate">The predicate.</param>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Interface.IRepository`2.Paginate(System.Int32,System.Int32)">
            <summary>
            Paginates the specified page index.
            </summary>
            <param name="pageIndex">Index of the page.</param>
            <param name="pageSize">Size of the page.</param>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Interface.IRepository`2.GetSingle(`1)">
            <summary>
            Gets the single.
            </summary>
            <param name="id">The identifier.</param>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Interface.IRepository`2.GetSingleAsync(`1)">
            <summary>
            Gets the single asynchronous.
            </summary>
            <param name="id">The identifier.</param>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Interface.IRepository`2.GetSingleEntity``1(`1)">
            <summary>
            Gets the single entity.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="id">The identifier.</param>
            <returns></returns>
        </member>
        <member name="M:iSIM.Core.Entity.Interface.IRepository`2.GetSingleEntityAsync``1(`1)">
            <summary>
            Gets the single entity asynchronous.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="id">The identifier.</param>
            <returns></returns>
        </member>
        <member name="T:iSIM.Core.Entity.Interface.IRepository`1">
            <summary>
            
            </summary>
            <typeparam name="TEntity">The type of the entity.</typeparam>
            <seealso cref="T:System.IDisposable" />
        </member>
        <member name="T:SqlServerTypes.Utilities">
            <summary>
            Utility methods related to CLR Types for SQL Server 
            </summary>
        </member>
        <member name="M:SqlServerTypes.Utilities.LoadNativeAssemblies(System.String)">
            <summary>
            Loads the required native assemblies for the current architecture (x86 or x64)
            </summary>
            <param name="rootApplicationPath">
            Root path of the current application. Use Server.MapPath(".") for ASP.NET applications
            and AppDomain.CurrentDomain.BaseDirectory for desktop applications.
            </param>
        </member>
    </members>
</doc>
